# 1 "41-linkedstack.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h"
# 1 "<command-line>"
# 1 "41-linkedstack.oc"
0  1.001 279 TOK_IDENT     nclude
0  1.008 282 TOK_STRINGCON "oclib.h"
0  3.001 266 TOK_STRUCT    struct
0  3.008 279 TOK_IDENT     node
0  3.013 123 '{'           {
0  4.004 261 TOK_STRING    string
0  4.011 279 TOK_IDENT     data
0  4.015  59 ';'           ;
0  5.004 279 TOK_IDENT     node
0  5.009 279 TOK_IDENT     link
0  5.013  59 ';'           ;
0  6.001 125 '}'           }
0  8.001 266 TOK_STRUCT    struct
0  8.008 279 TOK_IDENT     stack
0  8.014 123 '{'           {
0  9.004 279 TOK_IDENT     node
0  9.009 279 TOK_IDENT     top
0  9.012  59 ';'           ;
0 10.001 125 '}'           }
0 12.001 279 TOK_IDENT     bool
0 12.006 279 TOK_IDENT     empty
0 12.012  40 '('           (
0 12.013 279 TOK_IDENT     stack
0 12.019 279 TOK_IDENT     stack
0 12.024  41 ')'           )
0 12.026 123 '{'           {
0 13.004 279 TOK_IDENT     assert
0 13.011  40 '('           (
0 13.012 279 TOK_IDENT     stack
0 13.018 273 TOK_NE        !=
0 13.021 267 TOK_NULL      null
0 13.025  41 ')'           )
0 13.026  59 ';'           ;
0 14.004 265 TOK_RETURN    return
0 14.011 279 TOK_IDENT     stack
0 14.016 270 TOK_ARROW     ->
0 14.018 279 TOK_IDENT     top
0 14.022 272 TOK_EQ        ==
0 14.025 267 TOK_NULL      null
0 14.029  59 ';'           ;
0 15.001 125 '}'           }
0 17.001 279 TOK_IDENT     stack
0 17.007 279 TOK_IDENT     new_stack
0 17.016  40 '('           (
0 17.017  41 ')'           )
0 17.019 123 '{'           {
0 18.004 279 TOK_IDENT     stack
0 18.010 279 TOK_IDENT     stack
0 18.016  61 '='           =
0 18.018 268 TOK_NEW       new
0 18.022 279 TOK_IDENT     stack
0 18.027  59 ';'           ;
0 19.004 279 TOK_IDENT     stack
0 19.009 270 TOK_ARROW     ->
0 19.011 279 TOK_IDENT     top
0 19.015  61 '='           =
0 19.017 267 TOK_NULL      null
0 19.021  59 ';'           ;
0 20.004 265 TOK_RETURN    return
0 20.011 279 TOK_IDENT     stack
0 20.016  59 ';'           ;
0 21.001 125 '}'           }
0 23.001 258 TOK_VOID      void
0 23.006 279 TOK_IDENT     push
0 23.011  40 '('           (
0 23.012 279 TOK_IDENT     stack
0 23.018 279 TOK_IDENT     stack
0 23.023  44 ','           ,
0 23.025 261 TOK_STRING    string
0 23.032 279 TOK_IDENT     str
0 23.035  41 ')'           )
0 23.037 123 '{'           {
0 24.004 279 TOK_IDENT     node
0 24.009 279 TOK_IDENT     tmp
0 24.013  61 '='           =
0 24.015 268 TOK_NEW       new
0 24.019 279 TOK_IDENT     node
0 24.023  59 ';'           ;
0 25.004 279 TOK_IDENT     assert
0 25.011  40 '('           (
0 25.012 279 TOK_IDENT     stack
0 25.018 273 TOK_NE        !=
0 25.021 267 TOK_NULL      null
0 25.025  41 ')'           )
0 25.026  59 ';'           ;
0 26.004 279 TOK_IDENT     tmp
0 26.007 270 TOK_ARROW     ->
0 26.009 279 TOK_IDENT     data
0 26.014  61 '='           =
0 26.016 279 TOK_IDENT     str
0 26.019  59 ';'           ;
0 27.004 279 TOK_IDENT     tmp
0 27.007 270 TOK_ARROW     ->
0 27.009 279 TOK_IDENT     link
0 27.014  61 '='           =
0 27.016 279 TOK_IDENT     stack
0 27.021 270 TOK_ARROW     ->
0 27.023 279 TOK_IDENT     top
0 27.026  59 ';'           ;
0 28.004 279 TOK_IDENT     stack
0 28.009 270 TOK_ARROW     ->
0 28.011 279 TOK_IDENT     top
0 28.015  61 '='           =
0 28.017 279 TOK_IDENT     tmp
0 28.020  59 ';'           ;
0 29.001 125 '}'           }
0 31.001 261 TOK_STRING    string
0 31.008 279 TOK_IDENT     pop
0 31.012  40 '('           (
0 31.013 279 TOK_IDENT     stack
0 31.019 279 TOK_IDENT     stack
0 31.024  41 ')'           )
0 31.026 123 '{'           {
0 32.004 261 TOK_STRING    string
0 32.011 279 TOK_IDENT     tmp
0 32.015  61 '='           =
0 32.017 279 TOK_IDENT     stack
0 32.022 270 TOK_ARROW     ->
0 32.024 279 TOK_IDENT     top
0 32.027 270 TOK_ARROW     ->
0 32.029 279 TOK_IDENT     data
0 32.033  59 ';'           ;
0 33.004 279 TOK_IDENT     assert
0 33.011  40 '('           (
0 33.012 279 TOK_IDENT     stack
0 33.018 273 TOK_NE        !=
0 33.021 267 TOK_NULL      null
0 33.025  41 ')'           )
0 33.026  59 ';'           ;
0 34.004 279 TOK_IDENT     assert
0 34.011  40 '('           (
0 34.012 278 TOK_NOT       not
0 34.016 279 TOK_IDENT     empty
0 34.022  40 '('           (
0 34.023 279 TOK_IDENT     stack
0 34.028  41 ')'           )
0 34.029  41 ')'           )
0 34.030  59 ';'           ;
0 35.004 279 TOK_IDENT     stack
0 35.009 270 TOK_ARROW     ->
0 35.011 279 TOK_IDENT     top
0 35.015  61 '='           =
0 35.017 279 TOK_IDENT     stack
0 35.022 270 TOK_ARROW     ->
0 35.024 279 TOK_IDENT     top
0 35.027 270 TOK_ARROW     ->
0 35.029 279 TOK_IDENT     link
0 35.033  59 ';'           ;
0 36.004 265 TOK_RETURN    return
0 36.011 279 TOK_IDENT     tmp
0 36.014  59 ';'           ;
0 37.001 125 '}'           }
0 39.001 260 TOK_INT       int
0 39.005 279 TOK_IDENT     main
0 39.010  40 '('           (
0 39.011 260 TOK_INT       int
0 39.015 279 TOK_IDENT     argc
0 39.019  44 ','           ,
0 39.021 261 TOK_STRING    string
0 39.027 271 TOK_BR        []
0 39.030 279 TOK_IDENT     argv
0 39.034  41 ')'           )
0 39.036 123 '{'           {
0 40.004 279 TOK_IDENT     stack
0 40.010 279 TOK_IDENT     stack
0 40.016  61 '='           =
0 40.018 279 TOK_IDENT     new_stack
0 40.027  59 ';'           ;
0 41.004 260 TOK_INT       int
0 41.008 279 TOK_IDENT     argi
0 41.013  61 '='           =
0 41.015 280 TOK_INTCON    0
0 41.016  59 ';'           ;
0 43.004 264 TOK_WHILE     while
0 43.010  40 '('           (
0 43.011 279 TOK_IDENT     argi
0 43.016 274 TOK_LT        <
0 43.018 279 TOK_IDENT     argc
0 43.022  41 ')'           )
0 43.024 123 '{'           {
0 44.007 279 TOK_IDENT     push
0 44.012  40 '('           (
0 44.013 279 TOK_IDENT     stack
0 44.018  44 ','           ,
0 44.020 279 TOK_IDENT     argv
0 44.024  91 '['           [
0 44.025 279 TOK_IDENT     argi
0 44.029  93 ']'           ]
0 44.030  41 ')'           )
0 44.031  59 ';'           ;
0 45.007 279 TOK_IDENT     argi
0 45.012  61 '='           =
0 45.014 279 TOK_IDENT     argi
0 45.019  43 '+'           +
0 45.021 280 TOK_INTCON    1
0 45.022  59 ';'           ;
0 46.004 125 '}'           }
0 48.004 264 TOK_WHILE     while
0 48.010  40 '('           (
0 48.011 278 TOK_NOT       not
0 48.015 279 TOK_IDENT     empty
0 48.021  40 '('           (
0 48.022 279 TOK_IDENT     stack
0 48.027  41 ')'           )
0 48.028  41 ')'           )
0 48.030 123 '{'           {
0 49.007 279 TOK_IDENT     putstr
0 49.014  40 '('           (
0 49.015 279 TOK_IDENT     pop
0 49.019  40 '('           (
0 49.020 279 TOK_IDENT     stack
0 49.025  41 ')'           )
0 49.026  41 ')'           )
0 49.027  59 ';'           ;
0 50.007 279 TOK_IDENT     putchar
0 50.015  40 '('           (
0 50.016 281 TOK_CHARCON   '\n'
0 50.020  41 ')'           )
0 50.021  59 ';'           ;
0 51.004 125 '}'           }
0 52.004 265 TOK_RETURN    return
0 52.011 279 TOK_IDENT     EXIT_SUCCESS
0 52.023  59 ';'           ;
0 53.001 125 '}'           }
