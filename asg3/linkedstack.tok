# 1 "linkedstack.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h"
# 1 "<command-line>"
# 1 "linkedstack.oc"
# 1 "oclib.h"
# 29 "oclib.h"
4 29.001 258 TOK_VOID      void
4 29.006 280 TOK_IDENT     __assert_fail
4 29.020 295 TOK_PARAM     (
4 29.021 261 TOK_STRING    string
4 29.028 280 TOK_IDENT     expr
4 29.032  44 ','           ,
4 29.034 261 TOK_STRING    string
4 29.041 280 TOK_IDENT     file
4 29.045  44 ','           ,
4 29.047 260 TOK_INT       int
4 29.051 280 TOK_IDENT     line
4 29.055  44 ','           ,
4 29.057 261 TOK_STRING    string
4 29.064 280 TOK_IDENT     func
4 29.068  41 ')'           )
4 29.069  59 ';'           ;
4 30.001 258 TOK_VOID      void
4 30.006 280 TOK_IDENT     putchar
4 30.014 295 TOK_PARAM     (
4 30.015 260 TOK_INT       int
4 30.019 280 TOK_IDENT     c
4 30.020  41 ')'           )
4 30.021  59 ';'           ;
4 31.001 258 TOK_VOID      void
4 31.006 280 TOK_IDENT     putint
4 31.013 295 TOK_PARAM     (
4 31.014 260 TOK_INT       int
4 31.018 280 TOK_IDENT     i
4 31.019  41 ')'           )
4 31.020  59 ';'           ;
4 32.001 258 TOK_VOID      void
4 32.006 280 TOK_IDENT     putstr
4 32.013 295 TOK_PARAM     (
4 32.014 261 TOK_STRING    string
4 32.021 280 TOK_IDENT     s
4 32.022  41 ')'           )
4 32.023  59 ';'           ;
4 33.001 260 TOK_INT       int
4 33.005 280 TOK_IDENT     getchar
4 33.012 295 TOK_PARAM     (
4 33.013  41 ')'           )
4 33.014  59 ';'           ;
4 34.001 261 TOK_STRING    string
4 34.008 280 TOK_IDENT     getword
4 34.015 295 TOK_PARAM     (
4 34.016  41 ')'           )
4 34.017  59 ';'           ;
4 35.001 261 TOK_STRING    string
4 35.008 280 TOK_IDENT     getln
4 35.013 295 TOK_PARAM     (
4 35.014  41 ')'           )
4 35.015  59 ';'           ;
4 36.001 258 TOK_VOID      void
4 36.006 280 TOK_IDENT     endl
4 36.010 295 TOK_PARAM     (
4 36.011  41 ')'           )
4 36.012  59 ';'           ;
4 37.001 258 TOK_VOID      void
4 37.006 280 TOK_IDENT     exit
4 37.011 295 TOK_PARAM     (
4 37.012 260 TOK_INT       int
4 37.016 280 TOK_IDENT     status
4 37.022  41 ')'           )
4 37.023  59 ';'           ;
# 4 "linkedstack.oc"
0  5.001 266 TOK_STRUCT    struct
0  5.008 280 TOK_IDENT     node
0  5.013 123 '{'           {
0  6.004 261 TOK_STRING    string
0  6.011 280 TOK_IDENT     data
0  6.015  59 ';'           ;
0  7.004 280 TOK_IDENT     node
0  7.009 280 TOK_IDENT     link
0  7.013  59 ';'           ;
0  8.001 125 '}'           }
0 10.001 266 TOK_STRUCT    struct
0 10.008 280 TOK_IDENT     stack
0 10.014 123 '{'           {
0 11.004 280 TOK_IDENT     node
0 11.009 280 TOK_IDENT     top
0 11.012  59 ';'           ;
0 12.001 125 '}'           }
0 14.001 260 TOK_INT       int
0 14.005 280 TOK_IDENT     empty
0 14.011 295 TOK_PARAM     (
0 14.012 280 TOK_IDENT     stack
0 14.018 280 TOK_IDENT     stack
0 14.023  41 ')'           )
0 14.025 123 '{'           {
0 15.004 123 '{'           {
0 15.006 262 TOK_IF        if
0 15.009 295 TOK_PARAM     (
0 15.010 279 TOK_NOT       not
0 15.014 295 TOK_PARAM     (
0 15.015 280 TOK_IDENT     stack
0 15.021 274 TOK_NE        !=
0 15.024 267 TOK_NULL      null
0 15.028  41 ')'           )
0 15.029  41 ')'           )
0 15.031 123 '{'           {
0 15.033 280 TOK_IDENT     __assert_fail
0 15.047 295 TOK_PARAM     (
0 15.048 283 TOK_STRINGCON "stack != null"
0 15.063  44 ','           ,
0 15.065 283 TOK_STRINGCON "linkedstack.oc"
0 15.081  44 ','           ,
0 15.083 281 TOK_INTCON    15
0 15.085  44 ','           ,
0 15.087 280 TOK_IDENT     __FUNC__
0 15.095  41 ')'           )
0 15.096  59 ';'           ;
0 15.098 125 '}'           }
0 15.100 125 '}'           }
0 15.101  59 ';'           ;
0 16.004 265 TOK_RETURN    return
0 16.011 280 TOK_IDENT     stack
0 16.016 271 TOK_ARROW     ->
0 16.018 280 TOK_IDENT     top
0 16.022 273 TOK_EQ        ==
0 16.025 267 TOK_NULL      null
0 16.029  59 ';'           ;
0 17.001 125 '}'           }
0 19.001 280 TOK_IDENT     stack
0 19.007 280 TOK_IDENT     new_stack
0 19.016 295 TOK_PARAM     (
0 19.017  41 ')'           )
0 19.019 123 '{'           {
0 20.004 280 TOK_IDENT     stack
0 20.010 280 TOK_IDENT     stack
0 20.016  61 '='           =
0 20.018 268 TOK_NEW       new
0 20.022 280 TOK_IDENT     stack
0 20.027  59 ';'           ;
0 21.004 280 TOK_IDENT     stack
0 21.009 271 TOK_ARROW     ->
0 21.011 280 TOK_IDENT     top
0 21.015  61 '='           =
0 21.017 267 TOK_NULL      null
0 21.021  59 ';'           ;
0 22.004 265 TOK_RETURN    return
0 22.011 280 TOK_IDENT     stack
0 22.016  59 ';'           ;
0 23.001 125 '}'           }
0 25.001 258 TOK_VOID      void
0 25.006 280 TOK_IDENT     push
0 25.011 295 TOK_PARAM     (
0 25.012 280 TOK_IDENT     stack
0 25.018 280 TOK_IDENT     stack
0 25.023  44 ','           ,
0 25.025 261 TOK_STRING    string
0 25.032 280 TOK_IDENT     str
0 25.035  41 ')'           )
0 25.037 123 '{'           {
0 26.004 280 TOK_IDENT     node
0 26.009 280 TOK_IDENT     tmp
0 26.013  61 '='           =
0 26.015 268 TOK_NEW       new
0 26.019 280 TOK_IDENT     node
0 26.023  59 ';'           ;
0 27.004 123 '{'           {
0 27.006 262 TOK_IF        if
0 27.009 295 TOK_PARAM     (
0 27.010 279 TOK_NOT       not
0 27.014 295 TOK_PARAM     (
0 27.015 280 TOK_IDENT     stack
0 27.021 274 TOK_NE        !=
0 27.024 267 TOK_NULL      null
0 27.028  41 ')'           )
0 27.029  41 ')'           )
0 27.031 123 '{'           {
0 27.033 280 TOK_IDENT     __assert_fail
0 27.047 295 TOK_PARAM     (
0 27.048 283 TOK_STRINGCON "stack != null"
0 27.063  44 ','           ,
0 27.065 283 TOK_STRINGCON "linkedstack.oc"
0 27.081  44 ','           ,
0 27.083 281 TOK_INTCON    27
0 27.085  44 ','           ,
0 27.087 280 TOK_IDENT     __FUNC__
0 27.095  41 ')'           )
0 27.096  59 ';'           ;
0 27.098 125 '}'           }
0 27.100 125 '}'           }
0 27.101  59 ';'           ;
0 28.004 280 TOK_IDENT     tmp
0 28.007 271 TOK_ARROW     ->
0 28.009 280 TOK_IDENT     data
0 28.014  61 '='           =
0 28.016 280 TOK_IDENT     str
0 28.019  59 ';'           ;
0 29.004 280 TOK_IDENT     tmp
0 29.007 271 TOK_ARROW     ->
0 29.009 280 TOK_IDENT     link
0 29.014  61 '='           =
0 29.016 280 TOK_IDENT     stack
0 29.021 271 TOK_ARROW     ->
0 29.023 280 TOK_IDENT     top
0 29.026  59 ';'           ;
0 30.004 280 TOK_IDENT     stack
0 30.009 271 TOK_ARROW     ->
0 30.011 280 TOK_IDENT     top
0 30.015  61 '='           =
0 30.017 280 TOK_IDENT     tmp
0 30.020  59 ';'           ;
0 31.001 125 '}'           }
0 33.001 261 TOK_STRING    string
0 33.008 280 TOK_IDENT     pop
0 33.012 295 TOK_PARAM     (
0 33.013 280 TOK_IDENT     stack
0 33.019 280 TOK_IDENT     stack
0 33.024  41 ')'           )
0 33.026 123 '{'           {
0 34.004 261 TOK_STRING    string
0 34.011 280 TOK_IDENT     tmp
0 34.015  61 '='           =
0 34.017 280 TOK_IDENT     stack
0 34.022 271 TOK_ARROW     ->
0 34.024 280 TOK_IDENT     top
0 34.027 271 TOK_ARROW     ->
0 34.029 280 TOK_IDENT     data
0 34.033  59 ';'           ;
0 35.004 123 '{'           {
0 35.006 262 TOK_IF        if
0 35.009 295 TOK_PARAM     (
0 35.010 279 TOK_NOT       not
0 35.014 295 TOK_PARAM     (
0 35.015 280 TOK_IDENT     stack
0 35.021 274 TOK_NE        !=
0 35.024 267 TOK_NULL      null
0 35.028  41 ')'           )
0 35.029  41 ')'           )
0 35.031 123 '{'           {
0 35.033 280 TOK_IDENT     __assert_fail
0 35.047 295 TOK_PARAM     (
0 35.048 283 TOK_STRINGCON "stack != null"
0 35.063  44 ','           ,
0 35.065 283 TOK_STRINGCON "linkedstack.oc"
0 35.081  44 ','           ,
0 35.083 281 TOK_INTCON    35
0 35.085  44 ','           ,
0 35.087 280 TOK_IDENT     __FUNC__
0 35.095  41 ')'           )
0 35.096  59 ';'           ;
0 35.098 125 '}'           }
0 35.100 125 '}'           }
0 35.101  59 ';'           ;
0 36.004 123 '{'           {
0 36.006 262 TOK_IF        if
0 36.009 295 TOK_PARAM     (
0 36.010 279 TOK_NOT       not
0 36.014 295 TOK_PARAM     (
0 36.015 279 TOK_NOT       not
0 36.019 280 TOK_IDENT     empty
0 36.025 295 TOK_PARAM     (
0 36.026 280 TOK_IDENT     stack
0 36.031  41 ')'           )
0 36.032  41 ')'           )
0 36.033  41 ')'           )
0 36.035 123 '{'           {
0 36.037 280 TOK_IDENT     __assert_fail
0 36.051 295 TOK_PARAM     (
0 36.052 283 TOK_STRINGCON "not empty (stack)"
0 36.071  44 ','           ,
0 36.073 283 TOK_STRINGCON "linkedstack.oc"
0 36.089  44 ','           ,
0 36.091 281 TOK_INTCON    36
0 36.093  44 ','           ,
0 36.095 280 TOK_IDENT     __FUNC__
0 36.103  41 ')'           )
0 36.104  59 ';'           ;
0 36.106 125 '}'           }
0 36.108 125 '}'           }
0 36.109  59 ';'           ;
0 37.004 280 TOK_IDENT     stack
0 37.009 271 TOK_ARROW     ->
0 37.011 280 TOK_IDENT     top
0 37.015  61 '='           =
0 37.017 280 TOK_IDENT     stack
0 37.022 271 TOK_ARROW     ->
0 37.024 280 TOK_IDENT     top
0 37.027 271 TOK_ARROW     ->
0 37.029 280 TOK_IDENT     link
0 37.033  59 ';'           ;
0 38.004 265 TOK_RETURN    return
0 38.011 280 TOK_IDENT     tmp
0 38.014  59 ';'           ;
0 39.001 125 '}'           }
0 41.001 260 TOK_INT       int
0 41.005 280 TOK_IDENT     main
0 41.010 295 TOK_PARAM     (
0 41.011 260 TOK_INT       int
0 41.015 280 TOK_IDENT     argc
0 41.019  44 ','           ,
0 41.021 261 TOK_STRING    string
0 41.027 270 TOK_ARRAY     []
0 41.030 280 TOK_IDENT     argv
0 41.034  41 ')'           )
0 41.036 123 '{'           {
0 42.004 280 TOK_IDENT     stack
0 42.010 280 TOK_IDENT     stack
0 42.016  61 '='           =
0 42.018 280 TOK_IDENT     new_stack
0 42.027  59 ';'           ;
0 43.004 260 TOK_INT       int
0 43.008 280 TOK_IDENT     argi
0 43.013  61 '='           =
0 43.015 281 TOK_INTCON    0
0 43.016  59 ';'           ;
0 45.004 264 TOK_WHILE     while
0 45.010 295 TOK_PARAM     (
0 45.011 280 TOK_IDENT     argi
0 45.016 275 TOK_LT        <
0 45.018 280 TOK_IDENT     argc
0 45.022  41 ')'           )
0 45.024 123 '{'           {
0 46.007 280 TOK_IDENT     push
0 46.012 295 TOK_PARAM     (
0 46.013 280 TOK_IDENT     stack
0 46.018  44 ','           ,
0 46.020 280 TOK_IDENT     argv
0 46.024  91 '['           [
0 46.025 280 TOK_IDENT     argi
0 46.029  93 ']'           ]
0 46.030  41 ')'           )
0 46.031  59 ';'           ;
0 47.007 280 TOK_IDENT     argi
0 47.012  61 '='           =
0 47.014 280 TOK_IDENT     argi
0 47.019  43 '+'           +
0 47.021 281 TOK_INTCON    1
0 47.022  59 ';'           ;
0 48.004 125 '}'           }
0 50.004 264 TOK_WHILE     while
0 50.010 295 TOK_PARAM     (
0 50.011 279 TOK_NOT       not
0 50.015 280 TOK_IDENT     empty
0 50.021 295 TOK_PARAM     (
0 50.022 280 TOK_IDENT     stack
0 50.027  41 ')'           )
0 50.028  41 ')'           )
0 50.030 123 '{'           {
0 51.007 280 TOK_IDENT     putstr
0 51.014 295 TOK_PARAM     (
0 51.015 280 TOK_IDENT     pop
0 51.019 295 TOK_PARAM     (
0 51.020 280 TOK_IDENT     stack
0 51.025  41 ')'           )
0 51.026  41 ')'           )
0 51.027  59 ';'           ;
0 52.007 280 TOK_IDENT     putchar
0 52.015 295 TOK_PARAM     (
0 52.016 282 TOK_CHARCON   '\n'
0 52.020  41 ')'           )
0 52.021  59 ';'           ;
0 53.004 125 '}'           }
0 54.004 265 TOK_RETURN    return
0 54.011 281 TOK_INTCON    0
0 54.012  59 ';'           ;
0 55.001 125 '}'           }
