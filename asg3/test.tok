# 1 "test.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h"
# 1 "<command-line>"
# 1 "test.oc"
0  1.001 266 TOK_STRUCT    struct
0  1.008 280 TOK_IDENT     node
0  1.013 123 '{'           {
0  2.004 260 TOK_INT       int
0  2.008 280 TOK_IDENT     foo
0  2.011  59 ';'           ;
0  3.004 280 TOK_IDENT     node
0  3.009 280 TOK_IDENT     link
0  3.013  59 ';'           ;
0  4.001 125 '}'           }
0  6.001 280 TOK_IDENT     node
0  6.006 280 TOK_IDENT     func
0  6.011 295 TOK_PARAM     (
0  6.012 280 TOK_IDENT     node
0  6.017 280 TOK_IDENT     head
0  6.021  44 ','           ,
0  6.023 260 TOK_INT       int
0  6.027 280 TOK_IDENT     length
0  6.033  41 ')'           )
0  6.035 123 '{'           {
0  7.004 260 TOK_INT       int
0  7.008 280 TOK_IDENT     a
0  7.010  61 '='           =
0  7.012 281 TOK_INTCON    0
0  7.013  59 ';'           ;
0  8.004 261 TOK_STRING    string
0  8.011 280 TOK_IDENT     b
0  8.013  61 '='           =
0  8.015 283 TOK_STRINGCON ""
0  8.017  59 ';'           ;
0  9.004 280 TOK_IDENT     node
0  9.009 280 TOK_IDENT     c
0  9.011  61 '='           =
0  9.013 268 TOK_NEW       new
0  9.017 280 TOK_IDENT     node
0  9.021  59 ';'           ;
0 10.004 281 TOK_INTCON    6
0 10.006  43 '+'           +
0 10.008 281 TOK_INTCON    6
0 10.009  59 ';'           ;
0 11.004 281 TOK_INTCON    6
0 11.006  43 '+'           +
0 11.008 280 TOK_IDENT     a
0 11.009  59 ';'           ;
0 12.004 281 TOK_INTCON    6
0 12.006  43 '+'           +
0 12.008 280 TOK_IDENT     b
0 12.009  59 ';'           ;
0 13.004  43 '+'           +
0 13.005 281 TOK_INTCON    5
0 13.006  59 ';'           ;
0 14.004  45 '-'           -
0 14.005 281 TOK_INTCON    4
0 14.006  59 ';'           ;
0 15.004  45 '-'           -
0 15.005 280 TOK_IDENT     b
0 15.006  59 ';'           ;
0 16.004 260 TOK_INT       int
0 16.007 270 TOK_ARRAY     []
0 16.010 280 TOK_IDENT     d
0 16.012  61 '='           =
0 16.014 281 TOK_INTCON    0
0 16.015  59 ';'           ;
0 17.004 262 TOK_IF        if
0 17.007 295 TOK_PARAM     (
0 17.009 280 TOK_IDENT     a
0 17.011 275 TOK_LT        <
0 17.013 283 TOK_STRINGCON "hi"
0 17.018  41 ')'           )
0 17.020 123 '{'           {
0 18.007 280 TOK_IDENT     a
0 18.009  61 '='           =
0 18.011 280 TOK_IDENT     length
0 18.017  59 ';'           ;
0 19.007 280 TOK_IDENT     c
0 19.009  61 '='           =
0 19.011 280 TOK_IDENT     c
0 19.012  46 '.'           .
0 19.013 280 TOK_IDENT     link
0 19.017  59 ';'           ;
0 20.004 125 '}'           }
0 25.006 263 TOK_ELSE      else
0 25.011 123 '{'           {
0 26.006 262 TOK_IF        if
0 26.009 295 TOK_PARAM     (
0 26.011 281 TOK_INTCON    0
0 26.012 273 TOK_EQ        ==
0 26.014 281 TOK_INTCON    0
0 26.016  41 ')'           )
0 26.018 280 TOK_IDENT     b
0 26.020  61 '='           =
0 26.022 281 TOK_INTCON    8
0 26.023  59 ';'           ;
0 27.011 263 TOK_ELSE      else
0 27.016 280 TOK_IDENT     a
0 27.018  61 '='           =
0 27.020 283 TOK_STRINGCON "foo"
0 27.025  59 ';'           ;
0 28.005 125 '}'           }
0 29.001 125 '}'           }
0 31.001 260 TOK_INT       int
0 31.005 280 TOK_IDENT     hi
0 31.008 295 TOK_PARAM     (
0 31.009 280 TOK_IDENT     node
0 31.013 270 TOK_ARRAY     []
0 31.016 280 TOK_IDENT     length
0 31.022  41 ')'           )
0 31.024 123 '{'           {
0 32.004 280 TOK_IDENT     node
0 32.008 270 TOK_ARRAY     []
0 32.011 280 TOK_IDENT     ucsc
0 32.016  61 '='           =
0 32.018 281 TOK_INTCON    10
0 32.020  59 ';'           ;
0 33.001 125 '}'           }
