# 1 "test.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h"
# 1 "<command-line>"
# 1 "test.oc"
0  1.001 266 TOK_STRUCT    struct
0  1.008 280 TOK_IDENT     node
0  1.013 123 '{'           {
0  2.004 260 TOK_INT       int
0  2.008 280 TOK_IDENT     foo
0  2.011  59 ';'           ;
0  3.004 280 TOK_IDENT     node
0  3.009 280 TOK_IDENT     link
0  3.013  59 ';'           ;
0  4.001 125 '}'           }
0  6.001 280 TOK_IDENT     node
0  6.006 280 TOK_IDENT     func
0  6.011 295 TOK_PARAM     (
0  6.012 280 TOK_IDENT     node
0  6.017 280 TOK_IDENT     head
0  6.021  44 ','           ,
0  6.023 260 TOK_INT       int
0  6.027 280 TOK_IDENT     length
0  6.033  41 ')'           )
0  6.035 123 '{'           {
0  7.004 260 TOK_INT       int
0  7.008 280 TOK_IDENT     a
0  7.010  61 '='           =
0  7.012 283 TOK_STRINGCON "yes"
0  7.017  59 ';'           ;
0  8.004 261 TOK_STRING    string
0  8.011 280 TOK_IDENT     b
0  8.013  61 '='           =
0  8.015 283 TOK_STRINGCON ""
0  8.017  59 ';'           ;
0  9.004 280 TOK_IDENT     node
0  9.009 280 TOK_IDENT     c
0  9.011  61 '='           =
0  9.013 268 TOK_NEW       new
0  9.017 280 TOK_IDENT     node
0  9.021  59 ';'           ;
0 10.004 260 TOK_INT       int
0 10.007 270 TOK_ARRAY     []
0 10.010 280 TOK_IDENT     d
0 10.012  61 '='           =
0 10.014 281 TOK_INTCON    0
0 10.015  59 ';'           ;
0 11.004 280 TOK_IDENT     b
0 11.006  61 '='           =
0 11.008 283 TOK_STRINGCON "yes"
0 11.013  59 ';'           ;
0 12.004 280 TOK_IDENT     func
0 12.008 295 TOK_PARAM     (
0 12.009 280 TOK_IDENT     yus
0 12.012  44 ','           ,
0 12.014 280 TOK_IDENT     yus
0 12.017  41 ')'           )
0 12.018  59 ';'           ;
0 13.004 262 TOK_IF        if
0 13.007 295 TOK_PARAM     (
0 13.009 280 TOK_IDENT     a
0 13.011 275 TOK_LT        <
0 13.013 283 TOK_STRINGCON "hi"
0 13.018  41 ')'           )
0 13.020 123 '{'           {
0 14.007 280 TOK_IDENT     a
0 14.009  61 '='           =
0 14.011 280 TOK_IDENT     length
0 14.017  59 ';'           ;
0 15.007 280 TOK_IDENT     c
0 15.009  61 '='           =
0 15.011 280 TOK_IDENT     c
0 15.012  46 '.'           .
0 15.013 280 TOK_IDENT     link
0 15.017  59 ';'           ;
0 16.004 125 '}'           }
0 21.006 263 TOK_ELSE      else
0 21.011 123 '{'           {
0 22.006 262 TOK_IF        if
0 22.009 295 TOK_PARAM     (
0 22.011 281 TOK_INTCON    0
0 22.012 273 TOK_EQ        ==
0 22.014 281 TOK_INTCON    0
0 22.016  41 ')'           )
0 22.018 280 TOK_IDENT     b
0 22.020  61 '='           =
0 22.022 281 TOK_INTCON    8
0 22.023  59 ';'           ;
0 23.011 263 TOK_ELSE      else
0 23.016 280 TOK_IDENT     a
0 23.018  61 '='           =
0 23.020 283 TOK_STRINGCON "foo"
0 23.025  59 ';'           ;
0 24.005 125 '}'           }
0 25.001 125 '}'           }
0 27.001 258 TOK_VOID      void
0 27.006 280 TOK_IDENT     hi
0 27.009 295 TOK_PARAM     (
0 27.010 280 TOK_IDENT     node
0 27.014 270 TOK_ARRAY     []
0 27.017 280 TOK_IDENT     length
0 27.023  41 ')'           )
0 27.025 123 '{'           {
0 28.004 280 TOK_IDENT     node
0 28.008 270 TOK_ARRAY     []
0 28.011 280 TOK_IDENT     ucsc
0 28.016  61 '='           =
0 28.018 281 TOK_INTCON    10
0 28.020  59 ';'           ;
0 29.004 265 TOK_RETURN    return
0 29.011 283 TOK_STRINGCON "yes"
0 29.016  59 ';'           ;
0 30.001 125 '}'           }
