# 1 "test.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h"
# 1 "<command-line>"
# 1 "test.oc"
0  1.001 266 TOK_STRUCT    struct
0  1.008 280 TOK_IDENT     node
0  1.013 123 '{'           {
0  2.004 260 TOK_INT       int
0  2.008 280 TOK_IDENT     foo
0  2.011  59 ';'           ;
0  3.004 280 TOK_IDENT     node
0  3.009 280 TOK_IDENT     link
0  3.013  59 ';'           ;
0  4.004 261 TOK_STRING    string
0  4.011 280 TOK_IDENT     bar
0  4.014  59 ';'           ;
0  5.001 125 '}'           }
0  7.001 280 TOK_IDENT     node
0  7.006 280 TOK_IDENT     func
0  7.011 295 TOK_PARAM     (
0  7.012 280 TOK_IDENT     node
0  7.017 280 TOK_IDENT     head
0  7.021  44 ','           ,
0  7.023 260 TOK_INT       int
0  7.027 280 TOK_IDENT     length
0  7.033  41 ')'           )
0  7.035 123 '{'           {
0  8.004 260 TOK_INT       int
0  8.008 280 TOK_IDENT     a
0  8.010  61 '='           =
0  8.012 281 TOK_INTCON    0
0  8.013  59 ';'           ;
0  9.004 280 TOK_IDENT     a
0  9.006  61 '='           =
0  9.008 280 TOK_IDENT     node
0  9.012 271 TOK_ARROW     ->
0  9.014 280 TOK_IDENT     bar
0  9.017  59 ';'           ;
0 10.004 261 TOK_STRING    string
0 10.011 280 TOK_IDENT     b
0 10.013  61 '='           =
0 10.015 283 TOK_STRINGCON ""
0 10.017  59 ';'           ;
0 11.004 280 TOK_IDENT     b
0 11.005  91 '['           [
0 11.006 281 TOK_INTCON    5
0 11.007  93 ']'           ]
0 11.008  59 ';'           ;
0 12.004 280 TOK_IDENT     node
0 12.009 280 TOK_IDENT     c
0 12.011  61 '='           =
0 12.013 268 TOK_NEW       new
0 12.017 280 TOK_IDENT     node
0 12.021  59 ';'           ;
0 13.004 260 TOK_INT       int
0 13.007 270 TOK_ARRAY     []
0 13.010 280 TOK_IDENT     d
0 13.012  61 '='           =
0 13.014 281 TOK_INTCON    0
0 13.015  59 ';'           ;
0 14.004 280 TOK_IDENT     b
0 14.006  61 '='           =
0 14.008 283 TOK_STRINGCON "yes"
0 14.013  59 ';'           ;
0 15.004 280 TOK_IDENT     func
0 15.008 295 TOK_PARAM     (
0 15.009 280 TOK_IDENT     yus
0 15.012  44 ','           ,
0 15.014 280 TOK_IDENT     yus
0 15.017  41 ')'           )
0 15.018  59 ';'           ;
0 16.004 262 TOK_IF        if
0 16.007 295 TOK_PARAM     (
0 16.009 280 TOK_IDENT     a
0 16.011 275 TOK_LT        <
0 16.013 283 TOK_STRINGCON "hi"
0 16.018  41 ')'           )
0 16.020 123 '{'           {
0 17.007 280 TOK_IDENT     a
0 17.009  61 '='           =
0 17.011 280 TOK_IDENT     length
0 17.017  59 ';'           ;
0 18.007 280 TOK_IDENT     c
0 18.009  61 '='           =
0 18.011 280 TOK_IDENT     c
0 18.012  46 '.'           .
0 18.013 280 TOK_IDENT     link
0 18.017  59 ';'           ;
0 19.004 125 '}'           }
0 24.006 263 TOK_ELSE      else
0 24.011 123 '{'           {
0 25.006 262 TOK_IF        if
0 25.009 295 TOK_PARAM     (
0 25.011 281 TOK_INTCON    0
0 25.012 273 TOK_EQ        ==
0 25.014 281 TOK_INTCON    0
0 25.016  41 ')'           )
0 25.018 280 TOK_IDENT     b
0 25.020  61 '='           =
0 25.022 281 TOK_INTCON    8
0 25.023  59 ';'           ;
0 26.011 263 TOK_ELSE      else
0 26.016 280 TOK_IDENT     a
0 26.018  61 '='           =
0 26.020 283 TOK_STRINGCON "foo"
0 26.025  59 ';'           ;
0 27.005 125 '}'           }
0 28.001 125 '}'           }
0 30.001 258 TOK_VOID      void
0 30.006 280 TOK_IDENT     hi
0 30.009 295 TOK_PARAM     (
0 30.010 280 TOK_IDENT     node
0 30.014 270 TOK_ARRAY     []
0 30.017 280 TOK_IDENT     length
0 30.023  41 ')'           )
0 30.025 123 '{'           {
0 31.004 280 TOK_IDENT     node
0 31.008 270 TOK_ARRAY     []
0 31.011 280 TOK_IDENT     ucsc
0 31.016  61 '='           =
0 31.018 281 TOK_INTCON    10
0 31.020  59 ';'           ;
0 32.004 265 TOK_RETURN    return
0 32.011 283 TOK_STRINGCON "yes"
0 32.016  59 ';'           ;
0 33.001 125 '}'           }
