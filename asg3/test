;-1.  1: # 1 "arraystack.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "arraystack.oc"
; 0.  1: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 2 "arraystack.oc" 2
; 0.  2: 
; 0.  3: 
; 0.  4: 
; 0.  5: struct stack {
; 0.  6:    string[] data;
; 0.  7:    int size;
; 0.  8:    int top;
; 0.  9: }
; 0. 10: 
; 0. 11: stack new_stack (int size) {
; 0. 12:    stack stack = new stack;
; 0. 13:    stack->data = new string[size];
; 0. 14:    stack->size = size;
; 0. 15:    stack->top = NULL;
; 0. 16:    return stack;
; 0. 17: }
; 0. 18: 
; 0. 19: void push (stack stack, string str) {
; 0. 20:    { if (not (stack->top < stack->size - 1)) { __assert_fail ("stack->top < stack->size - 1", "arraystack.oc", 20, __FUNC__); } };
; 0. 21:    stack->top = stack->top + 1;
; 0. 22:    stack->data[stack->top] = str;
; 0. 23: }
; 0. 24: 
; 0. 25: string pop (stack stack) {
; 0. 26:    string tmp = stack->data[stack->top];
; 0. 27:    { if (not (stack->top != (-1))) { __assert_fail ("stack->top != EMPTY", "arraystack.oc", 27, __FUNC__); } };
; 0. 28:    stack->top = stack->top - 1;
; 0. 29:    return tmp;
; 0. 30: }
; 0. 31: 
; 0. 32: int empty (stack stack) {
; 0. 33:    return stack->top == (-1);
; 0. 34: }
; 0. 35: 
; 0. 36: int main (int argc, string[] argv) {
; 0. 37:    stack stack = new_stack (100);
; 0. 38:    int argi = 0;
; 0. 39: 
; 0. 40:    while (argi < argc) {
; 0. 41:       push (stack, argv[argi]);
; 0. 42:       argi = argi + 1;
; 0. 43:    }
; 0. 44: 
; 0. 45:    while (not empty (stack)) {
; 0. 46:       putstr (pop (stack));
; 0. 47:       putchar ('\n');
; 0. 48:    }
; 0. 49: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
stack (0.5.8) {0} struct stack
    data (0.6.13) string array field 0
    size (0.7.8) int field 1
    top (0.8.8) int field 2

new_stack (0.11.7) {0} struct stack function
    size (0.11.22) {1} int variable lval param 0
    stack (0.12.10) {1} struct stack variable lval local 0

push (0.19.6) {1} void function
    stack (0.19.18) {2} struct stack variable lval param 0
    str (0.19.32) {2} string variable lval param 1

pop (0.25.8) {2} string function
    stack (0.25.19) {3} struct stack variable lval param 0
    tmp (0.26.11) {3} string variable lval local 0

empty (0.32.5) {3} int function
    stack (0.32.18) {4} struct stack variable lval param 0

main (0.36.5) {4} int function
    argc (0.36.15) {5} int variable lval param 0
    argv (0.36.30) {5} string array variable lval param 1
    stack (0.37.10) {5} struct stack variable lval local 0
    argi (0.38.8) {5} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| STRUCT "struct" (0.5.1) {0} 
| | TYPEID "stack" (0.5.8) {0} struct stack 
| | ARRAY "[]" (0.6.10) {0} 
| | | STRING "string" (0.6.4) {0} 
| | | | FIELD "data" (0.6.13) {0} string array field 
| | INT "int" (0.7.4) {0} 
| | | FIELD "size" (0.7.8) {0} int field 
| | INT "int" (0.8.4) {0} 
| | | FIELD "top" (0.8.8) {0} int field 
| FUNCTION "" (0.11.1) {0} 
| | TYPEID "stack" (0.11.1) {0} typeid 
| | | DECLID "new_stack" (0.11.7) {0} struct stack function 
| | PARAM "(" (0.11.17) {1} 
| | | INT "int" (0.11.18) {1} 
| | | | DECLID "size" (0.11.22) {1} int variable lval param (0.11.18) 
| | BLOCK "{" (0.11.28) {1} 
| | | VARDECL "=" (0.12.16) {1} 
| | | | TYPEID "stack" (0.12.4) {1} typeid 
| | | | | DECLID "stack" (0.12.10) {1} struct stack variable lval local (0.12.4) 
| | | | NEW "new" (0.12.18) {1} 
| | | | | TYPEID "stack" (0.12.22) {1} typeid 
| | | '=' "=" (0.13.16) {1} string array vreg 
| | | | ARROW "->" (0.13.9) {1} string array lval vaddr 
| | | | | DECLID "stack" (0.13.4) {1} struct stack variable lval 
| | | | | FIELD "data" (0.13.11) {1} field 
| | | | NEW "new" (0.13.18) {1} 
| | | | | NEWARRAY "[" (0.13.28) {1} array vreg 
| | | | | | STRING "string" (0.13.22) {1} 
| | | | | | DECLID "size" (0.13.29) {1} variable 
| | | '=' "=" (0.14.16) {1} int vreg 
| | | | ARROW "->" (0.14.9) {1} int lval vaddr 
| | | | | DECLID "stack" (0.14.4) {1} struct stack variable lval 
| | | | | FIELD "size" (0.14.11) {1} field 
| | | | DECLID "size" (0.14.18) {1} variable 
| | | '=' "=" (0.15.15) {1} int vreg 
| | | | ARROW "->" (0.15.9) {1} int lval vaddr 
| | | | | DECLID "stack" (0.15.4) {1} struct stack variable lval 
| | | | | FIELD "top" (0.15.11) {1} field 
| | | | DECLID "NULL" (0.15.17) {1} variable 
| | | RETURN "return" (0.16.4) {1} 
| | | | DECLID "stack" (0.16.11) {1} variable 
| FUNCTION "" (0.19.1) {1} 
| | VOID "void" (0.19.1) {1} 
| | | DECLID "push" (0.19.6) {1} void function 
| | PARAM "(" (0.19.11) {2} 
| | | TYPEID "stack" (0.19.12) {2} typeid 
| | | | DECLID "stack" (0.19.18) {2} struct stack variable lval param (0.19.12) 
| | | STRING "string" (0.19.25) {2} 
| | | | DECLID "str" (0.19.32) {2} string variable lval param (0.19.25) 
| | BLOCK "{" (0.19.37) {2} 
| | | BLOCK "{" (0.20.4) {2} 
| | | | IF "if" (0.20.6) {2} 
| | | | | NOT "not" (0.20.10) {2} 
| | | | | | LT "<" (0.20.26) {2} int vreg 
| | | | | | | ARROW "->" (0.20.20) {2} 
| | | | | | | | DECLID "stack" (0.20.15) {2} variable lval 
| | | | | | | | FIELD "top" (0.20.22) {2} field 
| | | | | | | '-' "-" (0.20.40) {2} int vreg 
| | | | | | | | ARROW "->" (0.20.33) {2} 
| | | | | | | | | DECLID "stack" (0.20.28) {2} variable lval 
| | | | | | | | | FIELD "size" (0.20.35) {2} field 
| | | | | | | | INTCON "1" (0.20.42) {2} int const 
| | | | | BLOCK "{" (0.20.46) {2} 
| | | | | | CALL "(" (0.20.62) {2} 
| | | | | | | IDENT "__assert_fail" (0.20.48) {2} 
| | | | | | | STRINGCON ""stack->top < stack->size - 1"" (0.20.63) {2} string const 
| | | | | | | STRINGCON ""arraystack.oc"" (0.20.95) {2} string const 
| | | | | | | INTCON "20" (0.20.112) {2} int const 
| | | | | | | DECLID "__FUNC__" (0.20.116) {2} variable 
| | | '=' "=" (0.21.15) {2} int vreg 
| | | | ARROW "->" (0.21.9) {2} int lval vaddr 
| | | | | DECLID "stack" (0.21.4) {2} struct stack variable lval 
| | | | | FIELD "top" (0.21.11) {2} field 
| | | | '+' "+" (0.21.28) {2} int vreg 
| | | | | ARROW "->" (0.21.22) {2} 
| | | | | | DECLID "stack" (0.21.17) {2} variable lval 
| | | | | | FIELD "top" (0.21.24) {2} field 
| | | | | INTCON "1" (0.21.30) {2} int const 
| | | '=' "=" (0.22.28) {2} string array vreg 
| | | | INDEX "[" (0.22.15) {2} int lval vaddr 
| | | | | ARROW "->" (0.22.9) {2} string array lval vaddr 
| | | | | | DECLID "stack" (0.22.4) {2} struct stack variable lval 
| | | | | | FIELD "data" (0.22.11) {2} field 
| | | | | ARROW "->" (0.22.21) {2} int lval vaddr 
| | | | | | DECLID "stack" (0.22.16) {2} struct stack variable lval 
| | | | | | FIELD "top" (0.22.23) {2} field 
| | | | DECLID "str" (0.22.30) {2} variable 
| FUNCTION "" (0.25.1) {2} 
| | STRING "string" (0.25.1) {2} 
| | | DECLID "pop" (0.25.8) {2} string function 
| | PARAM "(" (0.25.12) {3} 
| | | TYPEID "stack" (0.25.13) {3} typeid 
| | | | DECLID "stack" (0.25.19) {3} struct stack variable lval param (0.25.13) 
| | BLOCK "{" (0.25.26) {3} 
| | | VARDECL "=" (0.26.15) {3} 
| | | | STRING "string" (0.26.4) {3} 
| | | | | DECLID "tmp" (0.26.11) {3} string variable lval local (0.26.4) 
| | | | INDEX "[" (0.26.28) {3} 
| | | | | ARROW "->" (0.26.22) {3} 
| | | | | | DECLID "stack" (0.26.17) {3} variable lval 
| | | | | | FIELD "data" (0.26.24) {3} field 
| | | | | ARROW "->" (0.26.34) {3} 
| | | | | | DECLID "stack" (0.26.29) {3} variable lval 
| | | | | | FIELD "top" (0.26.36) {3} field 
| | | BLOCK "{" (0.27.4) {3} 
| | | | IF "if" (0.27.6) {3} 
| | | | | NOT "not" (0.27.10) {3} 
| | | | | | NE "!=" (0.27.26) {3} int vreg 
| | | | | | | ARROW "->" (0.27.20) {3} 
| | | | | | | | DECLID "stack" (0.27.15) {3} variable lval 
| | | | | | | | FIELD "top" (0.27.22) {3} field 
| | | | | | | NEG "-" (0.27.30) {3} int vreg 
| | | | | | | | INTCON "1" (0.27.31) {3} int const 
| | | | | BLOCK "{" (0.27.36) {3} 
| | | | | | CALL "(" (0.27.52) {3} 
| | | | | | | IDENT "__assert_fail" (0.27.38) {3} 
| | | | | | | STRINGCON ""stack->top != EMPTY"" (0.27.53) {3} string const 
| | | | | | | STRINGCON ""arraystack.oc"" (0.27.76) {3} string const 
| | | | | | | INTCON "27" (0.27.93) {3} int const 
| | | | | | | DECLID "__FUNC__" (0.27.97) {3} variable 
| | | '=' "=" (0.28.15) {3} int vreg 
| | | | ARROW "->" (0.28.9) {3} int lval vaddr 
| | | | | DECLID "stack" (0.28.4) {3} struct stack variable lval 
| | | | | FIELD "top" (0.28.11) {3} field 
| | | | '-' "-" (0.28.28) {3} int vreg 
| | | | | ARROW "->" (0.28.22) {3} 
| | | | | | DECLID "stack" (0.28.17) {3} variable lval 
| | | | | | FIELD "top" (0.28.24) {3} field 
| | | | | INTCON "1" (0.28.30) {3} int const 
| | | RETURN "return" (0.29.4) {3} 
| | | | DECLID "tmp" (0.29.11) {3} variable 
| FUNCTION "" (0.32.1) {3} 
| | INT "int" (0.32.1) {3} 
| | | DECLID "empty" (0.32.5) {3} int function 
| | PARAM "(" (0.32.11) {4} 
| | | TYPEID "stack" (0.32.12) {4} typeid 
| | | | DECLID "stack" (0.32.18) {4} struct stack variable lval param (0.32.12) 
| | BLOCK "{" (0.32.25) {4} 
| | | RETURN "return" (0.33.4) {4} 
| | | | EQ "==" (0.33.22) {4} int vreg 
| | | | | ARROW "->" (0.33.16) {4} 
| | | | | | DECLID "stack" (0.33.11) {4} variable lval 
| | | | | | FIELD "top" (0.33.18) {4} field 
| | | | | NEG "-" (0.33.26) {4} int vreg 
| | | | | | INTCON "1" (0.33.27) {4} int const 
| FUNCTION "" (0.36.1) {4} 
| | INT "int" (0.36.1) {4} 
| | | DECLID "main" (0.36.5) {4} int function 
| | PARAM "(" (0.36.10) {5} 
| | | INT "int" (0.36.11) {5} 
| | | | DECLID "argc" (0.36.15) {5} int variable lval param (0.36.11) 
| | | ARRAY "[]" (0.36.27) {5} 
| | | | STRING "string" (0.36.21) {5} 
| | | | | DECLID "argv" (0.36.30) {5} string array variable lval param (0.36.21) 
| | BLOCK "{" (0.36.36) {5} 
| | | VARDECL "=" (0.37.16) {5} 
| | | | TYPEID "stack" (0.37.4) {5} typeid 
| | | | | DECLID "stack" (0.37.10) {5} struct stack variable lval local (0.37.4) 
| | | | CALL "(" (0.37.28) {5} 
| | | | | IDENT "new_stack" (0.37.18) {5} 
| | | | | INTCON "100" (0.37.29) {5} int const 
| | | VARDECL "=" (0.38.13) {5} 
| | | | INT "int" (0.38.4) {5} 
| | | | | DECLID "argi" (0.38.8) {5} int variable lval local (0.38.4) 
| | | | INTCON "0" (0.38.15) {5} int const 
| | | WHILE "while" (0.40.4) {5} 
| | | | LT "<" (0.40.16) {5} int vreg 
| | | | | DECLID "argi" (0.40.11) {5} variable 
| | | | | DECLID "argc" (0.40.18) {5} variable 
| | | | BLOCK "{" (0.40.24) {5} 
| | | | | CALL "(" (0.41.12) {5} 
| | | | | | IDENT "push" (0.41.7) {5} 
| | | | | | DECLID "stack" (0.41.13) {5} variable 
| | | | | | INDEX "[" (0.41.24) {5} 
| | | | | | | DECLID "argv" (0.41.20) {5} variable 
| | | | | | | DECLID "argi" (0.41.25) {5} variable 
| | | | | '=' "=" (0.42.12) {5} vreg 
| | | | | | DECLID "argi" (0.42.7) {5} variable 
| | | | | | '+' "+" (0.42.19) {5} int vreg 
| | | | | | | DECLID "argi" (0.42.14) {5} variable 
| | | | | | | INTCON "1" (0.42.21) {5} int const 
| | | WHILE "while" (0.45.4) {5} 
| | | | NOT "not" (0.45.11) {5} 
| | | | | CALL "(" (0.45.21) {5} 
| | | | | | IDENT "empty" (0.45.15) {5} 
| | | | | | DECLID "stack" (0.45.22) {5} variable 
| | | | BLOCK "{" (0.45.30) {5} 
| | | | | CALL "(" (0.46.14) {5} 
| | | | | | IDENT "putstr" (0.46.7) {5} 
| | | | | | CALL "(" (0.46.19) {5} 
| | | | | | | IDENT "pop" (0.46.15) {5} 
| | | | | | | DECLID "stack" (0.46.20) {5} variable 
| | | | | CALL "(" (0.47.15) {5} 
| | | | | | IDENT "putchar" (0.47.7) {5} 
| | | | | | CHARCON "'\n'" (0.47.16) {5} 
;-1.  1: # 1 "assertfail.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "assertfail.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "assertfail.oc" 2
; 0.  4: 
; 0.  5: int main (int argc, string[] argv) {
; 0.  6:    putstr (argv[0]);
; 0.  7:    putstr (" was compiled on ");
; 0.  8:    putstr ("Nov 25 2018");
; 0.  9:    putstr (" @ ");
; 0. 10:    putstr ("14:05:54");
; 0. 11:    putstr ("\n");
; 0. 12:    return 0;
; 0. 13: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
main (0.5.5) {0} int function
    argc (0.5.15) {1} int variable lval param 0
    argv (0.5.30) {1} string array variable lval param 1

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.10) {1} 
| | | INT "int" (0.5.11) {1} 
| | | | DECLID "argc" (0.5.15) {1} int variable lval param (0.5.11) 
| | | ARRAY "[]" (0.5.27) {1} 
| | | | STRING "string" (0.5.21) {1} 
| | | | | DECLID "argv" (0.5.30) {1} string array variable lval param (0.5.21) 
| | BLOCK "{" (0.5.36) {1} 
| | | CALL "(" (0.6.11) {1} 
| | | | IDENT "putstr" (0.6.4) {1} 
| | | | INDEX "[" (0.6.16) {1} 
| | | | | DECLID "argv" (0.6.12) {1} variable 
| | | | | INTCON "0" (0.6.17) {1} int const 
| | | CALL "(" (0.7.11) {1} 
| | | | IDENT "putstr" (0.7.4) {1} 
| | | | STRINGCON "" was compiled on "" (0.7.12) {1} string const 
| | | CALL "(" (0.8.11) {1} 
| | | | IDENT "putstr" (0.8.4) {1} 
| | | | STRINGCON ""Nov 25 2018"" (0.8.12) {1} string const 
| | | CALL "(" (0.9.11) {1} 
| | | | IDENT "putstr" (0.9.4) {1} 
| | | | STRINGCON "" @ "" (0.9.12) {1} string const 
| | | CALL "(" (0.10.11) {1} 
| | | | IDENT "putstr" (0.10.4) {1} 
| | | | STRINGCON ""14:05:54"" (0.10.12) {1} string const 
| | | CALL "(" (0.11.11) {1} 
| | | | IDENT "putstr" (0.11.4) {1} 
| | | | STRINGCON ""\n"" (0.11.12) {1} string const 
| | | RETURN "return" (0.12.4) {1} 
| | | | INTCON "0" (0.12.11) {1} int const 
;-1.  1: # 1 "assert.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "assert.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "assert.oc" 2
; 0.  4: 
; 0.  5: int main() {
; 0.  6:    { if (not ("null" == null)) { __assert_fail ("\"null\" == null", "assert.oc", 6, __FUNC__); } };
; 0.  7:    return 0;
; 0.  8: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
main (0.5.5) {0} int function

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.9) {1} 
| | BLOCK "{" (0.5.12) {1} 
| | | BLOCK "{" (0.6.4) {1} 
| | | | IF "if" (0.6.6) {1} 
| | | | | NOT "not" (0.6.10) {1} 
| | | | | | EQ "==" (0.6.22) {1} int vreg 
| | | | | | | STRINGCON ""null"" (0.6.15) {1} string const 
| | | | | | | NULL "null" (0.6.25) {1} null const 
| | | | | BLOCK "{" (0.6.32) {1} 
| | | | | | CALL "(" (0.6.48) {1} 
| | | | | | | IDENT "__assert_fail" (0.6.34) {1} 
| | | | | | | STRINGCON ""\"null\" == null"" (0.6.49) {1} string const 
| | | | | | | STRINGCON ""assert.oc"" (0.6.69) {1} string const 
| | | | | | | INTCON "6" (0.6.82) {1} int const 
| | | | | | | DECLID "__FUNC__" (0.6.85) {1} variable 
| | | RETURN "return" (0.7.4) {1} 
| | | | INTCON "0" (0.7.11) {1} int const 
;-1.  1: # 1 "atoi.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "atoi.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "atoi.oc" 2
; 0.  4: 
; 0.  5: int atoi (string str) {
; 0.  6:    int neg = 0;
; 0.  7:    int num = 0;
; 0.  8:    int digit = 0;
; 0.  9:    int contin = 0;
; 0. 10:    int c = 0;
; 0. 11:    { if (not (str != null)) { __assert_fail ("str != null", "atoi.oc", 11, __FUNC__); } };
; 0. 12:    if (str[0] != '\0') {
; 0. 13:       if (str[0] == '-') {
; 0. 14:          digit = digit + 1;
; 0. 15:          neg = 1;
; 0. 16:       }
; 0. 17:       contin = 1;
; 0. 18:       while (contin) {
; 0. 19:          if (str[digit] == '\0') {
; 0. 20:             contin = 0;
; 0. 21:          }else {
; 0. 22:             c = str[digit];
; 0. 23:             digit = digit + 1;
; 0. 24:             if (c < '0') contin = 0;
; 0. 25:             else if (c > '9') contin = 0;
; 0. 26:             else num = num * 10 + c - '0';
; 0. 27:          }
; 0. 28:       }
; 0. 29:       if (neg) num = - num;
; 0. 30:    }
; 0. 31:    return num;
; 0. 32: }
; 0. 33: 
; 0. 34: int main (int argc, string[] argv) {
; 0. 35:    int argi = 1;
; 0. 36:    string arg = null;
; 0. 37:    while (argi < argc) {
; 0. 38:       arg = argv[argi];
; 0. 39:       putstr (arg);
; 0. 40:       putstr (" = ");
; 0. 41:       putint (atoi (arg));
; 0. 42:       putchar ('\n');
; 0. 43:       argi = argi + 1;
; 0. 44:    }
; 0. 45:    return 0;
; 0. 46: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
atoi (0.5.5) {0} int function
    str (0.5.18) {1} string variable lval param 0
    neg (0.6.8) {1} int variable lval local 0
    num (0.7.8) {1} int variable lval local 0
    digit (0.8.8) {1} int variable lval local 0
    contin (0.9.8) {1} int variable lval local 0
    c (0.10.8) {1} int variable lval local 0

main (0.34.5) {1} int function
    argc (0.34.15) {2} int variable lval param 0
    argv (0.34.30) {2} string array variable lval param 1
    argi (0.35.8) {2} int variable lval local 0
    arg (0.36.11) {2} string variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "atoi" (0.5.5) {0} int function 
| | PARAM "(" (0.5.10) {1} 
| | | STRING "string" (0.5.11) {1} 
| | | | DECLID "str" (0.5.18) {1} string variable lval param (0.5.11) 
| | BLOCK "{" (0.5.23) {1} 
| | | VARDECL "=" (0.6.12) {1} 
| | | | INT "int" (0.6.4) {1} 
| | | | | DECLID "neg" (0.6.8) {1} int variable lval local (0.6.4) 
| | | | INTCON "0" (0.6.14) {1} int const 
| | | VARDECL "=" (0.7.12) {1} 
| | | | INT "int" (0.7.4) {1} 
| | | | | DECLID "num" (0.7.8) {1} int variable lval local (0.7.4) 
| | | | INTCON "0" (0.7.14) {1} int const 
| | | VARDECL "=" (0.8.14) {1} 
| | | | INT "int" (0.8.4) {1} 
| | | | | DECLID "digit" (0.8.8) {1} int variable lval local (0.8.4) 
| | | | INTCON "0" (0.8.16) {1} int const 
| | | VARDECL "=" (0.9.15) {1} 
| | | | INT "int" (0.9.4) {1} 
| | | | | DECLID "contin" (0.9.8) {1} int variable lval local (0.9.4) 
| | | | INTCON "0" (0.9.17) {1} int const 
| | | VARDECL "=" (0.10.10) {1} 
| | | | INT "int" (0.10.4) {1} 
| | | | | DECLID "c" (0.10.8) {1} int variable lval local (0.10.4) 
| | | | INTCON "0" (0.10.12) {1} int const 
| | | BLOCK "{" (0.11.4) {1} 
| | | | IF "if" (0.11.6) {1} 
| | | | | NOT "not" (0.11.10) {1} 
| | | | | | NE "!=" (0.11.19) {1} int vreg 
| | | | | | | DECLID "str" (0.11.15) {1} variable 
| | | | | | | NULL "null" (0.11.22) {1} null const 
| | | | | BLOCK "{" (0.11.29) {1} 
| | | | | | CALL "(" (0.11.45) {1} 
| | | | | | | IDENT "__assert_fail" (0.11.31) {1} 
| | | | | | | STRINGCON ""str != null"" (0.11.46) {1} string const 
| | | | | | | STRINGCON ""atoi.oc"" (0.11.61) {1} string const 
| | | | | | | INTCON "11" (0.11.72) {1} int const 
| | | | | | | DECLID "__FUNC__" (0.11.76) {1} variable 
| | | IF "if" (0.12.4) {1} 
| | | | NE "!=" (0.12.15) {1} int vreg 
| | | | | INDEX "[" (0.12.11) {1} 
| | | | | | DECLID "str" (0.12.8) {1} variable 
| | | | | | INTCON "0" (0.12.12) {1} int const 
| | | | | CHARCON "'\0'" (0.12.18) {1} 
| | | | BLOCK "{" (0.12.24) {1} 
| | | | | IF "if" (0.13.7) {1} 
| | | | | | EQ "==" (0.13.18) {1} int vreg 
| | | | | | | INDEX "[" (0.13.14) {1} 
| | | | | | | | DECLID "str" (0.13.11) {1} variable 
| | | | | | | | INTCON "0" (0.13.15) {1} int const 
| | | | | | | CHARCON "'-'" (0.13.21) {1} 
| | | | | | BLOCK "{" (0.13.26) {1} 
| | | | | | | '=' "=" (0.14.16) {1} vreg 
| | | | | | | | DECLID "digit" (0.14.10) {1} variable 
| | | | | | | | '+' "+" (0.14.24) {1} int vreg 
| | | | | | | | | DECLID "digit" (0.14.18) {1} variable 
| | | | | | | | | INTCON "1" (0.14.26) {1} int const 
| | | | | | | '=' "=" (0.15.14) {1} vreg 
| | | | | | | | DECLID "neg" (0.15.10) {1} variable 
| | | | | | | | INTCON "1" (0.15.16) {1} int const 
| | | | | '=' "=" (0.17.14) {1} vreg 
| | | | | | DECLID "contin" (0.17.7) {1} variable 
| | | | | | INTCON "1" (0.17.16) {1} int const 
| | | | | WHILE "while" (0.18.7) {1} 
| | | | | | DECLID "contin" (0.18.14) {1} variable 
| | | | | | BLOCK "{" (0.18.22) {1} 
| | | | | | | IF "if" (0.19.10) {1} 
| | | | | | | | EQ "==" (0.19.25) {1} int vreg 
| | | | | | | | | INDEX "[" (0.19.17) {1} 
| | | | | | | | | | DECLID "str" (0.19.14) {1} variable 
| | | | | | | | | | DECLID "digit" (0.19.18) {1} variable 
| | | | | | | | | CHARCON "'\0'" (0.19.28) {1} 
| | | | | | | | BLOCK "{" (0.19.34) {1} 
| | | | | | | | | '=' "=" (0.20.20) {1} vreg 
| | | | | | | | | | DECLID "contin" (0.20.13) {1} variable 
| | | | | | | | | | INTCON "0" (0.20.22) {1} int const 
| | | | | | | | BLOCK "{" (0.21.16) {1} 
| | | | | | | | | '=' "=" (0.22.15) {1} vreg 
| | | | | | | | | | DECLID "c" (0.22.13) {1} variable 
| | | | | | | | | | INDEX "[" (0.22.20) {1} 
| | | | | | | | | | | DECLID "str" (0.22.17) {1} variable 
| | | | | | | | | | | DECLID "digit" (0.22.21) {1} variable 
| | | | | | | | | '=' "=" (0.23.19) {1} vreg 
| | | | | | | | | | DECLID "digit" (0.23.13) {1} variable 
| | | | | | | | | | '+' "+" (0.23.27) {1} int vreg 
| | | | | | | | | | | DECLID "digit" (0.23.21) {1} variable 
| | | | | | | | | | | INTCON "1" (0.23.29) {1} int const 
| | | | | | | | | IF "if" (0.24.13) {1} 
| | | | | | | | | | LT "<" (0.24.19) {1} int vreg 
| | | | | | | | | | | DECLID "c" (0.24.17) {1} variable 
| | | | | | | | | | | CHARCON "'0'" (0.24.21) {1} 
| | | | | | | | | | '=' "=" (0.24.33) {1} vreg 
| | | | | | | | | | | DECLID "contin" (0.24.26) {1} variable 
| | | | | | | | | | | INTCON "0" (0.24.35) {1} int const 
| | | | | | | | | | IF "if" (0.25.18) {1} 
| | | | | | | | | | | GT ">" (0.25.24) {1} int vreg 
| | | | | | | | | | | | DECLID "c" (0.25.22) {1} variable 
| | | | | | | | | | | | CHARCON "'9'" (0.25.26) {1} 
| | | | | | | | | | | '=' "=" (0.25.38) {1} vreg 
| | | | | | | | | | | | DECLID "contin" (0.25.31) {1} variable 
| | | | | | | | | | | | INTCON "0" (0.25.40) {1} int const 
| | | | | | | | | | | '=' "=" (0.26.22) {1} vreg 
| | | | | | | | | | | | DECLID "num" (0.26.18) {1} variable 
| | | | | | | | | | | | '-' "-" (0.26.37) {1} int vreg 
| | | | | | | | | | | | | '+' "+" (0.26.33) {1} int vreg 
| | | | | | | | | | | | | | '*' "*" (0.26.28) {1} int vreg 
| | | | | | | | | | | | | | | DECLID "num" (0.26.24) {1} variable 
| | | | | | | | | | | | | | | INTCON "10" (0.26.30) {1} int const 
| | | | | | | | | | | | | | DECLID "c" (0.26.35) {1} variable 
| | | | | | | | | | | | | CHARCON "'0'" (0.26.39) {1} 
| | | | | IF "if" (0.29.7) {1} 
| | | | | | DECLID "neg" (0.29.11) {1} variable 
| | | | | | '=' "=" (0.29.20) {1} vreg 
| | | | | | | DECLID "num" (0.29.16) {1} variable 
| | | | | | | NEG "-" (0.29.22) {1} int vreg 
| | | | | | | | DECLID "num" (0.29.24) {1} variable 
| | | RETURN "return" (0.31.4) {1} 
| | | | DECLID "num" (0.31.11) {1} variable 
| FUNCTION "" (0.34.1) {1} 
| | INT "int" (0.34.1) {1} 
| | | DECLID "main" (0.34.5) {1} int function 
| | PARAM "(" (0.34.10) {2} 
| | | INT "int" (0.34.11) {2} 
| | | | DECLID "argc" (0.34.15) {2} int variable lval param (0.34.11) 
| | | ARRAY "[]" (0.34.27) {2} 
| | | | STRING "string" (0.34.21) {2} 
| | | | | DECLID "argv" (0.34.30) {2} string array variable lval param (0.34.21) 
| | BLOCK "{" (0.34.36) {2} 
| | | VARDECL "=" (0.35.13) {2} 
| | | | INT "int" (0.35.4) {2} 
| | | | | DECLID "argi" (0.35.8) {2} int variable lval local (0.35.4) 
| | | | INTCON "1" (0.35.15) {2} int const 
| | | VARDECL "=" (0.36.15) {2} 
| | | | STRING "string" (0.36.4) {2} 
| | | | | DECLID "arg" (0.36.11) {2} string variable lval local (0.36.4) 
| | | | NULL "null" (0.36.17) {2} null const 
| | | WHILE "while" (0.37.4) {2} 
| | | | LT "<" (0.37.16) {2} int vreg 
| | | | | DECLID "argi" (0.37.11) {2} variable 
| | | | | DECLID "argc" (0.37.18) {2} variable 
| | | | BLOCK "{" (0.37.24) {2} 
| | | | | '=' "=" (0.38.11) {2} vreg 
| | | | | | DECLID "arg" (0.38.7) {2} variable 
| | | | | | INDEX "[" (0.38.17) {2} 
| | | | | | | DECLID "argv" (0.38.13) {2} variable 
| | | | | | | DECLID "argi" (0.38.18) {2} variable 
| | | | | CALL "(" (0.39.14) {2} 
| | | | | | IDENT "putstr" (0.39.7) {2} 
| | | | | | DECLID "arg" (0.39.15) {2} variable 
| | | | | CALL "(" (0.40.14) {2} 
| | | | | | IDENT "putstr" (0.40.7) {2} 
| | | | | | STRINGCON "" = "" (0.40.15) {2} string const 
| | | | | CALL "(" (0.41.14) {2} 
| | | | | | IDENT "putint" (0.41.7) {2} 
| | | | | | CALL "(" (0.41.20) {2} 
| | | | | | | IDENT "atoi" (0.41.15) {2} 
| | | | | | | DECLID "arg" (0.41.21) {2} variable 
| | | | | CALL "(" (0.42.15) {2} 
| | | | | | IDENT "putchar" (0.42.7) {2} 
| | | | | | CHARCON "'\n'" (0.42.16) {2} 
| | | | | '=' "=" (0.43.12) {2} vreg 
| | | | | | DECLID "argi" (0.43.7) {2} variable 
| | | | | | '+' "+" (0.43.19) {2} int vreg 
| | | | | | | DECLID "argi" (0.43.14) {2} variable 
| | | | | | | INTCON "1" (0.43.21) {2} int const 
| | | RETURN "return" (0.45.4) {2} 
| | | | INTCON "0" (0.45.11) {2} int const 
;-1.  1: # 1 "c8.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "c8.oc"
; 0.  1: char O[9];Q(l,b,d){int o=8,p=1,q=1<<
; 0.  2: l|1<<22-l;for(;l>7?!write(1,O,9):o--
; 0.  3: ;)O[l]=56-o,b&p|d&q||Q(l+1,b|p,d|q),
; 0.  4: p*=2,q*=2;}main(){O[8]=10;Q(0,0,0);}
;-1.  1: # 1 "cobol.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "cobol.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 000100 IDENTIFICATION DIVISION.
; 0.  4: 000200 PROGRAM-ID. HELLOWORLD.
; 0.  5: 000300
; 0.  6: 000400*
; 0.  7: 000500 ENVIRONMENT DIVISION.
; 0.  8: 000600 CONFIGURATION SECTION.
; 0.  9: 000700 SOURCE-COMPUTER. RM-COBOL.
; 0. 10: 000800 OBJECT-COMPUTER. RM-COBOL.
; 0. 11: 000900
; 0. 12: 001000 DATA DIVISION.
; 0. 13: 001100 FILE SECTION.
; 0. 14: 001200
; 0. 15: 100000 PROCEDURE DIVISION.
; 0. 16: 100100
; 0. 17: 100200 MAIN-LOGIC SECTION.
; 0. 18: 100300 BEGIN.
; 0. 19: 100400 DISPLAY " " LINE 1 POSITION 1 ERASE EOS.
; 0. 20: 100500 DISPLAY "Hello world!" LINE 15 POSITION 10.
; 0. 21: 100600 STOP RUN.
; 0. 22: 100700 MAIN-LOGIC-EXIT.
; 0. 23: 100800 EXIT.
;-1.  1: # 1 "dotproduct.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "dotproduct.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "dotproduct.oc" 2
; 0.  4: 
; 0.  5: int dot_product (int size, int[] vec1, int[] vec2) {
; 0.  6:    int index = 0;
; 0.  7:    int dot = 0;
; 0.  8:    while (index < size) {
; 0.  9:       dot = dot + vec1[index] * vec2[index];
; 0. 10:       index = index + 1;
; 0. 11:    }
; 0. 12:    return dot;
; 0. 13: }
; 0. 14: 
; 0. 15: 
; 0. 16: 
; 0. 17: int main() {
; 0. 18:    int[] vec1 = new int[10];
; 0. 19:    int[] vec2 = new int[10];
; 0. 20:    int i = 0;
; 0. 21:    while (i < 10) {
; 0. 22:       vec1[i] = i + 10;
; 0. 23:       vec2[i] = i * 10;
; 0. 24:       i = i + 1;
; 0. 25:    }
; 0. 26:    putint (dot_product (10, vec1, vec2));
; 0. 27:    putchar ('\n');
; 0. 28:    return 0;
; 0. 29: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
dot_product (0.5.5) {0} int function
    size (0.5.22) {1} int variable lval param 0
    vec1 (0.5.34) {1} int array variable lval param 1
    vec2 (0.5.46) {1} int array variable lval param 2
    index (0.6.8) {1} int variable lval local 0
    dot (0.7.8) {1} int variable lval local 0

main (0.17.5) {1} int function
    vec1 (0.18.10) {2} int array variable local 0
    vec2 (0.19.10) {2} int array variable local 0
    i (0.20.8) {2} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "dot_product" (0.5.5) {0} int function 
| | PARAM "(" (0.5.17) {1} 
| | | INT "int" (0.5.18) {1} 
| | | | DECLID "size" (0.5.22) {1} int variable lval param (0.5.18) 
| | | ARRAY "[]" (0.5.31) {1} 
| | | | INT "int" (0.5.28) {1} 
| | | | | DECLID "vec1" (0.5.34) {1} int array variable lval param (0.5.28) 
| | | ARRAY "[]" (0.5.43) {1} 
| | | | INT "int" (0.5.40) {1} 
| | | | | DECLID "vec2" (0.5.46) {1} int array variable lval param (0.5.40) 
| | BLOCK "{" (0.5.52) {1} 
| | | VARDECL "=" (0.6.14) {1} 
| | | | INT "int" (0.6.4) {1} 
| | | | | DECLID "index" (0.6.8) {1} int variable lval local (0.6.4) 
| | | | INTCON "0" (0.6.16) {1} int const 
| | | VARDECL "=" (0.7.12) {1} 
| | | | INT "int" (0.7.4) {1} 
| | | | | DECLID "dot" (0.7.8) {1} int variable lval local (0.7.4) 
| | | | INTCON "0" (0.7.14) {1} int const 
| | | WHILE "while" (0.8.4) {1} 
| | | | LT "<" (0.8.17) {1} int vreg 
| | | | | DECLID "index" (0.8.11) {1} variable 
| | | | | DECLID "size" (0.8.19) {1} variable 
| | | | BLOCK "{" (0.8.25) {1} 
| | | | | '=' "=" (0.9.11) {1} vreg 
| | | | | | DECLID "dot" (0.9.7) {1} variable 
| | | | | | '+' "+" (0.9.17) {1} int vreg 
| | | | | | | DECLID "dot" (0.9.13) {1} variable 
| | | | | | | '*' "*" (0.9.31) {1} int vreg 
| | | | | | | | INDEX "[" (0.9.23) {1} 
| | | | | | | | | DECLID "vec1" (0.9.19) {1} variable 
| | | | | | | | | DECLID "index" (0.9.24) {1} variable 
| | | | | | | | INDEX "[" (0.9.37) {1} 
| | | | | | | | | DECLID "vec2" (0.9.33) {1} variable 
| | | | | | | | | DECLID "index" (0.9.38) {1} variable 
| | | | | '=' "=" (0.10.13) {1} vreg 
| | | | | | DECLID "index" (0.10.7) {1} variable 
| | | | | | '+' "+" (0.10.21) {1} int vreg 
| | | | | | | DECLID "index" (0.10.15) {1} variable 
| | | | | | | INTCON "1" (0.10.23) {1} int const 
| | | RETURN "return" (0.12.4) {1} 
| | | | DECLID "dot" (0.12.11) {1} variable 
| FUNCTION "" (0.17.1) {1} 
| | INT "int" (0.17.1) {1} 
| | | DECLID "main" (0.17.5) {1} int function 
| | PARAM "(" (0.17.9) {2} 
| | BLOCK "{" (0.17.12) {2} 
| | | VARDECL "=" (0.18.15) {2} 
| | | | ARRAY "[]" (0.18.7) {2} 
| | | | | INT "int" (0.18.4) {2} variable lval 
| | | | | | DECLID "vec1" (0.18.10) {2} int array variable local (0.18.4) 
| | | | NEW "new" (0.18.17) {2} 
| | | | | NEWARRAY "[" (0.18.24) {2} array vreg 
| | | | | | INT "int" (0.18.21) {2} 
| | | | | | INTCON "10" (0.18.25) {2} int const 
| | | VARDECL "=" (0.19.15) {2} 
| | | | ARRAY "[]" (0.19.7) {2} 
| | | | | INT "int" (0.19.4) {2} variable lval 
| | | | | | DECLID "vec2" (0.19.10) {2} int array variable local (0.19.4) 
| | | | NEW "new" (0.19.17) {2} 
| | | | | NEWARRAY "[" (0.19.24) {2} array vreg 
| | | | | | INT "int" (0.19.21) {2} 
| | | | | | INTCON "10" (0.19.25) {2} int const 
| | | VARDECL "=" (0.20.10) {2} 
| | | | INT "int" (0.20.4) {2} 
| | | | | DECLID "i" (0.20.8) {2} int variable lval local (0.20.4) 
| | | | INTCON "0" (0.20.12) {2} int const 
| | | WHILE "while" (0.21.4) {2} 
| | | | LT "<" (0.21.13) {2} int vreg 
| | | | | DECLID "i" (0.21.11) {2} variable 
| | | | | INTCON "10" (0.21.15) {2} int const 
| | | | BLOCK "{" (0.21.19) {2} 
| | | | | '=' "=" (0.22.15) {2} vreg 
| | | | | | INDEX "[" (0.22.11) {2} 
| | | | | | | DECLID "vec1" (0.22.7) {2} variable 
| | | | | | | DECLID "i" (0.22.12) {2} variable 
| | | | | | '+' "+" (0.22.19) {2} int vreg 
| | | | | | | DECLID "i" (0.22.17) {2} variable 
| | | | | | | INTCON "10" (0.22.21) {2} int const 
| | | | | '=' "=" (0.23.15) {2} vreg 
| | | | | | INDEX "[" (0.23.11) {2} 
| | | | | | | DECLID "vec2" (0.23.7) {2} variable 
| | | | | | | DECLID "i" (0.23.12) {2} variable 
| | | | | | '*' "*" (0.23.19) {2} int vreg 
| | | | | | | DECLID "i" (0.23.17) {2} variable 
| | | | | | | INTCON "10" (0.23.21) {2} int const 
| | | | | '=' "=" (0.24.9) {2} vreg 
| | | | | | DECLID "i" (0.24.7) {2} variable 
| | | | | | '+' "+" (0.24.13) {2} int vreg 
| | | | | | | DECLID "i" (0.24.11) {2} variable 
| | | | | | | INTCON "1" (0.24.15) {2} int const 
| | | CALL "(" (0.26.11) {2} 
| | | | IDENT "putint" (0.26.4) {2} 
| | | | CALL "(" (0.26.24) {2} 
| | | | | IDENT "dot_product" (0.26.12) {2} 
| | | | | INTCON "10" (0.26.25) {2} int const 
| | | | | DECLID "vec1" (0.26.29) {2} variable 
| | | | | DECLID "vec2" (0.26.35) {2} variable 
| | | CALL "(" (0.27.12) {2} 
| | | | IDENT "putchar" (0.27.4) {2} 
| | | | CHARCON "'\n'" (0.27.13) {2} 
| | | RETURN "return" (0.28.4) {2} 
| | | | INTCON "0" (0.28.11) {2} int const 
;-1.  1: # 1 "elseif.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "elseif.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "elseif.oc" 2
; 0.  4: 
; 0.  5: int main (int argc) {
; 0.  6:    if (argc == 1) puts ("one");
; 0.  7:    else if (argc == 2) putstr ("two");
; 0.  8:    else if (argc == 3) putstr ("three");
; 0.  9:    else putstr ("many");
; 0. 10:    putchar ('\n');
; 0. 11:    return 0;
; 0. 12: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
main (0.5.5) {0} int function
    argc (0.5.15) {1} int variable lval param 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.10) {1} 
| | | INT "int" (0.5.11) {1} 
| | | | DECLID "argc" (0.5.15) {1} int variable lval param (0.5.11) 
| | BLOCK "{" (0.5.21) {1} 
| | | IF "if" (0.6.4) {1} 
| | | | EQ "==" (0.6.13) {1} int vreg 
| | | | | DECLID "argc" (0.6.8) {1} variable 
| | | | | INTCON "1" (0.6.16) {1} int const 
| | | | CALL "(" (0.6.24) {1} 
| | | | | IDENT "puts" (0.6.19) {1} 
| | | | | STRINGCON ""one"" (0.6.25) {1} string const 
| | | | IF "if" (0.7.9) {1} 
| | | | | EQ "==" (0.7.18) {1} int vreg 
| | | | | | DECLID "argc" (0.7.13) {1} variable 
| | | | | | INTCON "2" (0.7.21) {1} int const 
| | | | | CALL "(" (0.7.31) {1} 
| | | | | | IDENT "putstr" (0.7.24) {1} 
| | | | | | STRINGCON ""two"" (0.7.32) {1} string const 
| | | | | IF "if" (0.8.9) {1} 
| | | | | | EQ "==" (0.8.18) {1} int vreg 
| | | | | | | DECLID "argc" (0.8.13) {1} variable 
| | | | | | | INTCON "3" (0.8.21) {1} int const 
| | | | | | CALL "(" (0.8.31) {1} 
| | | | | | | IDENT "putstr" (0.8.24) {1} 
| | | | | | | STRINGCON ""three"" (0.8.32) {1} string const 
| | | | | | CALL "(" (0.9.16) {1} 
| | | | | | | IDENT "putstr" (0.9.9) {1} 
| | | | | | | STRINGCON ""many"" (0.9.17) {1} string const 
| | | CALL "(" (0.10.12) {1} 
| | | | IDENT "putchar" (0.10.4) {1} 
| | | | CHARCON "'\n'" (0.10.13) {1} 
| | | RETURN "return" (0.11.4) {1} 
| | | | INTCON "0" (0.11.11) {1} int const 
;-1.  1: # 1 "era.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "era.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "era.oc" 2
; 0.  4: 
; 0.  5: 
; 0.  6: 
; 0.  7: 
; 0.  8: int main() {
; 0.  9:    int prime = 2;
; 0. 10:    int index = 2;
; 0. 11:    string[] sieve = new string[100];
; 0. 12: 
; 0. 13:    while (index < 100) {
; 0. 14:       sieve[index] = 1;
; 0. 15:       index = index + 1;
; 0. 16:    }
; 0. 17: 
; 0. 18:    while (prime < 100) {
; 0. 19:       if (sieve[prime]) {
; 0. 20:          index = prime * 2;
; 0. 21:          while (index < 100) {
; 0. 22:             sieve[index] = 0;
; 0. 23:             index = index + prime;
; 0. 24:          }
; 0. 25:       }
; 0. 26:       prime = prime + 1;
; 0. 27:    }
; 0. 28: 
; 0. 29:    index = 2;
; 0. 30:    while (index < 100) {
; 0. 31:       if (sieve[index]) {
; 0. 32:          putint (index);
; 0. 33:          putchar ('\n');
; 0. 34:       }
; 0. 35:       index = index + 1;
; 0. 36:    }
; 0. 37: 
; 0. 38:    return 0;
; 0. 39: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
main (0.8.5) {0} int function
    prime (0.9.8) {1} int variable lval local 0
    index (0.10.8) {1} int variable lval local 0
    sieve (0.11.13) {1} string array variable local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.8.1) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "main" (0.8.5) {0} int function 
| | PARAM "(" (0.8.9) {1} 
| | BLOCK "{" (0.8.12) {1} 
| | | VARDECL "=" (0.9.14) {1} 
| | | | INT "int" (0.9.4) {1} 
| | | | | DECLID "prime" (0.9.8) {1} int variable lval local (0.9.4) 
| | | | INTCON "2" (0.9.16) {1} int const 
| | | VARDECL "=" (0.10.14) {1} 
| | | | INT "int" (0.10.4) {1} 
| | | | | DECLID "index" (0.10.8) {1} int variable lval local (0.10.4) 
| | | | INTCON "2" (0.10.16) {1} int const 
| | | VARDECL "=" (0.11.19) {1} 
| | | | ARRAY "[]" (0.11.10) {1} 
| | | | | STRING "string" (0.11.4) {1} variable lval 
| | | | | | DECLID "sieve" (0.11.13) {1} string array variable local (0.11.4) 
| | | | NEW "new" (0.11.21) {1} 
| | | | | NEWARRAY "[" (0.11.31) {1} array vreg 
| | | | | | STRING "string" (0.11.25) {1} 
| | | | | | INTCON "100" (0.11.32) {1} int const 
| | | WHILE "while" (0.13.4) {1} 
| | | | LT "<" (0.13.17) {1} int vreg 
| | | | | DECLID "index" (0.13.11) {1} variable 
| | | | | INTCON "100" (0.13.19) {1} int const 
| | | | BLOCK "{" (0.13.24) {1} 
| | | | | '=' "=" (0.14.20) {1} vreg 
| | | | | | INDEX "[" (0.14.12) {1} 
| | | | | | | DECLID "sieve" (0.14.7) {1} variable 
| | | | | | | DECLID "index" (0.14.13) {1} variable 
| | | | | | INTCON "1" (0.14.22) {1} int const 
| | | | | '=' "=" (0.15.13) {1} vreg 
| | | | | | DECLID "index" (0.15.7) {1} variable 
| | | | | | '+' "+" (0.15.21) {1} int vreg 
| | | | | | | DECLID "index" (0.15.15) {1} variable 
| | | | | | | INTCON "1" (0.15.23) {1} int const 
| | | WHILE "while" (0.18.4) {1} 
| | | | LT "<" (0.18.17) {1} int vreg 
| | | | | DECLID "prime" (0.18.11) {1} variable 
| | | | | INTCON "100" (0.18.19) {1} int const 
| | | | BLOCK "{" (0.18.24) {1} 
| | | | | IF "if" (0.19.7) {1} 
| | | | | | INDEX "[" (0.19.16) {1} 
| | | | | | | DECLID "sieve" (0.19.11) {1} variable 
| | | | | | | DECLID "prime" (0.19.17) {1} variable 
| | | | | | BLOCK "{" (0.19.25) {1} 
| | | | | | | '=' "=" (0.20.16) {1} vreg 
| | | | | | | | DECLID "index" (0.20.10) {1} variable 
| | | | | | | | '*' "*" (0.20.24) {1} int vreg 
| | | | | | | | | DECLID "prime" (0.20.18) {1} variable 
| | | | | | | | | INTCON "2" (0.20.26) {1} int const 
| | | | | | | WHILE "while" (0.21.10) {1} 
| | | | | | | | LT "<" (0.21.23) {1} int vreg 
| | | | | | | | | DECLID "index" (0.21.17) {1} variable 
| | | | | | | | | INTCON "100" (0.21.25) {1} int const 
| | | | | | | | BLOCK "{" (0.21.30) {1} 
| | | | | | | | | '=' "=" (0.22.26) {1} vreg 
| | | | | | | | | | INDEX "[" (0.22.18) {1} 
| | | | | | | | | | | DECLID "sieve" (0.22.13) {1} variable 
| | | | | | | | | | | DECLID "index" (0.22.19) {1} variable 
| | | | | | | | | | INTCON "0" (0.22.28) {1} int const 
| | | | | | | | | '=' "=" (0.23.19) {1} vreg 
| | | | | | | | | | DECLID "index" (0.23.13) {1} variable 
| | | | | | | | | | '+' "+" (0.23.27) {1} int vreg 
| | | | | | | | | | | DECLID "index" (0.23.21) {1} variable 
| | | | | | | | | | | DECLID "prime" (0.23.29) {1} variable 
| | | | | '=' "=" (0.26.13) {1} vreg 
| | | | | | DECLID "prime" (0.26.7) {1} variable 
| | | | | | '+' "+" (0.26.21) {1} int vreg 
| | | | | | | DECLID "prime" (0.26.15) {1} variable 
| | | | | | | INTCON "1" (0.26.23) {1} int const 
| | | '=' "=" (0.29.10) {1} int vreg 
| | | | DECLID "index" (0.29.4) {1} variable 
| | | | INTCON "2" (0.29.12) {1} int const 
| | | WHILE "while" (0.30.4) {1} 
| | | | LT "<" (0.30.17) {1} int vreg 
| | | | | DECLID "index" (0.30.11) {1} variable 
| | | | | INTCON "100" (0.30.19) {1} int const 
| | | | BLOCK "{" (0.30.24) {1} 
| | | | | IF "if" (0.31.7) {1} 
| | | | | | INDEX "[" (0.31.16) {1} 
| | | | | | | DECLID "sieve" (0.31.11) {1} variable 
| | | | | | | DECLID "index" (0.31.17) {1} variable 
| | | | | | BLOCK "{" (0.31.25) {1} 
| | | | | | | CALL "(" (0.32.17) {1} 
| | | | | | | | IDENT "putint" (0.32.10) {1} 
| | | | | | | | DECLID "index" (0.32.18) {1} variable 
| | | | | | | CALL "(" (0.33.18) {1} 
| | | | | | | | IDENT "putchar" (0.33.10) {1} 
| | | | | | | | CHARCON "'\n'" (0.33.19) {1} 
| | | | | '=' "=" (0.35.13) {1} vreg 
| | | | | | DECLID "index" (0.35.7) {1} variable 
| | | | | | '+' "+" (0.35.21) {1} int vreg 
| | | | | | | DECLID "index" (0.35.15) {1} variable 
| | | | | | | INTCON "1" (0.35.23) {1} int const 
| | | RETURN "return" (0.38.4) {1} 
| | | | INTCON "0" (0.38.11) {1} int const 
;-1.  1: # 1 "example.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "example.oc"
; 0.  1: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 2 "example.oc" 2
; 0.  2: int fac (int n) {
; 0.  3:    int f = 1;
; 0.  4:    while (n > 1) {
; 0.  5:       f = f*n;
; 0.  6:       n = n-1;
; 0.  7:    }
; 0.  8:    return f;
; 0.  9: }
; 0. 10: int main() {
; 0. 11:    int n=1;
; 0. 12:    while (n <= 5) {
; 0. 13:       putint (fac (n));
; 0. 14:       n = n+1;
; 0. 15:    }
; 0. 16:    return 0;
; 0. 17: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
fac (0.2.5) {0} int function
    n (0.2.14) {1} int variable lval param 0
    f (0.3.8) {1} int variable lval local 0

main (0.10.5) {1} int function
    n (0.11.8) {2} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.2.1) {0} 
| | INT "int" (0.2.1) {0} 
| | | DECLID "fac" (0.2.5) {0} int function 
| | PARAM "(" (0.2.9) {1} 
| | | INT "int" (0.2.10) {1} 
| | | | DECLID "n" (0.2.14) {1} int variable lval param (0.2.10) 
| | BLOCK "{" (0.2.17) {1} 
| | | VARDECL "=" (0.3.10) {1} 
| | | | INT "int" (0.3.4) {1} 
| | | | | DECLID "f" (0.3.8) {1} int variable lval local (0.3.4) 
| | | | INTCON "1" (0.3.12) {1} int const 
| | | WHILE "while" (0.4.4) {1} 
| | | | GT ">" (0.4.13) {1} int vreg 
| | | | | DECLID "n" (0.4.11) {1} variable 
| | | | | INTCON "1" (0.4.15) {1} int const 
| | | | BLOCK "{" (0.4.18) {1} 
| | | | | '=' "=" (0.5.9) {1} vreg 
| | | | | | DECLID "f" (0.5.7) {1} variable 
| | | | | | '*' "*" (0.5.12) {1} int vreg 
| | | | | | | DECLID "f" (0.5.11) {1} variable 
| | | | | | | DECLID "n" (0.5.13) {1} variable 
| | | | | '=' "=" (0.6.9) {1} vreg 
| | | | | | DECLID "n" (0.6.7) {1} variable 
| | | | | | '-' "-" (0.6.12) {1} int vreg 
| | | | | | | DECLID "n" (0.6.11) {1} variable 
| | | | | | | INTCON "1" (0.6.13) {1} int const 
| | | RETURN "return" (0.8.4) {1} 
| | | | DECLID "f" (0.8.11) {1} variable 
| FUNCTION "" (0.10.1) {1} 
| | INT "int" (0.10.1) {1} 
| | | DECLID "main" (0.10.5) {1} int function 
| | PARAM "(" (0.10.9) {2} 
| | BLOCK "{" (0.10.12) {2} 
| | | VARDECL "=" (0.11.9) {2} 
| | | | INT "int" (0.11.4) {2} 
| | | | | DECLID "n" (0.11.8) {2} int variable lval local (0.11.4) 
| | | | INTCON "1" (0.11.10) {2} int const 
| | | WHILE "while" (0.12.4) {2} 
| | | | LE "<=" (0.12.13) {2} int vreg 
| | | | | DECLID "n" (0.12.11) {2} variable 
| | | | | INTCON "5" (0.12.16) {2} int const 
| | | | BLOCK "{" (0.12.19) {2} 
| | | | | CALL "(" (0.13.14) {2} 
| | | | | | IDENT "putint" (0.13.7) {2} 
| | | | | | CALL "(" (0.13.19) {2} 
| | | | | | | IDENT "fac" (0.13.15) {2} 
| | | | | | | DECLID "n" (0.13.20) {2} variable 
| | | | | '=' "=" (0.14.9) {2} vreg 
| | | | | | DECLID "n" (0.14.7) {2} variable 
| | | | | | '+' "+" (0.14.12) {2} int vreg 
| | | | | | | DECLID "n" (0.14.11) {2} variable 
| | | | | | | INTCON "1" (0.14.13) {2} int const 
| | | RETURN "return" (0.16.4) {2} 
| | | | INTCON "0" (0.16.11) {2} int const 
;-1.  1: # 1 "fac.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "fac.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: 
; 0.  5: 
; 0.  6: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 7 "fac.oc" 2
; 0.  7: 
; 0.  8: int fac (int n) {
; 0.  9:    int f = 1;
; 0. 10:    while (n > 1) {
; 0. 11:       f = f * n;
; 0. 12:       n = n - 1;
; 0. 13:    }
; 0. 14:    return f;
; 0. 15: }
; 0. 16: 
; 0. 17: int main() {
; 0. 18:    int n = 1;
; 0. 19:    while (n <= 5) {
; 0. 20:       putint (fac (n));
; 0. 21:       putchar ('\n');
; 0. 22:       n = n + 1;
; 0. 23:    }
; 0. 24:    return 0;
; 0. 25: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
fac (0.8.5) {0} int function
    n (0.8.14) {1} int variable lval param 0
    f (0.9.8) {1} int variable lval local 0

main (0.17.5) {1} int function
    n (0.18.8) {2} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.8.1) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "fac" (0.8.5) {0} int function 
| | PARAM "(" (0.8.9) {1} 
| | | INT "int" (0.8.10) {1} 
| | | | DECLID "n" (0.8.14) {1} int variable lval param (0.8.10) 
| | BLOCK "{" (0.8.17) {1} 
| | | VARDECL "=" (0.9.10) {1} 
| | | | INT "int" (0.9.4) {1} 
| | | | | DECLID "f" (0.9.8) {1} int variable lval local (0.9.4) 
| | | | INTCON "1" (0.9.12) {1} int const 
| | | WHILE "while" (0.10.4) {1} 
| | | | GT ">" (0.10.13) {1} int vreg 
| | | | | DECLID "n" (0.10.11) {1} variable 
| | | | | INTCON "1" (0.10.15) {1} int const 
| | | | BLOCK "{" (0.10.18) {1} 
| | | | | '=' "=" (0.11.9) {1} vreg 
| | | | | | DECLID "f" (0.11.7) {1} variable 
| | | | | | '*' "*" (0.11.13) {1} int vreg 
| | | | | | | DECLID "f" (0.11.11) {1} variable 
| | | | | | | DECLID "n" (0.11.15) {1} variable 
| | | | | '=' "=" (0.12.9) {1} vreg 
| | | | | | DECLID "n" (0.12.7) {1} variable 
| | | | | | '-' "-" (0.12.13) {1} int vreg 
| | | | | | | DECLID "n" (0.12.11) {1} variable 
| | | | | | | INTCON "1" (0.12.15) {1} int const 
| | | RETURN "return" (0.14.4) {1} 
| | | | DECLID "f" (0.14.11) {1} variable 
| FUNCTION "" (0.17.1) {1} 
| | INT "int" (0.17.1) {1} 
| | | DECLID "main" (0.17.5) {1} int function 
| | PARAM "(" (0.17.9) {2} 
| | BLOCK "{" (0.17.12) {2} 
| | | VARDECL "=" (0.18.10) {2} 
| | | | INT "int" (0.18.4) {2} 
| | | | | DECLID "n" (0.18.8) {2} int variable lval local (0.18.4) 
| | | | INTCON "1" (0.18.12) {2} int const 
| | | WHILE "while" (0.19.4) {2} 
| | | | LE "<=" (0.19.13) {2} int vreg 
| | | | | DECLID "n" (0.19.11) {2} variable 
| | | | | INTCON "5" (0.19.16) {2} int const 
| | | | BLOCK "{" (0.19.19) {2} 
| | | | | CALL "(" (0.20.14) {2} 
| | | | | | IDENT "putint" (0.20.7) {2} 
| | | | | | CALL "(" (0.20.19) {2} 
| | | | | | | IDENT "fac" (0.20.15) {2} 
| | | | | | | DECLID "n" (0.20.20) {2} variable 
| | | | | CALL "(" (0.21.15) {2} 
| | | | | | IDENT "putchar" (0.21.7) {2} 
| | | | | | CHARCON "'\n'" (0.21.16) {2} 
| | | | | '=' "=" (0.22.9) {2} vreg 
| | | | | | DECLID "n" (0.22.7) {2} variable 
| | | | | | '+' "+" (0.22.13) {2} int vreg 
| | | | | | | DECLID "n" (0.22.11) {2} variable 
| | | | | | | INTCON "1" (0.22.15) {2} int const 
| | | RETURN "return" (0.24.4) {2} 
| | | | INTCON "0" (0.24.11) {2} int const 
;-1.  1: # 1 "fib2.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "fib2.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: 
; 0.  5: 
; 0.  6: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 7 "fib2.oc" 2
; 0.  7: 
; 0.  8: int fibonacci (int n) {
; 0.  9:    if (n < 2) return n;
; 0. 10:    return fibonacci (n - 1) + fibonacci (n - 2);
; 0. 11: }
; 0. 12: 
; 0. 13: int main() {
; 0. 14:    int n = 0;
; 0. 15:    while (n < 10) {
; 0. 16:       putstr ("fibonacci(");
; 0. 17:       putint (n);
; 0. 18:       putstr (") = ");
; 0. 19:       putint (fibonacci (n));
; 0. 20:       putchar ('\n');
; 0. 21:       n = n + 1;
; 0. 22:    }
; 0. 23:    return 0;
; 0. 24: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
fibonacci (0.8.5) {0} int function
    n (0.8.20) {1} int variable lval param 0

main (0.13.5) {1} int function
    n (0.14.8) {2} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.8.1) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "fibonacci" (0.8.5) {0} int function 
| | PARAM "(" (0.8.15) {1} 
| | | INT "int" (0.8.16) {1} 
| | | | DECLID "n" (0.8.20) {1} int variable lval param (0.8.16) 
| | BLOCK "{" (0.8.23) {1} 
| | | IF "if" (0.9.4) {1} 
| | | | LT "<" (0.9.10) {1} int vreg 
| | | | | DECLID "n" (0.9.8) {1} variable 
| | | | | INTCON "2" (0.9.12) {1} int const 
| | | | RETURN "return" (0.9.15) {1} 
| | | | | DECLID "n" (0.9.22) {1} variable 
| | | RETURN "return" (0.10.4) {1} 
| | | | '+' "+" (0.10.29) {1} int vreg 
| | | | | CALL "(" (0.10.21) {1} 
| | | | | | IDENT "fibonacci" (0.10.11) {1} 
| | | | | | '-' "-" (0.10.24) {1} int vreg 
| | | | | | | DECLID "n" (0.10.22) {1} variable 
| | | | | | | INTCON "1" (0.10.26) {1} int const 
| | | | | CALL "(" (0.10.41) {1} 
| | | | | | IDENT "fibonacci" (0.10.31) {1} 
| | | | | | '-' "-" (0.10.44) {1} int vreg 
| | | | | | | DECLID "n" (0.10.42) {1} variable 
| | | | | | | INTCON "2" (0.10.46) {1} int const 
| FUNCTION "" (0.13.1) {1} 
| | INT "int" (0.13.1) {1} 
| | | DECLID "main" (0.13.5) {1} int function 
| | PARAM "(" (0.13.9) {2} 
| | BLOCK "{" (0.13.12) {2} 
| | | VARDECL "=" (0.14.10) {2} 
| | | | INT "int" (0.14.4) {2} 
| | | | | DECLID "n" (0.14.8) {2} int variable lval local (0.14.4) 
| | | | INTCON "0" (0.14.12) {2} int const 
| | | WHILE "while" (0.15.4) {2} 
| | | | LT "<" (0.15.13) {2} int vreg 
| | | | | DECLID "n" (0.15.11) {2} variable 
| | | | | INTCON "10" (0.15.15) {2} int const 
| | | | BLOCK "{" (0.15.19) {2} 
| | | | | CALL "(" (0.16.14) {2} 
| | | | | | IDENT "putstr" (0.16.7) {2} 
| | | | | | STRINGCON ""fibonacci("" (0.16.15) {2} string const 
| | | | | CALL "(" (0.17.14) {2} 
| | | | | | IDENT "putint" (0.17.7) {2} 
| | | | | | DECLID "n" (0.17.15) {2} variable 
| | | | | CALL "(" (0.18.14) {2} 
| | | | | | IDENT "putstr" (0.18.7) {2} 
| | | | | | STRINGCON "") = "" (0.18.15) {2} string const 
| | | | | CALL "(" (0.19.14) {2} 
| | | | | | IDENT "putint" (0.19.7) {2} 
| | | | | | CALL "(" (0.19.25) {2} 
| | | | | | | IDENT "fibonacci" (0.19.15) {2} 
| | | | | | | DECLID "n" (0.19.26) {2} variable 
| | | | | CALL "(" (0.20.15) {2} 
| | | | | | IDENT "putchar" (0.20.7) {2} 
| | | | | | CHARCON "'\n'" (0.20.16) {2} 
| | | | | '=' "=" (0.21.9) {2} vreg 
| | | | | | DECLID "n" (0.21.7) {2} variable 
| | | | | | '+' "+" (0.21.13) {2} int vreg 
| | | | | | | DECLID "n" (0.21.11) {2} variable 
| | | | | | | INTCON "1" (0.21.15) {2} int const 
| | | RETURN "return" (0.23.4) {2} 
| | | | INTCON "0" (0.23.11) {2} int const 
;-1.  1: # 1 "fib.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "fib.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: 
; 0.  5: 
; 0.  6: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 7 "fib.oc" 2
; 0.  7: 
; 0.  8: 
; 0.  9: int[] fibonacci = null;
; 0. 10: 
; 0. 11: int main() {
; 0. 12:    int index = 2;
; 0. 13:    fibonacci = new int[30];
; 0. 14:    fibonacci[0] = 0;
; 0. 15:    fibonacci[1] = 1;
; 0. 16: 
; 0. 17:    while (index < 30) {
; 0. 18:       fibonacci[index] = fibonacci[index - 1] + fibonacci[index - 2];
; 0. 19:       index = index + 1;
; 0. 20:    }
; 0. 21: 
; 0. 22:    index = 0;
; 0. 23:    puts ("Numeri di figlio Bonacci\n");
; 0. 24:    while (index < 30) {
; 0. 25:       putstr ("fibonacci[");
; 0. 26:       putint (index);
; 0. 27:       putstr ("] = ");
; 0. 28:       putint (fibonacci[index]);
; 0. 29:       putchar ('\n');
; 0. 30:       index = index + 1;
; 0. 31:    }
; 0. 32: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
fibonacci (0.9.7) {0} int array variable 0

main (0.11.5) {0} int function
    index (0.12.8) {1} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| VARDECL "=" (0.9.17) {0} 
| | ARRAY "[]" (0.9.4) {0} 
| | | INT "int" (0.9.1) {0} variable lval 
| | | | DECLID "fibonacci" (0.9.7) {0} int array variable (0.9.1) 
| | NULL "null" (0.9.19) {0} null const 
| FUNCTION "" (0.11.1) {0} 
| | INT "int" (0.11.1) {0} 
| | | DECLID "main" (0.11.5) {0} int function 
| | PARAM "(" (0.11.9) {1} 
| | BLOCK "{" (0.11.12) {1} 
| | | VARDECL "=" (0.12.14) {1} 
| | | | INT "int" (0.12.4) {1} 
| | | | | DECLID "index" (0.12.8) {1} int variable lval local (0.12.4) 
| | | | INTCON "2" (0.12.16) {1} int const 
| | | '=' "=" (0.13.14) {1} vreg 
| | | | DECLID "fibonacci" (0.13.4) {1} variable 
| | | | NEW "new" (0.13.16) {1} 
| | | | | NEWARRAY "[" (0.13.23) {1} array vreg 
| | | | | | INT "int" (0.13.20) {1} 
| | | | | | INTCON "30" (0.13.24) {1} int const 
| | | '=' "=" (0.14.17) {1} vreg 
| | | | INDEX "[" (0.14.13) {1} 
| | | | | DECLID "fibonacci" (0.14.4) {1} variable 
| | | | | INTCON "0" (0.14.14) {1} int const 
| | | | INTCON "0" (0.14.19) {1} int const 
| | | '=' "=" (0.15.17) {1} vreg 
| | | | INDEX "[" (0.15.13) {1} 
| | | | | DECLID "fibonacci" (0.15.4) {1} variable 
| | | | | INTCON "1" (0.15.14) {1} int const 
| | | | INTCON "1" (0.15.19) {1} int const 
| | | WHILE "while" (0.17.4) {1} 
| | | | LT "<" (0.17.17) {1} int vreg 
| | | | | DECLID "index" (0.17.11) {1} variable 
| | | | | INTCON "30" (0.17.19) {1} int const 
| | | | BLOCK "{" (0.17.23) {1} 
| | | | | '=' "=" (0.18.24) {1} vreg 
| | | | | | INDEX "[" (0.18.16) {1} 
| | | | | | | DECLID "fibonacci" (0.18.7) {1} variable 
| | | | | | | DECLID "index" (0.18.17) {1} variable 
| | | | | | '+' "+" (0.18.47) {1} int vreg 
| | | | | | | INDEX "[" (0.18.35) {1} 
| | | | | | | | DECLID "fibonacci" (0.18.26) {1} variable 
| | | | | | | | '-' "-" (0.18.42) {1} int vreg 
| | | | | | | | | DECLID "index" (0.18.36) {1} variable 
| | | | | | | | | INTCON "1" (0.18.44) {1} int const 
| | | | | | | INDEX "[" (0.18.58) {1} 
| | | | | | | | DECLID "fibonacci" (0.18.49) {1} variable 
| | | | | | | | '-' "-" (0.18.65) {1} int vreg 
| | | | | | | | | DECLID "index" (0.18.59) {1} variable 
| | | | | | | | | INTCON "2" (0.18.67) {1} int const 
| | | | | '=' "=" (0.19.13) {1} vreg 
| | | | | | DECLID "index" (0.19.7) {1} variable 
| | | | | | '+' "+" (0.19.21) {1} int vreg 
| | | | | | | DECLID "index" (0.19.15) {1} variable 
| | | | | | | INTCON "1" (0.19.23) {1} int const 
| | | '=' "=" (0.22.10) {1} vreg 
| | | | DECLID "index" (0.22.4) {1} variable 
| | | | INTCON "0" (0.22.12) {1} int const 
| | | CALL "(" (0.23.9) {1} 
| | | | IDENT "puts" (0.23.4) {1} 
| | | | STRINGCON ""Numeri di figlio Bonacci\n"" (0.23.10) {1} string const 
| | | WHILE "while" (0.24.4) {1} 
| | | | LT "<" (0.24.17) {1} int vreg 
| | | | | DECLID "index" (0.24.11) {1} variable 
| | | | | INTCON "30" (0.24.19) {1} int const 
| | | | BLOCK "{" (0.24.23) {1} 
| | | | | CALL "(" (0.25.14) {1} 
| | | | | | IDENT "putstr" (0.25.7) {1} 
| | | | | | STRINGCON ""fibonacci["" (0.25.15) {1} string const 
| | | | | CALL "(" (0.26.14) {1} 
| | | | | | IDENT "putint" (0.26.7) {1} 
| | | | | | DECLID "index" (0.26.15) {1} variable 
| | | | | CALL "(" (0.27.14) {1} 
| | | | | | IDENT "putstr" (0.27.7) {1} 
| | | | | | STRINGCON ""] = "" (0.27.15) {1} string const 
| | | | | CALL "(" (0.28.14) {1} 
| | | | | | IDENT "putint" (0.28.7) {1} 
| | | | | | INDEX "[" (0.28.24) {1} 
| | | | | | | DECLID "fibonacci" (0.28.15) {1} variable 
| | | | | | | DECLID "index" (0.28.25) {1} variable 
| | | | | CALL "(" (0.29.15) {1} 
| | | | | | IDENT "putchar" (0.29.7) {1} 
| | | | | | CHARCON "'\n'" (0.29.16) {1} 
| | | | | '=' "=" (0.30.13) {1} vreg 
| | | | | | DECLID "index" (0.30.7) {1} variable 
| | | | | | '+' "+" (0.30.21) {1} int vreg 
| | | | | | | DECLID "index" (0.30.15) {1} variable 
| | | | | | | INTCON "1" (0.30.23) {1} int const 
;-1.  1: # 1 "hello.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "hello.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 5 "hello.oc" 2
; 0.  5: 
; 0.  6: int main() {
; 0.  7:    putstr ("Hello, world!\n");
; 0.  8:    return 0;
; 0.  9: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_CALL
main (0.6.5) {0} int function

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.6.1) {0} 
| | INT "int" (0.6.1) {0} 
| | | DECLID "main" (0.6.5) {0} int function 
| | PARAM "(" (0.6.9) {1} 
| | BLOCK "{" (0.6.12) {1} 
| | | CALL "(" (0.7.11) {1} 
| | | | IDENT "putstr" (0.7.4) {1} 
| | | | STRINGCON ""Hello, world!\n"" (0.7.12) {1} string const 
| | | RETURN "return" (0.8.4) {1} 
| | | | INTCON "0" (0.8.11) {1} int const 
;-1.  1: # 1 "hithere.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "hithere.oc"
; 0.  1: struct node {
; 0.  2:   int data;
; 0.  3:   node link;
; 0.  4: }
; 0.  5: 
; 0.  6: int[] sum = 10;
; 0.  7: node a = new node;
; 0.  8: int b = 5;
; 0.  9: int twelve = 11;
; 0. 10: 
; 0. 11: int func(int n) {
; 0. 12:    twelve = 12;
; 0. 13:    int b = 10 + 10;
; 0. 14:    return b;
; 0. 15: }
node (0.1.8) {0} struct node
    data (0.2.7) int field 0
    link (0.3.8) struct node field 1

sum (0.6.7) {0} int array variable 0

a (0.7.6) {0} struct node variable lval 0

b (0.8.5) {0} int variable lval 0

twelve (0.9.5) {0} int variable lval 0

func (0.11.5) {0} int function
    n (0.11.14) {1} int variable lval param 0

ROOT "" (0.0.0) {0} 
| STRUCT "struct" (0.1.1) {0} 
| | TYPEID "node" (0.1.8) {0} struct node 
| | INT "int" (0.2.3) {0} 
| | | FIELD "data" (0.2.7) {0} int field 
| | TYPEID "node" (0.3.3) {0} typeid 
| | | FIELD "link" (0.3.8) {0} struct node field 
| VARDECL "=" (0.6.11) {0} 
| | ARRAY "[]" (0.6.4) {0} 
| | | INT "int" (0.6.1) {0} variable lval 
| | | | DECLID "sum" (0.6.7) {0} int array variable (0.6.1) 
| | INTCON "10" (0.6.13) {0} int const 
| VARDECL "=" (0.7.8) {0} 
| | TYPEID "node" (0.7.1) {0} typeid 
| | | DECLID "a" (0.7.6) {0} struct node variable lval (0.7.1) 
| | NEW "new" (0.7.10) {0} 
| | | TYPEID "node" (0.7.14) {0} typeid 
| VARDECL "=" (0.8.7) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "b" (0.8.5) {0} int variable lval (0.8.1) 
| | INTCON "5" (0.8.9) {0} int const 
| VARDECL "=" (0.9.12) {0} 
| | INT "int" (0.9.1) {0} 
| | | DECLID "twelve" (0.9.5) {0} int variable lval (0.9.1) 
| | INTCON "11" (0.9.14) {0} int const 
| FUNCTION "" (0.11.1) {0} 
| | INT "int" (0.11.1) {0} 
| | | DECLID "func" (0.11.5) {0} int function 
| | PARAM "(" (0.11.9) {1} 
| | | INT "int" (0.11.10) {1} 
| | | | DECLID "n" (0.11.14) {1} int variable lval param (0.11.10) 
| | BLOCK "{" (0.11.17) {1} 
| | | '=' "=" (0.12.11) {1} vreg 
| | | | DECLID "twelve" (0.12.4) {1} variable 
| | | | INTCON "12" (0.12.13) {1} int const 
| | | VARDECL "=" (0.13.10) {1} 
| | | | INT "int" (0.13.4) {1} 
| | | | | DECLID "b" (0.13.8) {1} int variable lval 
| | | | '+' "+" (0.13.15) {1} int vreg 
| | | | | INTCON "10" (0.13.12) {1} int const 
| | | | | INTCON "10" (0.13.17) {1} int const 
| | | RETURN "return" (0.14.4) {1} 
| | | | DECLID "b" (0.14.11) {1} variable 
;-1.  1: # 1 "hundred.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "hundred.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "hundred.oc" 2
; 0.  4: 
; 0.  5: int main() {
; 0.  6:    int count = 0;
; 0.  7:    while (count <= 100) {
; 0.  8:       count = count + 1;
; 0.  9:       putint (count);
; 0. 10:       putchar ('\n');
; 0. 11:    }
; 0. 12:    return 0;
; 0. 13: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
main (0.5.5) {0} int function
    count (0.6.8) {1} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.9) {1} 
| | BLOCK "{" (0.5.12) {1} 
| | | VARDECL "=" (0.6.14) {1} 
| | | | INT "int" (0.6.4) {1} 
| | | | | DECLID "count" (0.6.8) {1} int variable lval local (0.6.4) 
| | | | INTCON "0" (0.6.16) {1} int const 
| | | WHILE "while" (0.7.4) {1} 
| | | | LE "<=" (0.7.17) {1} int vreg 
| | | | | DECLID "count" (0.7.11) {1} variable 
| | | | | INTCON "100" (0.7.20) {1} int const 
| | | | BLOCK "{" (0.7.25) {1} 
| | | | | '=' "=" (0.8.13) {1} vreg 
| | | | | | DECLID "count" (0.8.7) {1} variable 
| | | | | | '+' "+" (0.8.21) {1} int vreg 
| | | | | | | DECLID "count" (0.8.15) {1} variable 
| | | | | | | INTCON "1" (0.8.23) {1} int const 
| | | | | CALL "(" (0.9.14) {1} 
| | | | | | IDENT "putint" (0.9.7) {1} 
| | | | | | DECLID "count" (0.9.15) {1} variable 
| | | | | CALL "(" (0.10.15) {1} 
| | | | | | IDENT "putchar" (0.10.7) {1} 
| | | | | | CHARCON "'\n'" (0.10.16) {1} 
| | | RETURN "return" (0.12.4) {1} 
| | | | INTCON "0" (0.12.11) {1} int const 
;-1.  1: # 1 "insertion.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "insertion.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: 
; 0.  5: 
; 0.  6: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 7 "insertion.oc" 2
; 0.  7: 
; 0.  8: int strcmp (string s1, string s2) {
; 0.  9:    int index = 0;
; 0. 10:    int contin = 1;
; 0. 11:    int s1c = 0;
; 0. 12:    int s2c = 0;
; 0. 13:    int cmp = 0;
; 0. 14:    while (contin) {
; 0. 15:       s1c = s1[index];
; 0. 16:       s2c = s2[index];
; 0. 17:       cmp = s1c - s2c;
; 0. 18:       if (cmp != 0) return cmp;
; 0. 19:       if (s1c == '\0') contin = 0;
; 0. 20:       index = index + 1;
; 0. 21:    }
; 0. 22:    return 0;
; 0. 23: }
; 0. 24: 
; 0. 25: void insertion_sort (int size, string[] array) {
; 0. 26:    int sorted = 1;
; 0. 27:    int slot = 0;
; 0. 28:    string element = null;
; 0. 29:    int contin = 0;
; 0. 30:    while (sorted < size) {
; 0. 31:       slot = sorted;
; 0. 32:       element = array[slot];
; 0. 33:       contin = 1;
; 0. 34:       while (contin) {
; 0. 35:          if (slot == 0) {
; 0. 36:             contin = 0;
; 0. 37:          }else if (strcmp (array[slot - 1], element) <= 0) {
; 0. 38:             contin = 0;
; 0. 39:          }else {
; 0. 40:             array[slot] = array[slot - 1];
; 0. 41:             slot = slot - 1;
; 0. 42:          }
; 0. 43:       }
; 0. 44:       array[slot] = element;
; 0. 45:       sorted = sorted + 1;
; 0. 46:    }
; 0. 47: }
; 0. 48: 
; 0. 49: void print_array (string label, int size, string[] array) {
; 0. 50:    int index = 0;
; 0. 51:    putchar ('\n');
; 0. 52:    putstr (label);
; 0. 53:    putstr (":\n");
; 0. 54:    while (index < size) {
; 0. 55:       putstr (array[index]);
; 0. 56:       putchar ('\n');
; 0. 57:       index = index + 1;
; 0. 58:    }
; 0. 59: }
; 0. 60: 
; 0. 61: int main (int argc, string[] argv) {
; 0. 62:    print_array ("unsorted", argc, argv);
; 0. 63:    insertion_sort (argc, argv);
; 0. 64:    print_array ("sorted", argc, argv);
; 0. 65:    return 0;
; 0. 66: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
strcmp (0.8.5) {0} int function
    s1 (0.8.20) {1} string variable lval param 0
    s2 (0.8.31) {1} string variable lval param 1
    index (0.9.8) {1} int variable lval local 0
    contin (0.10.8) {1} int variable lval local 0
    s1c (0.11.8) {1} int variable lval local 0
    s2c (0.12.8) {1} int variable lval local 0
    cmp (0.13.8) {1} int variable lval local 0

insertion_sort (0.25.6) {1} void function
    size (0.25.26) {2} int variable lval param 0
    array (0.25.41) {2} string array variable lval param 1
    sorted (0.26.8) {2} int variable lval local 0
    slot (0.27.8) {2} int variable lval local 0
    element (0.28.11) {2} string variable lval local 0
    contin (0.29.8) {2} int variable lval local 0

print_array (0.49.6) {2} void function
    label (0.49.26) {3} string variable lval param 0
    size (0.49.37) {3} int variable lval param 1
    array (0.49.52) {3} string array variable lval param 2
    index (0.50.8) {3} int variable lval local 0

main (0.61.5) {3} int function
    argc (0.61.15) {4} int variable lval param 0
    argv (0.61.30) {4} string array variable lval param 1

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.8.1) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "strcmp" (0.8.5) {0} int function 
| | PARAM "(" (0.8.12) {1} 
| | | STRING "string" (0.8.13) {1} 
| | | | DECLID "s1" (0.8.20) {1} string variable lval param (0.8.13) 
| | | STRING "string" (0.8.24) {1} 
| | | | DECLID "s2" (0.8.31) {1} string variable lval param (0.8.24) 
| | BLOCK "{" (0.8.35) {1} 
| | | VARDECL "=" (0.9.14) {1} 
| | | | INT "int" (0.9.4) {1} 
| | | | | DECLID "index" (0.9.8) {1} int variable lval local (0.9.4) 
| | | | INTCON "0" (0.9.16) {1} int const 
| | | VARDECL "=" (0.10.15) {1} 
| | | | INT "int" (0.10.4) {1} 
| | | | | DECLID "contin" (0.10.8) {1} int variable lval local (0.10.4) 
| | | | INTCON "1" (0.10.17) {1} int const 
| | | VARDECL "=" (0.11.12) {1} 
| | | | INT "int" (0.11.4) {1} 
| | | | | DECLID "s1c" (0.11.8) {1} int variable lval local (0.11.4) 
| | | | INTCON "0" (0.11.14) {1} int const 
| | | VARDECL "=" (0.12.12) {1} 
| | | | INT "int" (0.12.4) {1} 
| | | | | DECLID "s2c" (0.12.8) {1} int variable lval local (0.12.4) 
| | | | INTCON "0" (0.12.14) {1} int const 
| | | VARDECL "=" (0.13.12) {1} 
| | | | INT "int" (0.13.4) {1} 
| | | | | DECLID "cmp" (0.13.8) {1} int variable lval local (0.13.4) 
| | | | INTCON "0" (0.13.14) {1} int const 
| | | WHILE "while" (0.14.4) {1} 
| | | | DECLID "contin" (0.14.11) {1} variable 
| | | | BLOCK "{" (0.14.19) {1} 
| | | | | '=' "=" (0.15.11) {1} vreg 
| | | | | | DECLID "s1c" (0.15.7) {1} variable 
| | | | | | INDEX "[" (0.15.15) {1} 
| | | | | | | DECLID "s1" (0.15.13) {1} variable 
| | | | | | | DECLID "index" (0.15.16) {1} variable 
| | | | | '=' "=" (0.16.11) {1} vreg 
| | | | | | DECLID "s2c" (0.16.7) {1} variable 
| | | | | | INDEX "[" (0.16.15) {1} 
| | | | | | | DECLID "s2" (0.16.13) {1} variable 
| | | | | | | DECLID "index" (0.16.16) {1} variable 
| | | | | '=' "=" (0.17.11) {1} vreg 
| | | | | | DECLID "cmp" (0.17.7) {1} variable 
| | | | | | '-' "-" (0.17.17) {1} int vreg 
| | | | | | | DECLID "s1c" (0.17.13) {1} variable 
| | | | | | | DECLID "s2c" (0.17.19) {1} variable 
| | | | | IF "if" (0.18.7) {1} 
| | | | | | NE "!=" (0.18.15) {1} int vreg 
| | | | | | | DECLID "cmp" (0.18.11) {1} variable 
| | | | | | | INTCON "0" (0.18.18) {1} int const 
| | | | | | RETURN "return" (0.18.21) {1} 
| | | | | | | DECLID "cmp" (0.18.28) {1} variable 
| | | | | IF "if" (0.19.7) {1} 
| | | | | | EQ "==" (0.19.15) {1} int vreg 
| | | | | | | DECLID "s1c" (0.19.11) {1} variable 
| | | | | | | CHARCON "'\0'" (0.19.18) {1} 
| | | | | | '=' "=" (0.19.31) {1} vreg 
| | | | | | | DECLID "contin" (0.19.24) {1} variable 
| | | | | | | INTCON "0" (0.19.33) {1} int const 
| | | | | '=' "=" (0.20.13) {1} vreg 
| | | | | | DECLID "index" (0.20.7) {1} variable 
| | | | | | '+' "+" (0.20.21) {1} int vreg 
| | | | | | | DECLID "index" (0.20.15) {1} variable 
| | | | | | | INTCON "1" (0.20.23) {1} int const 
| | | RETURN "return" (0.22.4) {1} 
| | | | INTCON "0" (0.22.11) {1} int const 
| FUNCTION "" (0.25.1) {1} 
| | VOID "void" (0.25.1) {1} 
| | | DECLID "insertion_sort" (0.25.6) {1} void function 
| | PARAM "(" (0.25.21) {2} 
| | | INT "int" (0.25.22) {2} 
| | | | DECLID "size" (0.25.26) {2} int variable lval param (0.25.22) 
| | | ARRAY "[]" (0.25.38) {2} 
| | | | STRING "string" (0.25.32) {2} 
| | | | | DECLID "array" (0.25.41) {2} string array variable lval param (0.25.32) 
| | BLOCK "{" (0.25.48) {2} 
| | | VARDECL "=" (0.26.15) {2} 
| | | | INT "int" (0.26.4) {2} 
| | | | | DECLID "sorted" (0.26.8) {2} int variable lval local (0.26.4) 
| | | | INTCON "1" (0.26.17) {2} int const 
| | | VARDECL "=" (0.27.13) {2} 
| | | | INT "int" (0.27.4) {2} 
| | | | | DECLID "slot" (0.27.8) {2} int variable lval local (0.27.4) 
| | | | INTCON "0" (0.27.15) {2} int const 
| | | VARDECL "=" (0.28.19) {2} 
| | | | STRING "string" (0.28.4) {2} 
| | | | | DECLID "element" (0.28.11) {2} string variable lval local (0.28.4) 
| | | | NULL "null" (0.28.21) {2} null const 
| | | VARDECL "=" (0.29.15) {2} 
| | | | INT "int" (0.29.4) {2} 
| | | | | DECLID "contin" (0.29.8) {2} int variable lval local (0.29.4) 
| | | | INTCON "0" (0.29.17) {2} int const 
| | | WHILE "while" (0.30.4) {2} 
| | | | LT "<" (0.30.18) {2} int vreg 
| | | | | DECLID "sorted" (0.30.11) {2} variable 
| | | | | DECLID "size" (0.30.20) {2} variable 
| | | | BLOCK "{" (0.30.26) {2} 
| | | | | '=' "=" (0.31.12) {2} vreg 
| | | | | | DECLID "slot" (0.31.7) {2} variable 
| | | | | | DECLID "sorted" (0.31.14) {2} variable 
| | | | | '=' "=" (0.32.15) {2} vreg 
| | | | | | DECLID "element" (0.32.7) {2} variable 
| | | | | | INDEX "[" (0.32.22) {2} 
| | | | | | | DECLID "array" (0.32.17) {2} variable 
| | | | | | | DECLID "slot" (0.32.23) {2} variable 
| | | | | '=' "=" (0.33.14) {2} vreg 
| | | | | | DECLID "contin" (0.33.7) {2} variable 
| | | | | | INTCON "1" (0.33.16) {2} int const 
| | | | | WHILE "while" (0.34.7) {2} 
| | | | | | DECLID "contin" (0.34.14) {2} variable 
| | | | | | BLOCK "{" (0.34.22) {2} 
| | | | | | | IF "if" (0.35.10) {2} 
| | | | | | | | EQ "==" (0.35.19) {2} int vreg 
| | | | | | | | | DECLID "slot" (0.35.14) {2} variable 
| | | | | | | | | INTCON "0" (0.35.22) {2} int const 
| | | | | | | | BLOCK "{" (0.35.25) {2} 
| | | | | | | | | '=' "=" (0.36.20) {2} vreg 
| | | | | | | | | | DECLID "contin" (0.36.13) {2} variable 
| | | | | | | | | | INTCON "0" (0.36.22) {2} int const 
| | | | | | | | IF "if" (0.37.16) {2} 
| | | | | | | | | LE "<=" (0.37.54) {2} int vreg 
| | | | | | | | | | CALL "(" (0.37.27) {2} 
| | | | | | | | | | | IDENT "strcmp" (0.37.20) {2} 
| | | | | | | | | | | INDEX "[" (0.37.33) {2} 
| | | | | | | | | | | | DECLID "array" (0.37.28) {2} variable 
| | | | | | | | | | | | '-' "-" (0.37.39) {2} int vreg 
| | | | | | | | | | | | | DECLID "slot" (0.37.34) {2} variable 
| | | | | | | | | | | | | INTCON "1" (0.37.41) {2} int const 
| | | | | | | | | | | DECLID "element" (0.37.45) {2} variable 
| | | | | | | | | | INTCON "0" (0.37.57) {2} int const 
| | | | | | | | | BLOCK "{" (0.37.60) {2} 
| | | | | | | | | | '=' "=" (0.38.20) {2} vreg 
| | | | | | | | | | | DECLID "contin" (0.38.13) {2} variable 
| | | | | | | | | | | INTCON "0" (0.38.22) {2} int const 
| | | | | | | | | BLOCK "{" (0.39.16) {2} 
| | | | | | | | | | '=' "=" (0.40.25) {2} vreg 
| | | | | | | | | | | INDEX "[" (0.40.18) {2} 
| | | | | | | | | | | | DECLID "array" (0.40.13) {2} variable 
| | | | | | | | | | | | DECLID "slot" (0.40.19) {2} variable 
| | | | | | | | | | | INDEX "[" (0.40.32) {2} 
| | | | | | | | | | | | DECLID "array" (0.40.27) {2} variable 
| | | | | | | | | | | | '-' "-" (0.40.38) {2} int vreg 
| | | | | | | | | | | | | DECLID "slot" (0.40.33) {2} variable 
| | | | | | | | | | | | | INTCON "1" (0.40.40) {2} int const 
| | | | | | | | | | '=' "=" (0.41.18) {2} vreg 
| | | | | | | | | | | DECLID "slot" (0.41.13) {2} variable 
| | | | | | | | | | | '-' "-" (0.41.25) {2} int vreg 
| | | | | | | | | | | | DECLID "slot" (0.41.20) {2} variable 
| | | | | | | | | | | | INTCON "1" (0.41.27) {2} int const 
| | | | | '=' "=" (0.44.19) {2} vreg 
| | | | | | INDEX "[" (0.44.12) {2} 
| | | | | | | DECLID "array" (0.44.7) {2} variable 
| | | | | | | DECLID "slot" (0.44.13) {2} variable 
| | | | | | DECLID "element" (0.44.21) {2} variable 
| | | | | '=' "=" (0.45.14) {2} vreg 
| | | | | | DECLID "sorted" (0.45.7) {2} variable 
| | | | | | '+' "+" (0.45.23) {2} int vreg 
| | | | | | | DECLID "sorted" (0.45.16) {2} variable 
| | | | | | | INTCON "1" (0.45.25) {2} int const 
| FUNCTION "" (0.49.1) {2} 
| | VOID "void" (0.49.1) {2} 
| | | DECLID "print_array" (0.49.6) {2} void function 
| | PARAM "(" (0.49.18) {3} 
| | | STRING "string" (0.49.19) {3} 
| | | | DECLID "label" (0.49.26) {3} string variable lval param (0.49.19) 
| | | INT "int" (0.49.33) {3} 
| | | | DECLID "size" (0.49.37) {3} int variable lval param (0.49.33) 
| | | ARRAY "[]" (0.49.49) {3} 
| | | | STRING "string" (0.49.43) {3} 
| | | | | DECLID "array" (0.49.52) {3} string array variable lval param (0.49.43) 
| | BLOCK "{" (0.49.59) {3} 
| | | VARDECL "=" (0.50.14) {3} 
| | | | INT "int" (0.50.4) {3} 
| | | | | DECLID "index" (0.50.8) {3} int variable lval local (0.50.4) 
| | | | INTCON "0" (0.50.16) {3} int const 
| | | CALL "(" (0.51.12) {3} 
| | | | IDENT "putchar" (0.51.4) {3} 
| | | | CHARCON "'\n'" (0.51.13) {3} 
| | | CALL "(" (0.52.11) {3} 
| | | | IDENT "putstr" (0.52.4) {3} 
| | | | DECLID "label" (0.52.12) {3} variable 
| | | CALL "(" (0.53.11) {3} 
| | | | IDENT "putstr" (0.53.4) {3} 
| | | | STRINGCON "":\n"" (0.53.12) {3} string const 
| | | WHILE "while" (0.54.4) {3} 
| | | | LT "<" (0.54.17) {3} int vreg 
| | | | | DECLID "index" (0.54.11) {3} variable 
| | | | | DECLID "size" (0.54.19) {3} variable 
| | | | BLOCK "{" (0.54.25) {3} 
| | | | | CALL "(" (0.55.14) {3} 
| | | | | | IDENT "putstr" (0.55.7) {3} 
| | | | | | INDEX "[" (0.55.20) {3} 
| | | | | | | DECLID "array" (0.55.15) {3} variable 
| | | | | | | DECLID "index" (0.55.21) {3} variable 
| | | | | CALL "(" (0.56.15) {3} 
| | | | | | IDENT "putchar" (0.56.7) {3} 
| | | | | | CHARCON "'\n'" (0.56.16) {3} 
| | | | | '=' "=" (0.57.13) {3} vreg 
| | | | | | DECLID "index" (0.57.7) {3} variable 
| | | | | | '+' "+" (0.57.21) {3} int vreg 
| | | | | | | DECLID "index" (0.57.15) {3} variable 
| | | | | | | INTCON "1" (0.57.23) {3} int const 
| FUNCTION "" (0.61.1) {3} 
| | INT "int" (0.61.1) {3} 
| | | DECLID "main" (0.61.5) {3} int function 
| | PARAM "(" (0.61.10) {4} 
| | | INT "int" (0.61.11) {4} 
| | | | DECLID "argc" (0.61.15) {4} int variable lval param (0.61.11) 
| | | ARRAY "[]" (0.61.27) {4} 
| | | | STRING "string" (0.61.21) {4} 
| | | | | DECLID "argv" (0.61.30) {4} string array variable lval param (0.61.21) 
| | BLOCK "{" (0.61.36) {4} 
| | | CALL "(" (0.62.16) {4} 
| | | | IDENT "print_array" (0.62.4) {4} 
| | | | STRINGCON ""unsorted"" (0.62.17) {4} string const 
| | | | DECLID "argc" (0.62.29) {4} variable 
| | | | DECLID "argv" (0.62.35) {4} variable 
| | | CALL "(" (0.63.19) {4} 
| | | | IDENT "insertion_sort" (0.63.4) {4} 
| | | | DECLID "argc" (0.63.20) {4} variable 
| | | | DECLID "argv" (0.63.26) {4} variable 
| | | CALL "(" (0.64.16) {4} 
| | | | IDENT "print_array" (0.64.4) {4} 
| | | | STRINGCON ""sorted"" (0.64.17) {4} string const 
| | | | DECLID "argc" (0.64.27) {4} variable 
| | | | DECLID "argv" (0.64.33) {4} variable 
| | | RETURN "return" (0.65.4) {4} 
| | | | INTCON "0" (0.65.11) {4} int const 
;-1.  1: # 1 "linkedstack.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "linkedstack.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "linkedstack.oc" 2
; 0.  4: 
; 0.  5: struct node {
; 0.  6:    string data;
; 0.  7:    node link;
; 0.  8: }
; 0.  9: 
; 0. 10: struct stack {
; 0. 11:    node top;
; 0. 12: }
; 0. 13: 
; 0. 14: int empty (stack stack) {
; 0. 15:    { if (not (stack != null)) { __assert_fail ("stack != null", "linkedstack.oc", 15, __FUNC__); } };
; 0. 16:    return stack->top == null;
; 0. 17: }
; 0. 18: 
; 0. 19: stack new_stack() {
; 0. 20:    stack stack = new stack;
; 0. 21:    stack->top = null;
; 0. 22:    return stack;
; 0. 23: }
; 0. 24: 
; 0. 25: void push (stack stack, string str) {
; 0. 26:    node tmp = new node;
; 0. 27:    { if (not (stack != null)) { __assert_fail ("stack != null", "linkedstack.oc", 27, __FUNC__); } };
; 0. 28:    tmp->data = str;
; 0. 29:    tmp->link = stack->top;
; 0. 30:    stack->top = tmp;
; 0. 31: }
; 0. 32: 
; 0. 33: string pop (stack stack) {
; 0. 34:    string tmp = stack->top->data;
; 0. 35:    { if (not (stack != null)) { __assert_fail ("stack != null", "linkedstack.oc", 35, __FUNC__); } };
; 0. 36:    { if (not (not empty (stack))) { __assert_fail ("not empty (stack)", "linkedstack.oc", 36, __FUNC__); } };
; 0. 37:    stack->top = stack->top->link;
; 0. 38:    return tmp;
; 0. 39: }
; 0. 40: 
; 0. 41: int main (int argc, string[] argv) {
; 0. 42:    stack stack = new_stack;
; 0. 43:    int argi = 0;
; 0. 44: 
; 0. 45:    while (argi < argc) {
; 0. 46:       push (stack, argv[argi]);
; 0. 47:       argi = argi + 1;
; 0. 48:    }
; 0. 49: 
; 0. 50:    while (not empty (stack)) {
; 0. 51:       putstr (pop (stack));
; 0. 52:       putchar ('\n');
; 0. 53:    }
; 0. 54:    return 0;
; 0. 55: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_NOT
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
node (0.5.8) {0} struct node
    data (0.6.11) string field 0
    link (0.7.9) struct node field 1

stack (0.10.8) {0} struct stack
    top (0.11.9) struct node field 0

empty (0.14.5) {0} int function
    stack (0.14.18) {1} struct stack variable lval param 0

new_stack (0.19.7) {1} struct stack function
    stack (0.20.10) {2} struct stack variable lval local 0

push (0.25.6) {2} void function
    stack (0.25.18) {3} struct stack variable lval param 0
    str (0.25.32) {3} string variable lval param 1
    tmp (0.26.9) {3} struct node variable lval local 0

pop (0.33.8) {3} string function
    stack (0.33.19) {4} struct stack variable lval param 0
    tmp (0.34.11) {4} string variable lval local 0

main (0.41.5) {4} int function
    argc (0.41.15) {5} int variable lval param 0
    argv (0.41.30) {5} string array variable lval param 1
    stack (0.42.10) {5} struct stack variable lval local 0
    argi (0.43.8) {5} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| STRUCT "struct" (0.5.1) {0} 
| | TYPEID "node" (0.5.8) {0} struct node 
| | STRING "string" (0.6.4) {0} 
| | | FIELD "data" (0.6.11) {0} string field 
| | TYPEID "node" (0.7.4) {0} typeid 
| | | FIELD "link" (0.7.9) {0} struct node field 
| STRUCT "struct" (0.10.1) {0} 
| | TYPEID "stack" (0.10.8) {0} struct stack 
| | TYPEID "node" (0.11.4) {0} typeid 
| | | FIELD "top" (0.11.9) {0} struct node field 
| FUNCTION "" (0.14.1) {0} 
| | INT "int" (0.14.1) {0} 
| | | DECLID "empty" (0.14.5) {0} int function 
| | PARAM "(" (0.14.11) {1} 
| | | TYPEID "stack" (0.14.12) {1} typeid 
| | | | DECLID "stack" (0.14.18) {1} struct stack variable lval param (0.14.12) 
| | BLOCK "{" (0.14.25) {1} 
| | | BLOCK "{" (0.15.4) {1} 
| | | | IF "if" (0.15.6) {1} 
| | | | | NOT "not" (0.15.10) {1} 
| | | | | | NE "!=" (0.15.21) {1} int vreg 
| | | | | | | DECLID "stack" (0.15.15) {1} variable 
| | | | | | | NULL "null" (0.15.24) {1} null const 
| | | | | BLOCK "{" (0.15.31) {1} 
| | | | | | CALL "(" (0.15.47) {1} 
| | | | | | | IDENT "__assert_fail" (0.15.33) {1} 
| | | | | | | STRINGCON ""stack != null"" (0.15.48) {1} string const 
| | | | | | | STRINGCON ""linkedstack.oc"" (0.15.65) {1} string const 
| | | | | | | INTCON "15" (0.15.83) {1} int const 
| | | | | | | DECLID "__FUNC__" (0.15.87) {1} variable 
| | | RETURN "return" (0.16.4) {1} 
| | | | EQ "==" (0.16.22) {1} int vreg 
| | | | | ARROW "->" (0.16.16) {1} 
| | | | | | DECLID "stack" (0.16.11) {1} variable lval 
| | | | | | FIELD "top" (0.16.18) {1} field 
| | | | | NULL "null" (0.16.25) {1} null const 
| FUNCTION "" (0.19.1) {1} 
| | TYPEID "stack" (0.19.1) {1} typeid 
| | | DECLID "new_stack" (0.19.7) {1} struct stack function 
| | PARAM "(" (0.19.16) {2} 
| | BLOCK "{" (0.19.19) {2} 
| | | VARDECL "=" (0.20.16) {2} 
| | | | TYPEID "stack" (0.20.4) {2} typeid 
| | | | | DECLID "stack" (0.20.10) {2} struct stack variable lval local (0.20.4) 
| | | | NEW "new" (0.20.18) {2} 
| | | | | TYPEID "stack" (0.20.22) {2} typeid 
| | | '=' "=" (0.21.15) {2} vreg 
| | | | ARROW "->" (0.21.9) {2} lval vaddr 
| | | | | DECLID "stack" (0.21.4) {2} struct stack variable lval 
| | | | | FIELD "top" (0.21.11) {2} field 
| | | | NULL "null" (0.21.17) {2} null const 
| | | RETURN "return" (0.22.4) {2} 
| | | | DECLID "stack" (0.22.11) {2} variable 
| FUNCTION "" (0.25.1) {2} 
| | VOID "void" (0.25.1) {2} 
| | | DECLID "push" (0.25.6) {2} void function 
| | PARAM "(" (0.25.11) {3} 
| | | TYPEID "stack" (0.25.12) {3} typeid 
| | | | DECLID "stack" (0.25.18) {3} struct stack variable lval param (0.25.12) 
| | | STRING "string" (0.25.25) {3} 
| | | | DECLID "str" (0.25.32) {3} string variable lval param (0.25.25) 
| | BLOCK "{" (0.25.37) {3} 
| | | VARDECL "=" (0.26.13) {3} 
| | | | TYPEID "node" (0.26.4) {3} typeid 
| | | | | DECLID "tmp" (0.26.9) {3} struct node variable lval local (0.26.4) 
| | | | NEW "new" (0.26.15) {3} 
| | | | | TYPEID "node" (0.26.19) {3} typeid 
| | | BLOCK "{" (0.27.4) {3} 
| | | | IF "if" (0.27.6) {3} 
| | | | | NOT "not" (0.27.10) {3} 
| | | | | | NE "!=" (0.27.21) {3} int vreg 
| | | | | | | DECLID "stack" (0.27.15) {3} variable 
| | | | | | | NULL "null" (0.27.24) {3} null const 
| | | | | BLOCK "{" (0.27.31) {3} 
| | | | | | CALL "(" (0.27.47) {3} 
| | | | | | | IDENT "__assert_fail" (0.27.33) {3} 
| | | | | | | STRINGCON ""stack != null"" (0.27.48) {3} string const 
| | | | | | | STRINGCON ""linkedstack.oc"" (0.27.65) {3} string const 
| | | | | | | INTCON "27" (0.27.83) {3} int const 
| | | | | | | DECLID "__FUNC__" (0.27.87) {3} variable 
| | | '=' "=" (0.28.14) {3} string vreg 
| | | | ARROW "->" (0.28.7) {3} string lval vaddr 
| | | | | DECLID "tmp" (0.28.4) {3} struct node variable lval 
| | | | | FIELD "data" (0.28.9) {3} field 
| | | | DECLID "str" (0.28.16) {3} variable 
| | | '=' "=" (0.29.14) {3} vreg 
| | | | ARROW "->" (0.29.7) {3} lval vaddr 
| | | | | DECLID "tmp" (0.29.4) {3} struct node variable lval 
| | | | | FIELD "link" (0.29.9) {3} field 
| | | | ARROW "->" (0.29.21) {3} lval vaddr 
| | | | | DECLID "stack" (0.29.16) {3} struct stack variable lval 
| | | | | FIELD "top" (0.29.23) {3} field 
| | | '=' "=" (0.30.15) {3} vreg 
| | | | ARROW "->" (0.30.9) {3} lval vaddr 
| | | | | DECLID "stack" (0.30.4) {3} struct stack variable lval 
| | | | | FIELD "top" (0.30.11) {3} field 
| | | | DECLID "tmp" (0.30.17) {3} variable 
| FUNCTION "" (0.33.1) {3} 
| | STRING "string" (0.33.1) {3} 
| | | DECLID "pop" (0.33.8) {3} string function 
| | PARAM "(" (0.33.12) {4} 
| | | TYPEID "stack" (0.33.13) {4} typeid 
| | | | DECLID "stack" (0.33.19) {4} struct stack variable lval param (0.33.13) 
| | BLOCK "{" (0.33.26) {4} 
| | | VARDECL "=" (0.34.15) {4} 
| | | | STRING "string" (0.34.4) {4} 
| | | | | DECLID "tmp" (0.34.11) {4} string variable lval local (0.34.4) 
| | | | ARROW "->" (0.34.27) {4} 
| | | | | ARROW "->" (0.34.22) {4} lval 
| | | | | | DECLID "stack" (0.34.17) {4} variable lval 
| | | | | | FIELD "top" (0.34.24) {4} field 
| | | | | FIELD "data" (0.34.29) {4} field 
| | | BLOCK "{" (0.35.4) {4} 
| | | | IF "if" (0.35.6) {4} 
| | | | | NOT "not" (0.35.10) {4} 
| | | | | | NE "!=" (0.35.21) {4} int vreg 
| | | | | | | DECLID "stack" (0.35.15) {4} variable 
| | | | | | | NULL "null" (0.35.24) {4} null const 
| | | | | BLOCK "{" (0.35.31) {4} 
| | | | | | CALL "(" (0.35.47) {4} 
| | | | | | | IDENT "__assert_fail" (0.35.33) {4} 
| | | | | | | STRINGCON ""stack != null"" (0.35.48) {4} string const 
| | | | | | | STRINGCON ""linkedstack.oc"" (0.35.65) {4} string const 
| | | | | | | INTCON "35" (0.35.83) {4} int const 
| | | | | | | DECLID "__FUNC__" (0.35.87) {4} variable 
| | | BLOCK "{" (0.36.4) {4} 
| | | | IF "if" (0.36.6) {4} 
| | | | | NOT "not" (0.36.10) {4} 
| | | | | | NOT "not" (0.36.15) {4} 
| | | | | | | CALL "(" (0.36.25) {4} 
| | | | | | | | IDENT "empty" (0.36.19) {4} 
| | | | | | | | DECLID "stack" (0.36.26) {4} variable 
| | | | | BLOCK "{" (0.36.35) {4} 
| | | | | | CALL "(" (0.36.51) {4} 
| | | | | | | IDENT "__assert_fail" (0.36.37) {4} 
| | | | | | | STRINGCON ""not empty (stack)"" (0.36.52) {4} string const 
| | | | | | | STRINGCON ""linkedstack.oc"" (0.36.73) {4} string const 
| | | | | | | INTCON "36" (0.36.91) {4} int const 
| | | | | | | DECLID "__FUNC__" (0.36.95) {4} variable 
| | | '=' "=" (0.37.15) {4} vreg 
| | | | ARROW "->" (0.37.9) {4} lval vaddr 
| | | | | DECLID "stack" (0.37.4) {4} struct stack variable lval 
| | | | | FIELD "top" (0.37.11) {4} field 
| | | | ARROW "->" (0.37.27) {4} 
| | | | | ARROW "->" (0.37.22) {4} lval vaddr 
| | | | | | DECLID "stack" (0.37.17) {4} struct stack variable lval 
| | | | | | FIELD "top" (0.37.24) {4} field 
| | | | | FIELD "link" (0.37.29) {4} field 
| | | RETURN "return" (0.38.4) {4} 
| | | | DECLID "tmp" (0.38.11) {4} variable 
| FUNCTION "" (0.41.1) {4} 
| | INT "int" (0.41.1) {4} 
| | | DECLID "main" (0.41.5) {4} int function 
| | PARAM "(" (0.41.10) {5} 
| | | INT "int" (0.41.11) {5} 
| | | | DECLID "argc" (0.41.15) {5} int variable lval param (0.41.11) 
| | | ARRAY "[]" (0.41.27) {5} 
| | | | STRING "string" (0.41.21) {5} 
| | | | | DECLID "argv" (0.41.30) {5} string array variable lval param (0.41.21) 
| | BLOCK "{" (0.41.36) {5} 
| | | VARDECL "=" (0.42.16) {5} 
| | | | TYPEID "stack" (0.42.4) {5} typeid 
| | | | | DECLID "stack" (0.42.10) {5} struct stack variable lval local (0.42.4) 
| | | | DECLID "new_stack" (0.42.18) {5} variable 
| | | VARDECL "=" (0.43.13) {5} 
| | | | INT "int" (0.43.4) {5} 
| | | | | DECLID "argi" (0.43.8) {5} int variable lval local (0.43.4) 
| | | | INTCON "0" (0.43.15) {5} int const 
| | | WHILE "while" (0.45.4) {5} 
| | | | LT "<" (0.45.16) {5} int vreg 
| | | | | DECLID "argi" (0.45.11) {5} variable 
| | | | | DECLID "argc" (0.45.18) {5} variable 
| | | | BLOCK "{" (0.45.24) {5} 
| | | | | CALL "(" (0.46.12) {5} 
| | | | | | IDENT "push" (0.46.7) {5} 
| | | | | | DECLID "stack" (0.46.13) {5} variable 
| | | | | | INDEX "[" (0.46.24) {5} 
| | | | | | | DECLID "argv" (0.46.20) {5} variable 
| | | | | | | DECLID "argi" (0.46.25) {5} variable 
| | | | | '=' "=" (0.47.12) {5} vreg 
| | | | | | DECLID "argi" (0.47.7) {5} variable 
| | | | | | '+' "+" (0.47.19) {5} int vreg 
| | | | | | | DECLID "argi" (0.47.14) {5} variable 
| | | | | | | INTCON "1" (0.47.21) {5} int const 
| | | WHILE "while" (0.50.4) {5} 
| | | | NOT "not" (0.50.11) {5} 
| | | | | CALL "(" (0.50.21) {5} 
| | | | | | IDENT "empty" (0.50.15) {5} 
| | | | | | DECLID "stack" (0.50.22) {5} variable 
| | | | BLOCK "{" (0.50.30) {5} 
| | | | | CALL "(" (0.51.14) {5} 
| | | | | | IDENT "putstr" (0.51.7) {5} 
| | | | | | CALL "(" (0.51.19) {5} 
| | | | | | | IDENT "pop" (0.51.15) {5} 
| | | | | | | DECLID "stack" (0.51.20) {5} variable 
| | | | | CALL "(" (0.52.15) {5} 
| | | | | | IDENT "putchar" (0.52.7) {5} 
| | | | | | CHARCON "'\n'" (0.52.16) {5} 
| | | RETURN "return" (0.54.4) {5} 
| | | | INTCON "0" (0.54.11) {5} int const 
;-1.  1: # 1 "numbers.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "numbers.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "numbers.oc" 2
; 0.  4: 
; 0.  5: int main() {
; 0.  6:    int number = 1;
; 0.  7:    while (number > 0) {
; 0.  8:       putint (number);
; 0.  9:       putchar ('\n');
; 0. 10:       number = number + number;
; 0. 11:    }
; 0. 12:    putint (number);
; 0. 13:    putchar ('\n');
; 0. 14:    return 0;
; 0. 15: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
main (0.5.5) {0} int function
    number (0.6.8) {1} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.9) {1} 
| | BLOCK "{" (0.5.12) {1} 
| | | VARDECL "=" (0.6.15) {1} 
| | | | INT "int" (0.6.4) {1} 
| | | | | DECLID "number" (0.6.8) {1} int variable lval local (0.6.4) 
| | | | INTCON "1" (0.6.17) {1} int const 
| | | WHILE "while" (0.7.4) {1} 
| | | | GT ">" (0.7.18) {1} int vreg 
| | | | | DECLID "number" (0.7.11) {1} variable 
| | | | | INTCON "0" (0.7.20) {1} int const 
| | | | BLOCK "{" (0.7.23) {1} 
| | | | | CALL "(" (0.8.14) {1} 
| | | | | | IDENT "putint" (0.8.7) {1} 
| | | | | | DECLID "number" (0.8.15) {1} variable 
| | | | | CALL "(" (0.9.15) {1} 
| | | | | | IDENT "putchar" (0.9.7) {1} 
| | | | | | CHARCON "'\n'" (0.9.16) {1} 
| | | | | '=' "=" (0.10.14) {1} vreg 
| | | | | | DECLID "number" (0.10.7) {1} variable 
| | | | | | '+' "+" (0.10.23) {1} int vreg 
| | | | | | | DECLID "number" (0.10.16) {1} variable 
| | | | | | | DECLID "number" (0.10.25) {1} variable 
| | | CALL "(" (0.12.11) {1} 
| | | | IDENT "putint" (0.12.4) {1} 
| | | | DECLID "number" (0.12.12) {1} variable 
| | | CALL "(" (0.13.12) {1} 
| | | | IDENT "putchar" (0.13.4) {1} 
| | | | CHARCON "'\n'" (0.13.13) {1} 
| | | RETURN "return" (0.14.4) {1} 
| | | | INTCON "0" (0.14.11) {1} int const 
;-1.  1: # 1 "ocecho.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "ocecho.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "ocecho.oc" 2
; 0.  4: 
; 0.  5: int main(int argc, string[] argv) {
; 0.  6:    int argi = 1;
; 0.  7:    while (argi < argc) {
; 0.  8:       if (argi > 1) putchar (' ');
; 0.  9:       putstr (argv[argi]);
; 0. 10:       argi = argi + 1;
; 0. 11:    }
; 0. 12:    putstr ("\n");
; 0. 13:    return 0;
; 0. 14: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CALL
main (0.5.5) {0} int function
    argc (0.5.14) {1} int variable lval param 0
    argv (0.5.29) {1} string array variable lval param 1
    argi (0.6.8) {1} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.9) {1} 
| | | INT "int" (0.5.10) {1} 
| | | | DECLID "argc" (0.5.14) {1} int variable lval param (0.5.10) 
| | | ARRAY "[]" (0.5.26) {1} 
| | | | STRING "string" (0.5.20) {1} 
| | | | | DECLID "argv" (0.5.29) {1} string array variable lval param (0.5.20) 
| | BLOCK "{" (0.5.35) {1} 
| | | VARDECL "=" (0.6.13) {1} 
| | | | INT "int" (0.6.4) {1} 
| | | | | DECLID "argi" (0.6.8) {1} int variable lval local (0.6.4) 
| | | | INTCON "1" (0.6.15) {1} int const 
| | | WHILE "while" (0.7.4) {1} 
| | | | LT "<" (0.7.16) {1} int vreg 
| | | | | DECLID "argi" (0.7.11) {1} variable 
| | | | | DECLID "argc" (0.7.18) {1} variable 
| | | | BLOCK "{" (0.7.24) {1} 
| | | | | IF "if" (0.8.7) {1} 
| | | | | | GT ">" (0.8.16) {1} int vreg 
| | | | | | | DECLID "argi" (0.8.11) {1} variable 
| | | | | | | INTCON "1" (0.8.18) {1} int const 
| | | | | | CALL "(" (0.8.29) {1} 
| | | | | | | IDENT "putchar" (0.8.21) {1} 
| | | | | | | CHARCON "' '" (0.8.30) {1} 
| | | | | CALL "(" (0.9.14) {1} 
| | | | | | IDENT "putstr" (0.9.7) {1} 
| | | | | | INDEX "[" (0.9.19) {1} 
| | | | | | | DECLID "argv" (0.9.15) {1} variable 
| | | | | | | DECLID "argi" (0.9.20) {1} variable 
| | | | | '=' "=" (0.10.12) {1} vreg 
| | | | | | DECLID "argi" (0.10.7) {1} variable 
| | | | | | '+' "+" (0.10.19) {1} int vreg 
| | | | | | | DECLID "argi" (0.10.14) {1} variable 
| | | | | | | INTCON "1" (0.10.21) {1} int const 
| | | CALL "(" (0.12.11) {1} 
| | | | IDENT "putstr" (0.12.4) {1} 
| | | | STRINGCON ""\n"" (0.12.12) {1} string const 
| | | RETURN "return" (0.13.4) {1} 
| | | | INTCON "0" (0.13.11) {1} int const 
;-1.  1: # 1 "queens.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "queens.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "queens.oc" 2
; 0.  4: 
; 0.  5: 
; 0.  6: int[] board = null;
; 0.  7: 
; 0.  8: int is_safe (int newcol) {
; 0.  9:    int col = 0;
; 0. 10:    int diagonal = 0;
; 0. 11:    while (col < newcol) {
; 0. 12:       if (board[col] == board[newcol]) return 0;
; 0. 13:       diagonal = board[col] - board[newcol];
; 0. 14:       if (diagonal == col - newcol) return 0;
; 0. 15:       if (diagonal == newcol - col) return 0;
; 0. 16:       col = col + 1;
; 0. 17:    }
; 0. 18:    return 1;
; 0. 19: }
; 0. 20: 
; 0. 21: void printqueens() {
; 0. 22:    int col = 0;
; 0. 23:    while (col < 8) {
; 0. 24:       putchar (board[col] + '1');
; 0. 25:       col = col + 1;
; 0. 26:    }
; 0. 27:    putchar ('\n');
; 0. 28: }
; 0. 29: 
; 0. 30: void queens (int newcol) {
; 0. 31:    int row = 0;
; 0. 32:    if (newcol == 8) printqueens();
; 0. 33:    else {
; 0. 34:       while (row < 8) {
; 0. 35:          board[newcol] = row;
; 0. 36:          if (is_safe (newcol)) queens (newcol + 1);
; 0. 37:          row = row + 1;
; 0. 38:       }
; 0. 39:    }
; 0. 40: }
; 0. 41: 
; 0. 42: int main() {
; 0. 43:    board = new int[8];
; 0. 44:    queens (0);
; 0. 45:    return 0;
; 0. 46: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
board (0.6.7) {0} int array variable 0

is_safe (0.8.5) {0} int function
    newcol (0.8.18) {1} int variable lval param 0
    col (0.9.8) {1} int variable lval local 0
    diagonal (0.10.8) {1} int variable lval local 0

printqueens (0.21.6) {1} void function
    col (0.22.8) {2} int variable lval local 0

queens (0.30.6) {2} void function
    newcol (0.30.18) {3} int variable lval param 0
    row (0.31.8) {3} int variable lval local 0

main (0.42.5) {3} int function

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| VARDECL "=" (0.6.13) {0} 
| | ARRAY "[]" (0.6.4) {0} 
| | | INT "int" (0.6.1) {0} variable lval 
| | | | DECLID "board" (0.6.7) {0} int array variable (0.6.1) 
| | NULL "null" (0.6.15) {0} null const 
| FUNCTION "" (0.8.1) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "is_safe" (0.8.5) {0} int function 
| | PARAM "(" (0.8.13) {1} 
| | | INT "int" (0.8.14) {1} 
| | | | DECLID "newcol" (0.8.18) {1} int variable lval param (0.8.14) 
| | BLOCK "{" (0.8.26) {1} 
| | | VARDECL "=" (0.9.12) {1} 
| | | | INT "int" (0.9.4) {1} 
| | | | | DECLID "col" (0.9.8) {1} int variable lval local (0.9.4) 
| | | | INTCON "0" (0.9.14) {1} int const 
| | | VARDECL "=" (0.10.17) {1} 
| | | | INT "int" (0.10.4) {1} 
| | | | | DECLID "diagonal" (0.10.8) {1} int variable lval local (0.10.4) 
| | | | INTCON "0" (0.10.19) {1} int const 
| | | WHILE "while" (0.11.4) {1} 
| | | | LT "<" (0.11.15) {1} int vreg 
| | | | | DECLID "col" (0.11.11) {1} variable 
| | | | | DECLID "newcol" (0.11.17) {1} variable 
| | | | BLOCK "{" (0.11.25) {1} 
| | | | | IF "if" (0.12.7) {1} 
| | | | | | EQ "==" (0.12.22) {1} int vreg 
| | | | | | | INDEX "[" (0.12.16) {1} 
| | | | | | | | DECLID "board" (0.12.11) {1} variable 
| | | | | | | | DECLID "col" (0.12.17) {1} variable 
| | | | | | | INDEX "[" (0.12.30) {1} 
| | | | | | | | DECLID "board" (0.12.25) {1} variable 
| | | | | | | | DECLID "newcol" (0.12.31) {1} variable 
| | | | | | RETURN "return" (0.12.40) {1} 
| | | | | | | INTCON "0" (0.12.47) {1} int const 
| | | | | '=' "=" (0.13.16) {1} vreg 
| | | | | | DECLID "diagonal" (0.13.7) {1} variable 
| | | | | | '-' "-" (0.13.29) {1} int vreg 
| | | | | | | INDEX "[" (0.13.23) {1} 
| | | | | | | | DECLID "board" (0.13.18) {1} variable 
| | | | | | | | DECLID "col" (0.13.24) {1} variable 
| | | | | | | INDEX "[" (0.13.36) {1} 
| | | | | | | | DECLID "board" (0.13.31) {1} variable 
| | | | | | | | DECLID "newcol" (0.13.37) {1} variable 
| | | | | IF "if" (0.14.7) {1} 
| | | | | | EQ "==" (0.14.20) {1} int vreg 
| | | | | | | DECLID "diagonal" (0.14.11) {1} variable 
| | | | | | | '-' "-" (0.14.27) {1} int vreg 
| | | | | | | | DECLID "col" (0.14.23) {1} variable 
| | | | | | | | DECLID "newcol" (0.14.29) {1} variable 
| | | | | | RETURN "return" (0.14.37) {1} 
| | | | | | | INTCON "0" (0.14.44) {1} int const 
| | | | | IF "if" (0.15.7) {1} 
| | | | | | EQ "==" (0.15.20) {1} int vreg 
| | | | | | | DECLID "diagonal" (0.15.11) {1} variable 
| | | | | | | '-' "-" (0.15.30) {1} int vreg 
| | | | | | | | DECLID "newcol" (0.15.23) {1} variable 
| | | | | | | | DECLID "col" (0.15.32) {1} variable 
| | | | | | RETURN "return" (0.15.37) {1} 
| | | | | | | INTCON "0" (0.15.44) {1} int const 
| | | | | '=' "=" (0.16.11) {1} vreg 
| | | | | | DECLID "col" (0.16.7) {1} variable 
| | | | | | '+' "+" (0.16.17) {1} int vreg 
| | | | | | | DECLID "col" (0.16.13) {1} variable 
| | | | | | | INTCON "1" (0.16.19) {1} int const 
| | | RETURN "return" (0.18.4) {1} 
| | | | INTCON "1" (0.18.11) {1} int const 
| FUNCTION "" (0.21.1) {1} 
| | VOID "void" (0.21.1) {1} 
| | | DECLID "printqueens" (0.21.6) {1} void function 
| | PARAM "(" (0.21.17) {2} 
| | BLOCK "{" (0.21.20) {2} 
| | | VARDECL "=" (0.22.12) {2} 
| | | | INT "int" (0.22.4) {2} 
| | | | | DECLID "col" (0.22.8) {2} int variable lval local (0.22.4) 
| | | | INTCON "0" (0.22.14) {2} int const 
| | | WHILE "while" (0.23.4) {2} 
| | | | LT "<" (0.23.15) {2} int vreg 
| | | | | DECLID "col" (0.23.11) {2} variable 
| | | | | INTCON "8" (0.23.17) {2} int const 
| | | | BLOCK "{" (0.23.20) {2} 
| | | | | CALL "(" (0.24.15) {2} 
| | | | | | IDENT "putchar" (0.24.7) {2} 
| | | | | | '+' "+" (0.24.27) {2} int vreg 
| | | | | | | INDEX "[" (0.24.21) {2} 
| | | | | | | | DECLID "board" (0.24.16) {2} variable 
| | | | | | | | DECLID "col" (0.24.22) {2} variable 
| | | | | | | CHARCON "'1'" (0.24.29) {2} 
| | | | | '=' "=" (0.25.11) {2} vreg 
| | | | | | DECLID "col" (0.25.7) {2} variable 
| | | | | | '+' "+" (0.25.17) {2} int vreg 
| | | | | | | DECLID "col" (0.25.13) {2} variable 
| | | | | | | INTCON "1" (0.25.19) {2} int const 
| | | CALL "(" (0.27.12) {2} 
| | | | IDENT "putchar" (0.27.4) {2} 
| | | | CHARCON "'\n'" (0.27.13) {2} 
| FUNCTION "" (0.30.1) {2} 
| | VOID "void" (0.30.1) {2} 
| | | DECLID "queens" (0.30.6) {2} void function 
| | PARAM "(" (0.30.13) {3} 
| | | INT "int" (0.30.14) {3} 
| | | | DECLID "newcol" (0.30.18) {3} int variable lval param (0.30.14) 
| | BLOCK "{" (0.30.26) {3} 
| | | VARDECL "=" (0.31.12) {3} 
| | | | INT "int" (0.31.4) {3} 
| | | | | DECLID "row" (0.31.8) {3} int variable lval local (0.31.4) 
| | | | INTCON "0" (0.31.14) {3} int const 
| | | IF "if" (0.32.4) {3} 
| | | | EQ "==" (0.32.15) {3} int vreg 
| | | | | DECLID "newcol" (0.32.8) {3} variable 
| | | | | INTCON "8" (0.32.18) {3} int const 
| | | | CALL "(" (0.32.32) {3} 
| | | | | IDENT "printqueens" (0.32.21) {3} 
| | | | BLOCK "{" (0.33.9) {3} 
| | | | | WHILE "while" (0.34.7) {3} 
| | | | | | LT "<" (0.34.18) {3} int vreg 
| | | | | | | DECLID "row" (0.34.14) {3} variable 
| | | | | | | INTCON "8" (0.34.20) {3} int const 
| | | | | | BLOCK "{" (0.34.23) {3} 
| | | | | | | '=' "=" (0.35.24) {3} vreg 
| | | | | | | | INDEX "[" (0.35.15) {3} 
| | | | | | | | | DECLID "board" (0.35.10) {3} variable 
| | | | | | | | | DECLID "newcol" (0.35.16) {3} variable 
| | | | | | | | DECLID "row" (0.35.26) {3} variable 
| | | | | | | IF "if" (0.36.10) {3} 
| | | | | | | | CALL "(" (0.36.22) {3} 
| | | | | | | | | IDENT "is_safe" (0.36.14) {3} 
| | | | | | | | | DECLID "newcol" (0.36.23) {3} variable 
| | | | | | | | CALL "(" (0.36.39) {3} 
| | | | | | | | | IDENT "queens" (0.36.32) {3} 
| | | | | | | | | '+' "+" (0.36.47) {3} int vreg 
| | | | | | | | | | DECLID "newcol" (0.36.40) {3} variable 
| | | | | | | | | | INTCON "1" (0.36.49) {3} int const 
| | | | | | | '=' "=" (0.37.14) {3} vreg 
| | | | | | | | DECLID "row" (0.37.10) {3} variable 
| | | | | | | | '+' "+" (0.37.20) {3} int vreg 
| | | | | | | | | DECLID "row" (0.37.16) {3} variable 
| | | | | | | | | INTCON "1" (0.37.22) {3} int const 
| FUNCTION "" (0.42.1) {3} 
| | INT "int" (0.42.1) {3} 
| | | DECLID "main" (0.42.5) {3} int function 
| | PARAM "(" (0.42.9) {4} 
| | BLOCK "{" (0.42.12) {4} 
| | | '=' "=" (0.43.10) {4} vreg 
| | | | DECLID "board" (0.43.4) {4} variable 
| | | | NEW "new" (0.43.12) {4} 
| | | | | NEWARRAY "[" (0.43.19) {4} array vreg 
| | | | | | INT "int" (0.43.16) {4} 
| | | | | | INTCON "8" (0.43.20) {4} int const 
| | | CALL "(" (0.44.11) {4} 
| | | | IDENT "queens" (0.44.4) {4} 
| | | | INTCON "0" (0.44.12) {4} int const 
| | | RETURN "return" (0.45.4) {4} 
| | | | INTCON "0" (0.45.11) {4} int const 
;-1.  1: # 1 "semantics.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "semantics.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: int[] a = null;
; 0.  5: int[] b = null;
; 0.  6: 
; 0.  7: void[] f() {};
; 0.  8: 
; 0.  9: int main() {
; 0. 10:    int c = a + b;
; 0. 11:    void n = null;
; 0. 12:    bool x = a < b;
; 0. 13:    bool y = a==b;
; 0. 14:    return "foobar";
; 0. 15: }
Press F to pay respect: TOK_PROTOTYPE
a (0.4.7) {0} int array variable 0

b (0.5.7) {0} int array variable 0

main (0.9.5) {0} int function
    c (0.10.8) {1} int variable lval local 0
    n (0.11.9) {1} void variable lval local 0
Incompatible return types at: (0.14.4) 

ROOT "" (0.0.0) {0} 
| VARDECL "=" (0.4.9) {0} 
| | ARRAY "[]" (0.4.4) {0} 
| | | INT "int" (0.4.1) {0} variable lval 
| | | | DECLID "a" (0.4.7) {0} int array variable (0.4.1) 
| | NULL "null" (0.4.11) {0} null const 
| VARDECL "=" (0.5.9) {0} 
| | ARRAY "[]" (0.5.4) {0} 
| | | INT "int" (0.5.1) {0} variable lval 
| | | | DECLID "b" (0.5.7) {0} int array variable (0.5.1) 
| | NULL "null" (0.5.11) {0} null const 
| PROTOTYPE "" (0.7.5) {0} 
| | ARRAY "[]" (0.7.5) {0} 
| | | VOID "void" (0.7.1) {0} 
| | | | DECLID "f" (0.7.8) {0} 
| | PARAM "(" (0.7.9) {0} 
| FUNCTION "" (0.9.1) {0} 
| | INT "int" (0.9.1) {0} 
| | | DECLID "main" (0.9.5) {0} int function 
| | PARAM "(" (0.9.9) {1} 
| | BLOCK "{" (0.9.12) {1} 
| | | VARDECL "=" (0.10.10) {1} 
| | | | INT "int" (0.10.4) {1} 
| | | | | DECLID "c" (0.10.8) {1} int variable lval local (0.10.4) 
| | | | '+' "+" (0.10.14) {1} int vreg 
| | | | | DECLID "a" (0.10.12) {1} variable 
| | | | | DECLID "b" (0.10.16) {1} variable 
| | | VARDECL "=" (0.11.11) {1} 
| | | | VOID "void" (0.11.4) {1} 
| | | | | DECLID "n" (0.11.9) {1} void variable lval local (0.11.4) 
| | | | NULL "null" (0.11.13) {1} null const 
| | | VARDECL "=" (0.12.11) {1} 
| | | | TYPEID "bool" (0.12.4) {1} typeid 
| | | | | DECLID "x" (0.12.9) {1} variable lval 
| | | | LT "<" (0.12.15) {1} int vreg 
| | | | | DECLID "a" (0.12.13) {1} variable 
| | | | | DECLID "b" (0.12.17) {1} variable 
| | | VARDECL "=" (0.13.11) {1} 
| | | | TYPEID "bool" (0.13.4) {1} typeid 
| | | | | DECLID "y" (0.13.9) {1} variable lval 
| | | | EQ "==" (0.13.14) {1} int vreg 
| | | | | DECLID "a" (0.13.13) {1} variable 
| | | | | DECLID "b" (0.13.16) {1} variable 
| | | RETURN "return" (0.14.4) {1} 
| | | | STRINGCON ""foobar"" (0.14.11) {1} string const 
;-1.  1: # 1 "syntax.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "syntax.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: int f() {
; 0.  4: int a = ;
; 0.  5: return foo;
; 0.  6: public static int main (String[] args) {
; 0.  7:    System.exit (255);
; 0.  8: }
;-1.  1: # 1 "test3.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "test3.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "test3.oc" 2
; 0.  4: 
; 0.  5: int main() {
; 0.  6:    int a = 3;
; 0.  7:    int b = 8;
; 0.  8:    int c = a + b;
; 0.  9:    a = b + c;
; 0. 10:    putint (a);
; 0. 11:    putchar ('\n');
; 0. 12:    return 0;
; 0. 13: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
main (0.5.5) {0} int function
    a (0.6.8) {1} int variable lval local 0
    b (0.7.8) {1} int variable lval local 0
    c (0.8.8) {1} int variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | INT "int" (0.5.1) {0} 
| | | DECLID "main" (0.5.5) {0} int function 
| | PARAM "(" (0.5.9) {1} 
| | BLOCK "{" (0.5.12) {1} 
| | | VARDECL "=" (0.6.10) {1} 
| | | | INT "int" (0.6.4) {1} 
| | | | | DECLID "a" (0.6.8) {1} int variable lval local (0.6.4) 
| | | | INTCON "3" (0.6.12) {1} int const 
| | | VARDECL "=" (0.7.10) {1} 
| | | | INT "int" (0.7.4) {1} 
| | | | | DECLID "b" (0.7.8) {1} int variable lval local (0.7.4) 
| | | | INTCON "8" (0.7.12) {1} int const 
| | | VARDECL "=" (0.8.10) {1} 
| | | | INT "int" (0.8.4) {1} 
| | | | | DECLID "c" (0.8.8) {1} int variable lval local (0.8.4) 
| | | | '+' "+" (0.8.14) {1} int vreg 
| | | | | DECLID "a" (0.8.12) {1} variable 
| | | | | DECLID "b" (0.8.16) {1} variable 
| | | '=' "=" (0.9.6) {1} int vreg 
| | | | DECLID "a" (0.9.4) {1} variable 
| | | | '+' "+" (0.9.10) {1} int vreg 
| | | | | DECLID "b" (0.9.8) {1} variable 
| | | | | DECLID "c" (0.9.12) {1} variable 
| | | CALL "(" (0.10.11) {1} 
| | | | IDENT "putint" (0.10.4) {1} 
| | | | DECLID "a" (0.10.12) {1} variable 
| | | CALL "(" (0.11.12) {1} 
| | | | IDENT "putchar" (0.11.4) {1} 
| | | | CHARCON "'\n'" (0.11.13) {1} 
| | | RETURN "return" (0.12.4) {1} 
| | | | INTCON "0" (0.12.11) {1} int const 
;-1.  1: # 1 "test4.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "test4.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "test4.oc" 2
; 0.  4: 
; 0.  5: struct foo {
; 0.  6:    int a;
; 0.  7: }
; 0.  8: 
; 0.  9: int main() {
; 0. 10:    int a = 6;
; 0. 11:    foo b = new foo;
; 0. 12:    b->a = 8;
; 0. 13:    a = a * b->a + 6;;
; 0. 14:    putint (a);
; 0. 15:    putchar (' ');
; 0. 16:    putint (b->a);
; 0. 17:    putchar ('\n');
; 0. 18:    return 0;
; 0. 19: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CHARCON
foo (0.5.8) {0} struct foo
    a (0.6.8) int field 0

main (0.9.5) {0} int function
    a (0.10.8) {1} int variable lval local 0
    b (0.11.8) {1} struct foo variable lval local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| STRUCT "struct" (0.5.1) {0} 
| | TYPEID "foo" (0.5.8) {0} struct foo 
| | INT "int" (0.6.4) {0} 
| | | FIELD "a" (0.6.8) {0} int field 
| FUNCTION "" (0.9.1) {0} 
| | INT "int" (0.9.1) {0} 
| | | DECLID "main" (0.9.5) {0} int function 
| | PARAM "(" (0.9.9) {1} 
| | BLOCK "{" (0.9.12) {1} 
| | | VARDECL "=" (0.10.10) {1} 
| | | | INT "int" (0.10.4) {1} 
| | | | | DECLID "a" (0.10.8) {1} int variable lval local (0.10.4) 
| | | | INTCON "6" (0.10.12) {1} int const 
| | | VARDECL "=" (0.11.10) {1} 
| | | | TYPEID "foo" (0.11.4) {1} typeid 
| | | | | DECLID "b" (0.11.8) {1} struct foo variable lval local (0.11.4) 
| | | | NEW "new" (0.11.12) {1} 
| | | | | TYPEID "foo" (0.11.16) {1} typeid 
| | | '=' "=" (0.12.9) {1} int vreg 
| | | | ARROW "->" (0.12.5) {1} int lval vaddr 
| | | | | DECLID "b" (0.12.4) {1} struct foo variable lval 
| | | | | FIELD "a" (0.12.7) {1} field 
| | | | INTCON "8" (0.12.11) {1} int const 
| | | '=' "=" (0.13.6) {1} int vreg 
| | | | DECLID "a" (0.13.4) {1} variable 
| | | | '+' "+" (0.13.17) {1} int vreg 
| | | | | '*' "*" (0.13.10) {1} int vreg 
| | | | | | DECLID "a" (0.13.8) {1} variable 
| | | | | | ARROW "->" (0.13.13) {1} 
| | | | | | | DECLID "b" (0.13.12) {1} variable lval 
| | | | | | | FIELD "a" (0.13.15) {1} field 
| | | | | INTCON "6" (0.13.19) {1} int const 
| | | CALL "(" (0.14.11) {1} 
| | | | IDENT "putint" (0.14.4) {1} 
| | | | DECLID "a" (0.14.12) {1} variable 
| | | CALL "(" (0.15.12) {1} 
| | | | IDENT "putchar" (0.15.4) {1} 
| | | | CHARCON "' '" (0.15.13) {1} 
| | | CALL "(" (0.16.11) {1} 
| | | | IDENT "putint" (0.16.4) {1} 
| | | | ARROW "->" (0.16.13) {1} 
| | | | | DECLID "b" (0.16.12) {1} variable lval 
| | | | | FIELD "a" (0.16.15) {1} field 
| | | CALL "(" (0.17.12) {1} 
| | | | IDENT "putchar" (0.17.4) {1} 
| | | | CHARCON "'\n'" (0.17.13) {1} 
| | | RETURN "return" (0.18.4) {1} 
| | | | INTCON "0" (0.18.11) {1} int const 
;-1.  1: # 1 "test6.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "test6.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "test6.oc" 2
; 0.  4: 
; 0.  5: struct foo {}
; 0.  6: struct bar {}
; 0.  7: 
; 0.  8: int f0();
; 0.  9: int f1 (int a);
; 0. 10: int f2 (int a, int b);
; 0. 11: int f3 (string a, string b, string c);
; 0. 12: int f4 (foo a, bar b);
; 0. 13: 
; 0. 14: int main() {
; 0. 15:    string s = "a";
; 0. 16:    string[] sa = new string[10];
; 0. 17:    return 0;
; 0. 18: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
foo (0.5.8) {0} struct foo

bar (0.6.8) {0} struct bar

main (0.14.5) {0} int function
    s (0.15.11) {1} string variable lval local 0
    sa (0.16.13) {1} string array variable local 0

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| STRUCT "struct" (0.5.1) {0} 
| | TYPEID "foo" (0.5.8) {0} struct foo 
| STRUCT "struct" (0.6.1) {0} 
| | TYPEID "bar" (0.6.8) {0} struct bar 
| PROTOTYPE "" (0.8.1) {0} 
| | INT "int" (0.8.1) {0} 
| | | DECLID "f0" (0.8.5) {0} int variable 
| | PARAM "(" (0.8.7) {0} 
| PROTOTYPE "" (0.9.1) {0} 
| | INT "int" (0.9.1) {0} 
| | | DECLID "f1" (0.9.5) {0} int variable 
| | PARAM "(" (0.9.8) {0} 
| | | INT "int" (0.9.9) {0} 
| | | | DECLID "a" (0.9.13) {0} int variable lval param 
| PROTOTYPE "" (0.10.1) {0} 
| | INT "int" (0.10.1) {0} 
| | | DECLID "f2" (0.10.5) {0} int variable 
| | PARAM "(" (0.10.8) {0} 
| | | INT "int" (0.10.9) {0} 
| | | | DECLID "a" (0.10.13) {0} int variable lval param 
| | | INT "int" (0.10.16) {0} 
| | | | DECLID "b" (0.10.20) {0} int variable lval param 
| PROTOTYPE "" (0.11.1) {0} 
| | INT "int" (0.11.1) {0} 
| | | DECLID "f3" (0.11.5) {0} int variable 
| | PARAM "(" (0.11.8) {0} 
| | | STRING "string" (0.11.9) {0} 
| | | | DECLID "a" (0.11.16) {0} string variable lval param 
| | | STRING "string" (0.11.19) {0} 
| | | | DECLID "b" (0.11.26) {0} string variable lval param 
| | | STRING "string" (0.11.29) {0} 
| | | | DECLID "c" (0.11.36) {0} string variable lval param 
| PROTOTYPE "" (0.12.1) {0} 
| | INT "int" (0.12.1) {0} 
| | | DECLID "f4" (0.12.5) {0} int variable 
| | PARAM "(" (0.12.8) {0} 
| | | TYPEID "foo" (0.12.9) {0} typeid 
| | | | DECLID "a" (0.12.13) {0} variable lval param 
| | | TYPEID "bar" (0.12.16) {0} typeid 
| | | | DECLID "b" (0.12.20) {0} variable lval param 
| FUNCTION "" (0.14.1) {0} 
| | INT "int" (0.14.1) {0} 
| | | DECLID "main" (0.14.5) {0} int function 
| | PARAM "(" (0.14.9) {1} 
| | BLOCK "{" (0.14.12) {1} 
| | | VARDECL "=" (0.15.13) {1} 
| | | | STRING "string" (0.15.4) {1} 
| | | | | DECLID "s" (0.15.11) {1} string variable lval local (0.15.4) 
| | | | STRINGCON ""a"" (0.15.15) {1} string const 
| | | VARDECL "=" (0.16.16) {1} 
| | | | ARRAY "[]" (0.16.10) {1} 
| | | | | STRING "string" (0.16.4) {1} variable lval 
| | | | | | DECLID "sa" (0.16.13) {1} string array variable local (0.16.4) 
| | | | NEW "new" (0.16.18) {1} 
| | | | | NEWARRAY "[" (0.16.28) {1} array vreg 
| | | | | | STRING "string" (0.16.22) {1} 
| | | | | | INTCON "10" (0.16.29) {1} int const 
| | | RETURN "return" (0.17.4) {1} 
| | | | INTCON "0" (0.17.11) {1} int const 
;-1.  1: # 1 "towers.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "towers.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: # 1 "oclib.h" 1
; 4.  1: # 29 "oclib.h"
; 4. 29: void __assert_fail (string expr, string file, int line, string func);
; 4. 30: void putchar (int c);
; 4. 31: void putint (int i);
; 4. 32: void putstr (string s);
; 4. 33: int getchar();
; 4. 34: string getword();
; 4. 35: string getln();
; 4. 36: void endl();
; 4. 37: void exit (int status);
; 4. 38: # 4 "towers.oc" 2
; 0.  4: 
; 0.  5: void move (string src, string dst) {
; 0.  6:    putstr ("Move a disk from ");
; 0.  7:    putstr (src);
; 0.  8:    putstr (" to ");
; 0.  9:    putstr (dst);
; 0. 10:    putstr (".\n");
; 0. 11: }
; 0. 12: 
; 0. 13: void towers (int ndisks, string src, string tmp, string dst) {
; 0. 14:    if (ndisks < 1) return;
; 0. 15:    towers (ndisks - 1, src, dst, tmp);
; 0. 16:    move (src, dst);
; 0. 17:    towers (ndisks - 1, tmp, src, dst);
; 0. 18: }
; 0. 19: 
; 0. 20: int main() {
; 0. 21:    towers (4, "Source", "Temporary", "Destination");
; 0. 22:    return 0;
; 0. 23: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
move (0.5.6) {0} void function
    src (0.5.19) {1} string variable lval param 0
    dst (0.5.31) {1} string variable lval param 1

towers (0.13.6) {1} void function
    ndisks (0.13.18) {2} int variable lval param 0
    src (0.13.33) {2} string variable lval param 1
    tmp (0.13.45) {2} string variable lval param 2
    dst (0.13.57) {2} string variable lval param 3
Return type in void function at: (0.14.20) 

main (0.20.5) {2} int function

ROOT "" (0.0.0) {0} 
| PROTOTYPE "" (4.29.1) {0} 
| | VOID "void" (4.29.1) {0} 
| | | DECLID "__assert_fail" (4.29.6) {0} void variable 
| | PARAM "(" (4.29.20) {0} 
| | | STRING "string" (4.29.21) {0} 
| | | | DECLID "expr" (4.29.28) {0} string variable lval param 
| | | STRING "string" (4.29.34) {0} 
| | | | DECLID "file" (4.29.41) {0} string variable lval param 
| | | INT "int" (4.29.47) {0} 
| | | | DECLID "line" (4.29.51) {0} int variable lval param 
| | | STRING "string" (4.29.57) {0} 
| | | | DECLID "func" (4.29.64) {0} string variable lval param 
| PROTOTYPE "" (4.30.1) {0} 
| | VOID "void" (4.30.1) {0} 
| | | DECLID "putchar" (4.30.6) {0} void variable 
| | PARAM "(" (4.30.14) {0} 
| | | INT "int" (4.30.15) {0} 
| | | | DECLID "c" (4.30.19) {0} int variable lval param 
| PROTOTYPE "" (4.31.1) {0} 
| | VOID "void" (4.31.1) {0} 
| | | DECLID "putint" (4.31.6) {0} void variable 
| | PARAM "(" (4.31.13) {0} 
| | | INT "int" (4.31.14) {0} 
| | | | DECLID "i" (4.31.18) {0} int variable lval param 
| PROTOTYPE "" (4.32.1) {0} 
| | VOID "void" (4.32.1) {0} 
| | | DECLID "putstr" (4.32.6) {0} void variable 
| | PARAM "(" (4.32.13) {0} 
| | | STRING "string" (4.32.14) {0} 
| | | | DECLID "s" (4.32.21) {0} string variable lval param 
| PROTOTYPE "" (4.33.1) {0} 
| | INT "int" (4.33.1) {0} 
| | | DECLID "getchar" (4.33.5) {0} int variable 
| | PARAM "(" (4.33.12) {0} 
| PROTOTYPE "" (4.34.1) {0} 
| | STRING "string" (4.34.1) {0} 
| | | DECLID "getword" (4.34.8) {0} string variable 
| | PARAM "(" (4.34.15) {0} 
| PROTOTYPE "" (4.35.1) {0} 
| | STRING "string" (4.35.1) {0} 
| | | DECLID "getln" (4.35.8) {0} string variable 
| | PARAM "(" (4.35.13) {0} 
| PROTOTYPE "" (4.36.1) {0} 
| | VOID "void" (4.36.1) {0} 
| | | DECLID "endl" (4.36.6) {0} void variable 
| | PARAM "(" (4.36.10) {0} 
| PROTOTYPE "" (4.37.1) {0} 
| | VOID "void" (4.37.1) {0} 
| | | DECLID "exit" (4.37.6) {0} void variable 
| | PARAM "(" (4.37.11) {0} 
| | | INT "int" (4.37.12) {0} 
| | | | DECLID "status" (4.37.16) {0} int variable lval param 
| FUNCTION "" (0.5.1) {0} 
| | VOID "void" (0.5.1) {0} 
| | | DECLID "move" (0.5.6) {0} void function 
| | PARAM "(" (0.5.11) {1} 
| | | STRING "string" (0.5.12) {1} 
| | | | DECLID "src" (0.5.19) {1} string variable lval param (0.5.12) 
| | | STRING "string" (0.5.24) {1} 
| | | | DECLID "dst" (0.5.31) {1} string variable lval param (0.5.24) 
| | BLOCK "{" (0.5.36) {1} 
| | | CALL "(" (0.6.11) {1} 
| | | | IDENT "putstr" (0.6.4) {1} 
| | | | STRINGCON ""Move a disk from "" (0.6.12) {1} string const 
| | | CALL "(" (0.7.11) {1} 
| | | | IDENT "putstr" (0.7.4) {1} 
| | | | DECLID "src" (0.7.12) {1} variable 
| | | CALL "(" (0.8.11) {1} 
| | | | IDENT "putstr" (0.8.4) {1} 
| | | | STRINGCON "" to "" (0.8.12) {1} string const 
| | | CALL "(" (0.9.11) {1} 
| | | | IDENT "putstr" (0.9.4) {1} 
| | | | DECLID "dst" (0.9.12) {1} variable 
| | | CALL "(" (0.10.11) {1} 
| | | | IDENT "putstr" (0.10.4) {1} 
| | | | STRINGCON "".\n"" (0.10.12) {1} string const 
| FUNCTION "" (0.13.1) {1} 
| | VOID "void" (0.13.1) {1} 
| | | DECLID "towers" (0.13.6) {1} void function 
| | PARAM "(" (0.13.13) {2} 
| | | INT "int" (0.13.14) {2} 
| | | | DECLID "ndisks" (0.13.18) {2} int variable lval param (0.13.14) 
| | | STRING "string" (0.13.26) {2} 
| | | | DECLID "src" (0.13.33) {2} string variable lval param (0.13.26) 
| | | STRING "string" (0.13.38) {2} 
| | | | DECLID "tmp" (0.13.45) {2} string variable lval param (0.13.38) 
| | | STRING "string" (0.13.50) {2} 
| | | | DECLID "dst" (0.13.57) {2} string variable lval param (0.13.50) 
| | BLOCK "{" (0.13.62) {2} 
| | | IF "if" (0.14.4) {2} 
| | | | LT "<" (0.14.15) {2} int vreg 
| | | | | DECLID "ndisks" (0.14.8) {2} variable 
| | | | | INTCON "1" (0.14.17) {2} int const 
| | | | RETURN "return" (0.14.20) {2} 
| | | CALL "(" (0.15.11) {2} 
| | | | IDENT "towers" (0.15.4) {2} 
| | | | '-' "-" (0.15.19) {2} int vreg 
| | | | | DECLID "ndisks" (0.15.12) {2} variable 
| | | | | INTCON "1" (0.15.21) {2} int const 
| | | | DECLID "src" (0.15.24) {2} variable 
| | | | DECLID "dst" (0.15.29) {2} variable 
| | | | DECLID "tmp" (0.15.34) {2} variable 
| | | CALL "(" (0.16.9) {2} 
| | | | IDENT "move" (0.16.4) {2} 
| | | | DECLID "src" (0.16.10) {2} variable 
| | | | DECLID "dst" (0.16.15) {2} variable 
| | | CALL "(" (0.17.11) {2} 
| | | | IDENT "towers" (0.17.4) {2} 
| | | | '-' "-" (0.17.19) {2} int vreg 
| | | | | DECLID "ndisks" (0.17.12) {2} variable 
| | | | | INTCON "1" (0.17.21) {2} int const 
| | | | DECLID "tmp" (0.17.24) {2} variable 
| | | | DECLID "src" (0.17.29) {2} variable 
| | | | DECLID "dst" (0.17.34) {2} variable 
| FUNCTION "" (0.20.1) {2} 
| | INT "int" (0.20.1) {2} 
| | | DECLID "main" (0.20.5) {2} int function 
| | PARAM "(" (0.20.9) {3} 
| | BLOCK "{" (0.20.12) {3} 
| | | CALL "(" (0.21.11) {3} 
| | | | IDENT "towers" (0.21.4) {3} 
| | | | INTCON "4" (0.21.12) {3} int const 
| | | | STRINGCON ""Source"" (0.21.15) {3} string const 
| | | | STRINGCON ""Temporary"" (0.21.25) {3} string const 
| | | | STRINGCON ""Destination"" (0.21.38) {3} string const 
| | | RETURN "return" (0.22.4) {3} 
| | | | INTCON "0" (0.22.11) {3} int const 
;-1.  1: # 1 "trivial.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "trivial.oc"
ROOT "" (0.0.0) {0} 
;-1.  1: # 1 "typecheck.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "typecheck.oc"
; 0.  1: # 9 "typecheck.oc"
; 0.  9: int[] a = null;
; 0. 10: reference[] a = new string[10];
; 0. 11: void foo();
; 0. 12: void foo (int a);
; 0. 13: void foo (int[] a, int[] b) {int x = a + b;}
; 0. 14: struct foo { int a; int b; }
; 0. 15: 
; 0. 16: int main() {
; 0. 17:    a + b;
; 0. 18:    f();
; 0. 19:    f (x, y+3, z);
; 0. 20:    foo + bar;
; 0. 21:    a = b = c = d;
; 0. 22:    test = abc + def + ghi;
; 0. 23:    this + 23 * a + "hello";
; 0. 24:    while (a < b) f = f + 1;
; 0. 25:    return 3 + 4;
; 0. 26:    a[i] = b[j];
; 0. 27:    return;
; 0. 28:    while (true) {a = 3; b = 4; }
; 0. 29:    if (a == b) f (x);
; 0. 30:    if (a != b) y = 3; else f (y, z);
; 0. 31: }
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_PROTOTYPE
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_INDEX
Press F to pay respect: TOK_WHILE
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
Press F to pay respect: TOK_IF
Press F to pay respect: TOK_CALL
a (0.9.7) {0} int array variable 0

foo (0.13.6) {0} void function
    a (0.13.17) {1} int array variable lval param 0
    b (0.13.26) {1} int array variable lval param 1
    x (0.13.34) {1} int variable lval local 0

foo (0.14.8) {0} struct foo
    a (0.14.18) int field 0
    b (0.14.25) int field 1

main (0.16.5) {1} int function

ROOT "" (0.0.0) {0} 
| VARDECL "=" (0.9.9) {0} 
| | ARRAY "[]" (0.9.4) {0} 
| | | INT "int" (0.9.1) {0} variable lval 
| | | | DECLID "a" (0.9.7) {0} int array variable (0.9.1) 
| | NULL "null" (0.9.11) {0} null const 
| VARDECL "=" (0.10.15) {0} 
| | ARRAY "[]" (0.10.10) {0} 
| | | TYPEID "reference" (0.10.1) {0} variable typeid lval 
| | | | DECLID "a" (0.10.13) {0} array variable 
| | NEW "new" (0.10.17) {0} 
| | | NEWARRAY "[" (0.10.27) {0} array vreg 
| | | | STRING "string" (0.10.21) {0} 
| | | | INTCON "10" (0.10.28) {0} int const 
| PROTOTYPE "" (0.11.1) {0} 
| | VOID "void" (0.11.1) {0} 
| | | DECLID "foo" (0.11.6) {0} void variable 
| | PARAM "(" (0.11.9) {0} 
| PROTOTYPE "" (0.12.1) {0} 
| | VOID "void" (0.12.1) {0} 
| | | DECLID "foo" (0.12.6) {0} void variable 
| | PARAM "(" (0.12.10) {0} 
| | | INT "int" (0.12.11) {0} 
| | | | DECLID "a" (0.12.15) {0} int variable lval param 
| FUNCTION "" (0.13.1) {0} 
| | VOID "void" (0.13.1) {0} 
| | | DECLID "foo" (0.13.6) {0} void function 
| | PARAM "(" (0.13.10) {1} 
| | | ARRAY "[]" (0.13.14) {1} 
| | | | INT "int" (0.13.11) {1} 
| | | | | DECLID "a" (0.13.17) {1} int array variable lval param (0.13.11) 
| | | ARRAY "[]" (0.13.23) {1} 
| | | | INT "int" (0.13.20) {1} 
| | | | | DECLID "b" (0.13.26) {1} int array variable lval param (0.13.20) 
| | BLOCK "{" (0.13.29) {1} 
| | | VARDECL "=" (0.13.36) {1} 
| | | | INT "int" (0.13.30) {1} 
| | | | | DECLID "x" (0.13.34) {1} int variable lval local (0.13.30) 
| | | | '+' "+" (0.13.40) {1} int vreg 
| | | | | DECLID "a" (0.13.38) {1} variable 
| | | | | DECLID "b" (0.13.42) {1} variable 
| STRUCT "struct" (0.14.1) {0} 
| | TYPEID "foo" (0.14.8) {0} struct foo 
| | INT "int" (0.14.14) {0} 
| | | FIELD "a" (0.14.18) {0} int field 
| | INT "int" (0.14.21) {0} 
| | | FIELD "b" (0.14.25) {0} int field 
| FUNCTION "" (0.16.1) {1} 
| | INT "int" (0.16.1) {1} 
| | | DECLID "main" (0.16.5) {1} int function 
| | PARAM "(" (0.16.9) {2} 
| | BLOCK "{" (0.16.12) {2} 
| | | '+' "+" (0.17.6) {2} int vreg 
| | | | DECLID "a" (0.17.4) {2} variable 
| | | | DECLID "b" (0.17.8) {2} variable 
| | | CALL "(" (0.18.5) {2} 
| | | | IDENT "f" (0.18.4) {2} 
| | | CALL "(" (0.19.6) {2} 
| | | | IDENT "f" (0.19.4) {2} 
| | | | DECLID "x" (0.19.7) {2} variable 
| | | | '+' "+" (0.19.11) {2} int vreg 
| | | | | DECLID "y" (0.19.10) {2} variable 
| | | | | INTCON "3" (0.19.12) {2} int const 
| | | | DECLID "z" (0.19.15) {2} variable 
| | | '+' "+" (0.20.8) {2} int vreg 
| | | | DECLID "foo" (0.20.4) {2} variable 
| | | | DECLID "bar" (0.20.10) {2} variable 
| | | '=' "=" (0.21.6) {2} vreg 
| | | | DECLID "a" (0.21.4) {2} variable 
| | | | '=' "=" (0.21.10) {2} vreg 
| | | | | DECLID "b" (0.21.8) {2} variable 
| | | | | '=' "=" (0.21.14) {2} vreg 
| | | | | | DECLID "c" (0.21.12) {2} variable 
| | | | | | DECLID "d" (0.21.16) {2} variable 
| | | '=' "=" (0.22.9) {2} vreg 
| | | | DECLID "test" (0.22.4) {2} variable 
| | | | '+' "+" (0.22.21) {2} int vreg 
| | | | | '+' "+" (0.22.15) {2} int vreg 
| | | | | | DECLID "abc" (0.22.11) {2} variable 
| | | | | | DECLID "def" (0.22.17) {2} variable 
| | | | | DECLID "ghi" (0.22.23) {2} variable 
| | | '+' "+" (0.23.18) {2} int vreg 
| | | | '+' "+" (0.23.9) {2} int vreg 
| | | | | DECLID "this" (0.23.4) {2} variable 
| | | | | '*' "*" (0.23.14) {2} int vreg 
| | | | | | INTCON "23" (0.23.11) {2} int const 
| | | | | | DECLID "a" (0.23.16) {2} variable 
| | | | STRINGCON ""hello"" (0.23.20) {2} string const 
| | | WHILE "while" (0.24.4) {2} 
| | | | LT "<" (0.24.13) {2} int vreg 
| | | | | DECLID "a" (0.24.11) {2} variable 
| | | | | DECLID "b" (0.24.15) {2} variable 
| | | | '=' "=" (0.24.20) {2} vreg 
| | | | | DECLID "f" (0.24.18) {2} variable 
| | | | | '+' "+" (0.24.24) {2} int vreg 
| | | | | | DECLID "f" (0.24.22) {2} variable 
| | | | | | INTCON "1" (0.24.26) {2} int const 
| | | RETURN "return" (0.25.4) {2} 
| | | | '+' "+" (0.25.13) {2} int vreg 
| | | | | INTCON "3" (0.25.11) {2} int const 
| | | | | INTCON "4" (0.25.15) {2} int const 
| | | '=' "=" (0.26.9) {2} vreg 
| | | | INDEX "[" (0.26.5) {2} 
| | | | | DECLID "a" (0.26.4) {2} variable 
| | | | | DECLID "i" (0.26.6) {2} variable 
| | | | INDEX "[" (0.26.12) {2} 
| | | | | DECLID "b" (0.26.11) {2} variable 
| | | | | DECLID "j" (0.26.13) {2} variable 
| | | RETURN "return" (0.27.4) {2} 
| | | WHILE "while" (0.28.4) {2} 
| | | | DECLID "true" (0.28.11) {2} variable 
| | | | BLOCK "{" (0.28.17) {2} 
| | | | | '=' "=" (0.28.20) {2} vreg 
| | | | | | DECLID "a" (0.28.18) {2} variable 
| | | | | | INTCON "3" (0.28.22) {2} int const 
| | | | | '=' "=" (0.28.27) {2} vreg 
| | | | | | DECLID "b" (0.28.25) {2} variable 
| | | | | | INTCON "4" (0.28.29) {2} int const 
| | | IF "if" (0.29.4) {2} 
| | | | EQ "==" (0.29.10) {2} int vreg 
| | | | | DECLID "a" (0.29.8) {2} variable 
| | | | | DECLID "b" (0.29.13) {2} variable 
| | | | CALL "(" (0.29.18) {2} 
| | | | | IDENT "f" (0.29.16) {2} 
| | | | | DECLID "x" (0.29.19) {2} variable 
| | | IF "if" (0.30.4) {2} 
| | | | NE "!=" (0.30.10) {2} int vreg 
| | | | | DECLID "a" (0.30.8) {2} variable 
| | | | | DECLID "b" (0.30.13) {2} variable 
| | | | '=' "=" (0.30.18) {2} vreg 
| | | | | DECLID "y" (0.30.16) {2} variable 
| | | | | INTCON "3" (0.30.20) {2} int const 
| | | | CALL "(" (0.30.30) {2} 
| | | | | IDENT "f" (0.30.28) {2} 
| | | | | DECLID "y" (0.30.31) {2} variable 
| | | | | DECLID "z" (0.30.34) {2} variable 
;-1.  1: # 1 "uncomment.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "uncomment.oc"
ROOT "" (0.0.0) {0} 
;-1.  1: # 1 "unstring.oc"; 0.  0: 
; 0.  1: # 1 "<built-in>"
; 1.  1: # 1 "<command-line>"
; 2.  1: # 1 "/usr/include/stdc-predef.h" 1 3 4
; 3.  1: # 1 "<command-line>" 2
; 2.  1: # 1 "unstring.oc"
; 0.  1: 
; 0.  2: 
; 0.  3: 
; 0.  4: int main() {
; 0.  5:    string t = "\*/";
   string s = "abc;
   char c = 'a;
; 0.  6:    s = "abcd\";
   s = "abc|   ;

; 0.  7:    int 23foobar;
; 0.  8: }
