# 1 "typecheck.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h"
# 1 "<command-line>"
# 1 "typecheck.oc"
# 9 "typecheck.oc"
0  9.001 260 TOK_INT       int
0  9.004 270 TOK_ARRAY     []
0  9.007 280 TOK_IDENT     a
0  9.009  61 '='           =
0  9.011 267 TOK_NULL      null
0  9.015  59 ';'           ;
0 10.001 280 TOK_IDENT     reference
0 10.010 270 TOK_ARRAY     []
0 10.013 280 TOK_IDENT     a
0 10.015  61 '='           =
0 10.017 268 TOK_NEW       new
0 10.021 261 TOK_STRING    string
0 10.027  91 '['           [
0 10.028 281 TOK_INTCON    10
0 10.030  93 ']'           ]
0 10.031  59 ';'           ;
0 11.001 258 TOK_VOID      void
0 11.006 280 TOK_IDENT     foo
0 11.009 295 TOK_PARAM     (
0 11.010  41 ')'           )
0 11.011  59 ';'           ;
0 12.001 258 TOK_VOID      void
0 12.006 280 TOK_IDENT     foo
0 12.010 295 TOK_PARAM     (
0 12.011 260 TOK_INT       int
0 12.015 280 TOK_IDENT     a
0 12.016  41 ')'           )
0 12.017  59 ';'           ;
0 13.001 258 TOK_VOID      void
0 13.006 280 TOK_IDENT     foo
0 13.010 295 TOK_PARAM     (
0 13.011 260 TOK_INT       int
0 13.014 270 TOK_ARRAY     []
0 13.017 280 TOK_IDENT     a
0 13.018  44 ','           ,
0 13.020 260 TOK_INT       int
0 13.023 270 TOK_ARRAY     []
0 13.026 280 TOK_IDENT     b
0 13.027  41 ')'           )
0 13.029 123 '{'           {
0 13.030 260 TOK_INT       int
0 13.034 280 TOK_IDENT     x
0 13.036  61 '='           =
0 13.038 280 TOK_IDENT     a
0 13.040  43 '+'           +
0 13.042 280 TOK_IDENT     b
0 13.043  59 ';'           ;
0 13.044 125 '}'           }
0 14.001 266 TOK_STRUCT    struct
0 14.008 280 TOK_IDENT     foo
0 14.012 123 '{'           {
0 14.014 260 TOK_INT       int
0 14.018 280 TOK_IDENT     a
0 14.019  59 ';'           ;
0 14.021 260 TOK_INT       int
0 14.025 280 TOK_IDENT     b
0 14.026  59 ';'           ;
0 14.028 125 '}'           }
0 16.001 260 TOK_INT       int
0 16.005 280 TOK_IDENT     main
0 16.009 295 TOK_PARAM     (
0 16.010  41 ')'           )
0 16.012 123 '{'           {
0 17.004 280 TOK_IDENT     a
0 17.006  43 '+'           +
0 17.008 280 TOK_IDENT     b
0 17.009  59 ';'           ;
0 18.004 280 TOK_IDENT     f
0 18.005 295 TOK_PARAM     (
0 18.006  41 ')'           )
0 18.007  59 ';'           ;
0 19.004 280 TOK_IDENT     f
0 19.006 295 TOK_PARAM     (
0 19.007 280 TOK_IDENT     x
0 19.008  44 ','           ,
0 19.010 280 TOK_IDENT     y
0 19.011  43 '+'           +
0 19.012 281 TOK_INTCON    3
0 19.013  44 ','           ,
0 19.015 280 TOK_IDENT     z
0 19.016  41 ')'           )
0 19.017  59 ';'           ;
0 20.004 280 TOK_IDENT     foo
0 20.008  43 '+'           +
0 20.010 280 TOK_IDENT     bar
0 20.013  59 ';'           ;
0 21.004 280 TOK_IDENT     a
0 21.006  61 '='           =
0 21.008 280 TOK_IDENT     b
0 21.010  61 '='           =
0 21.012 280 TOK_IDENT     c
0 21.014  61 '='           =
0 21.016 280 TOK_IDENT     d
0 21.017  59 ';'           ;
0 22.004 280 TOK_IDENT     test
0 22.009  61 '='           =
0 22.011 280 TOK_IDENT     abc
0 22.015  43 '+'           +
0 22.017 280 TOK_IDENT     def
0 22.021  43 '+'           +
0 22.023 280 TOK_IDENT     ghi
0 22.026  59 ';'           ;
0 23.004 280 TOK_IDENT     this
0 23.009  43 '+'           +
0 23.011 281 TOK_INTCON    23
0 23.014  42 '*'           *
0 23.016 280 TOK_IDENT     a
0 23.018  43 '+'           +
0 23.020 283 TOK_STRINGCON "hello"
0 23.027  59 ';'           ;
0 24.004 264 TOK_WHILE     while
0 24.010 295 TOK_PARAM     (
0 24.011 280 TOK_IDENT     a
0 24.013 275 TOK_LT        <
0 24.015 280 TOK_IDENT     b
0 24.016  41 ')'           )
0 24.018 280 TOK_IDENT     f
0 24.020  61 '='           =
0 24.022 280 TOK_IDENT     f
0 24.024  43 '+'           +
0 24.026 281 TOK_INTCON    1
0 24.027  59 ';'           ;
0 25.004 265 TOK_RETURN    return
0 25.011 281 TOK_INTCON    3
0 25.013  43 '+'           +
0 25.015 281 TOK_INTCON    4
0 25.016  59 ';'           ;
0 26.004 280 TOK_IDENT     a
0 26.005  91 '['           [
0 26.006 280 TOK_IDENT     i
0 26.007  93 ']'           ]
0 26.009  61 '='           =
0 26.011 280 TOK_IDENT     b
0 26.012  91 '['           [
0 26.013 280 TOK_IDENT     j
0 26.014  93 ']'           ]
0 26.015  59 ';'           ;
0 27.004 265 TOK_RETURN    return
0 27.010  59 ';'           ;
0 28.004 264 TOK_WHILE     while
0 28.010 295 TOK_PARAM     (
0 28.011 280 TOK_IDENT     true
0 28.015  41 ')'           )
0 28.017 123 '{'           {
0 28.018 280 TOK_IDENT     a
0 28.020  61 '='           =
0 28.022 281 TOK_INTCON    3
0 28.023  59 ';'           ;
0 28.025 280 TOK_IDENT     b
0 28.027  61 '='           =
0 28.029 281 TOK_INTCON    4
0 28.030  59 ';'           ;
0 28.032 125 '}'           }
0 29.004 262 TOK_IF        if
0 29.007 295 TOK_PARAM     (
0 29.008 280 TOK_IDENT     a
0 29.010 273 TOK_EQ        ==
0 29.013 280 TOK_IDENT     b
0 29.014  41 ')'           )
0 29.016 280 TOK_IDENT     f
0 29.018 295 TOK_PARAM     (
0 29.019 280 TOK_IDENT     x
0 29.020  41 ')'           )
0 29.021  59 ';'           ;
0 30.004 262 TOK_IF        if
0 30.007 295 TOK_PARAM     (
0 30.008 280 TOK_IDENT     a
0 30.010 274 TOK_NE        !=
0 30.013 280 TOK_IDENT     b
0 30.014  41 ')'           )
0 30.016 280 TOK_IDENT     y
0 30.018  61 '='           =
0 30.020 281 TOK_INTCON    3
0 30.021  59 ';'           ;
0 30.023 263 TOK_ELSE      else
0 30.028 280 TOK_IDENT     f
0 30.030 295 TOK_PARAM     (
0 30.031 280 TOK_IDENT     y
0 30.032  44 ','           ,
0 30.034 280 TOK_IDENT     z
0 30.035  41 ')'           )
0 30.036  59 ';'           ;
0 31.001 125 '}'           }
