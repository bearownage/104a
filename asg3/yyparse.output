Terminals unused in grammar

   TOK_CHAR
   TOK_VARDECL
   TOK_BR
   TOK_ROOT
   TOK_BLOCK
   TOK_CALL
   TOK_IFELSE
   TOK_INITDECL
   TOK_NEWARRAY
   TOK_TYPEID
   TOK_FIELD
   TOK_NEWSTR
   TOK_FUNCTION
   TOK_PROTOTYPE
   TOK_DECLID
   '.'
   '('


State 54 conflicts: 1 reduce/reduce
State 91 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program structdef
    3        | program globaldecl
    4        | program function
    5        | program statement
    6        | program error '{'
    7        | program error ';'
    8        | %empty

    9 structdef: struc '}'

   10 struc: struc fielddecl ';'
   11      | TOK_STRUCT TOK_IDENT '{'

   12 fielddecl: basetype TOK_IDENT
   13          | basetype TOK_ARRAY TOK_IDENT

   14 globaldecl: identdec '=' constant ';'
   15           | identdec '=' expr ';'

   16 function: func fnbody '}' ';'
   17         | func fnbody '}'
   18         | func '{' '}'
   19         | func '{' '}' ';'
   20         | func ';'

   21 func: func ')'
   22     | func param
   23     | identdec

   24 param: param ',' identdec
   25      | TOK_PARAM identdec
   26      | TOK_PARAM

   27 identdec: basetype TOK_ARRAY TOK_IDENT
   28         | basetype TOK_IDENT

   29 fnbody: fnbody statement
   30       | fnbody localdecl
   31       | '{' statement
   32       | '{' localdecl

   33 basetype: TOK_VOID
   34         | TOK_INT
   35         | TOK_STRING
   36         | TOK_IDENT

   37 localdecl: identdec '=' expr ';'

   38 ifelse: TOK_IF TOK_PARAM expr ')' statement
   39       | TOK_IF TOK_PARAM expr ')' statement TOK_ELSE statement
   40       | TOK_ELSE TOK_IF TOK_PARAM expr ')' statement

   41 expr: TOK_NEW allocation
   42     | expr '=' expr
   43     | expr '+' expr
   44     | expr '-' expr
   45     | expr '*' expr
   46     | expr '/' expr
   47     | expr '%' expr
   48     | expr TOK_EQ expr
   49     | expr TOK_NE expr
   50     | expr TOK_LT expr
   51     | expr TOK_LE expr
   52     | expr TOK_GT expr
   53     | expr TOK_GE expr
   54     | unop
   55     | call
   56     | TOK_PARAM expr ')'
   57     | variable
   58     | constant

   59 unop: '+' expr
   60     | '-' expr
   61     | TOK_NOT expr

   62 statement: block
   63          | while
   64          | ifelse
   65          | return
   66          | expr ';'
   67          | ';'

   68 block: blockHelp '}'
   69      | blockHelp '}' ';'

   70 blockHelp: blockHelp statement
   71          | '{' statement

   72 while: TOK_WHILE TOK_PARAM expr ')' statement

   73 return: TOK_RETURN ';'
   74       | TOK_RETURN expr ';'

   75 allocation: TOK_IDENT
   76           | TOK_STRING TOK_PARAM expr ')'
   77           | basetype '[' expr ']'

   78 call: funCall ')'

   79 funCall: funCall ',' expr
   80        | TOK_IDENT TOK_PARAM expr
   81        | TOK_IDENT TOK_PARAM

   82 variable: TOK_IDENT
   83         | expr '[' expr ']'
   84         | expr TOK_ARROW TOK_IDENT

   85 constant: TOK_INTCON
   86         | TOK_STRINGCON
   87         | TOK_CHARCON
   88         | TOK_NULL


Terminals, with rules where they appear

$end (0) 0
'%' (37) 47
'(' (40)
')' (41) 21 38 39 40 56 72 76 78
'*' (42) 45
'+' (43) 43 59
',' (44) 24 79
'-' (45) 44 60
'.' (46)
'/' (47) 46
';' (59) 7 10 14 15 16 19 20 37 66 67 69 73 74
'=' (61) 14 15 37 42
'[' (91) 77 83
']' (93) 77 83
'{' (123) 6 11 18 19 31 32 71
'}' (125) 9 16 17 18 19 68 69
error (256) 6 7
TOK_VOID (258) 33
TOK_CHAR (259)
TOK_INT (260) 34
TOK_STRING (261) 35 76
TOK_IF (262) 38 39 40
TOK_ELSE (263) 39 40
TOK_WHILE (264) 72
TOK_RETURN (265) 73 74
TOK_STRUCT (266) 11
TOK_NULL (267) 88
TOK_NEW (268) 41
TOK_VARDECL (269)
TOK_ARRAY (270) 13 27
TOK_ARROW (271) 84
TOK_BR (272)
TOK_EQ (273) 48
TOK_NE (274) 49
TOK_LT (275) 50
TOK_LE (276) 51
TOK_GT (277) 52
TOK_GE (278) 53
TOK_NOT (279) 61
TOK_IDENT (280) 11 12 13 27 28 36 75 80 81 82 84
TOK_INTCON (281) 85
TOK_CHARCON (282) 87
TOK_STRINGCON (283) 86
TOK_ROOT (284)
TOK_BLOCK (285)
TOK_CALL (286)
TOK_IFELSE (287)
TOK_INITDECL (288)
TOK_POS (289)
TOK_NEG (290)
TOK_NEWARRAY (291)
TOK_TYPEID (292)
TOK_FIELD (293)
TOK_NEWSTR (294)
TOK_PARAM (295) 25 26 38 39 40 56 72 76 80 81
TOK_FUNCTION (296)
TOK_PROTOTYPE (297)
TOK_DECLID (298)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
start (60)
    on left: 1, on right: 0
program (61)
    on left: 2 3 4 5 6 7 8, on right: 1 2 3 4 5 6 7
structdef (62)
    on left: 9, on right: 2
struc (63)
    on left: 10 11, on right: 9 10
fielddecl (64)
    on left: 12 13, on right: 10
globaldecl (65)
    on left: 14 15, on right: 3
function (66)
    on left: 16 17 18 19 20, on right: 4
func (67)
    on left: 21 22 23, on right: 16 17 18 19 20 21 22
param (68)
    on left: 24 25 26, on right: 22 24
identdec (69)
    on left: 27 28, on right: 14 15 23 24 25 37
fnbody (70)
    on left: 29 30 31 32, on right: 16 17 29 30
basetype (71)
    on left: 33 34 35 36, on right: 12 13 27 28 77
localdecl (72)
    on left: 37, on right: 30 32
ifelse (73)
    on left: 38 39 40, on right: 64
expr (74)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58,
    on right: 15 37 38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 56
    59 60 61 66 72 74 76 77 79 80 83 84
unop (75)
    on left: 59 60 61, on right: 54
statement (76)
    on left: 62 63 64 65 66 67, on right: 5 29 31 38 39 40 70 71 72
block (77)
    on left: 68 69, on right: 62
blockHelp (78)
    on left: 70 71, on right: 68 69 70
while (79)
    on left: 72, on right: 63
return (80)
    on left: 73 74, on right: 65
allocation (81)
    on left: 75 76 77, on right: 41
call (82)
    on left: 78, on right: 55
funCall (83)
    on left: 79 80 81, on right: 78 79
variable (84)
    on left: 82 83 84, on right: 57
constant (85)
    on left: 85 86 87 88, on right: 14 58


State 0

    0 $accept: . start $end

    $default  reduce using rule 8 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . structdef
    3        | program . globaldecl
    4        | program . function
    5        | program . statement
    6        | program . error '{'
    7        | program . error ';'

    error          shift, and go to state 4
    TOK_VOID       shift, and go to state 5
    TOK_INT        shift, and go to state 6
    TOK_STRING     shift, and go to state 7
    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_STRUCT     shift, and go to state 12
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 16
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24

    $end  reduce using rule 1 (start)

    structdef   go to state 25
    struc       go to state 26
    globaldecl  go to state 27
    function    go to state 28
    func        go to state 29
    identdec    go to state 30
    basetype    go to state 31
    ifelse      go to state 32
    expr        go to state 33
    unop        go to state 34
    statement   go to state 35
    block       go to state 36
    blockHelp   go to state 37
    while       go to state 38
    return      go to state 39
    call        go to state 40
    funCall     go to state 41
    variable    go to state 42
    constant    go to state 43


State 3

    0 $accept: start $end .

    $default  accept


State 4

    6 program: program error . '{'
    7        | program error . ';'

    '{'  shift, and go to state 44
    ';'  shift, and go to state 45


State 5

   33 basetype: TOK_VOID .

    $default  reduce using rule 33 (basetype)


State 6

   34 basetype: TOK_INT .

    $default  reduce using rule 34 (basetype)


State 7

   35 basetype: TOK_STRING .

    $default  reduce using rule 35 (basetype)


State 8

   38 ifelse: TOK_IF . TOK_PARAM expr ')' statement
   39       | TOK_IF . TOK_PARAM expr ')' statement TOK_ELSE statement

    TOK_PARAM  shift, and go to state 46


State 9

   40 ifelse: TOK_ELSE . TOK_IF TOK_PARAM expr ')' statement

    TOK_IF  shift, and go to state 47


State 10

   72 while: TOK_WHILE . TOK_PARAM expr ')' statement

    TOK_PARAM  shift, and go to state 48


State 11

   73 return: TOK_RETURN . ';'
   74       | TOK_RETURN . expr ';'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    ';'            shift, and go to state 50

    expr      go to state 51
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 12

   11 struc: TOK_STRUCT . TOK_IDENT '{'

    TOK_IDENT  shift, and go to state 52


State 13

   88 constant: TOK_NULL .

    $default  reduce using rule 88 (constant)


State 14

   41 expr: TOK_NEW . allocation

    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_STRING  shift, and go to state 53
    TOK_IDENT   shift, and go to state 54

    basetype    go to state 55
    allocation  go to state 56


State 15

   61 unop: TOK_NOT . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 57
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 16

   36 basetype: TOK_IDENT .
   80 funCall: TOK_IDENT . TOK_PARAM expr
   81        | TOK_IDENT . TOK_PARAM
   82 variable: TOK_IDENT .

    TOK_PARAM  shift, and go to state 58

    TOK_ARRAY  reduce using rule 36 (basetype)
    TOK_IDENT  reduce using rule 36 (basetype)
    $default   reduce using rule 82 (variable)


State 17

   85 constant: TOK_INTCON .

    $default  reduce using rule 85 (constant)


State 18

   87 constant: TOK_CHARCON .

    $default  reduce using rule 87 (constant)


State 19

   86 constant: TOK_STRINGCON .

    $default  reduce using rule 86 (constant)


State 20

   56 expr: TOK_PARAM . expr ')'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 59
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 21

   59 unop: '+' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 60
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 22

   60 unop: '-' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 61
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 23

   71 blockHelp: '{' . statement

    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24

    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 62
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 24

   67 statement: ';' .

    $default  reduce using rule 67 (statement)


State 25

    2 program: program structdef .

    $default  reduce using rule 2 (program)


State 26

    9 structdef: struc . '}'
   10 struc: struc . fielddecl ';'

    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_STRING  shift, and go to state 7
    TOK_IDENT   shift, and go to state 63
    '}'         shift, and go to state 64

    fielddecl  go to state 65
    basetype   go to state 66


State 27

    3 program: program globaldecl .

    $default  reduce using rule 3 (program)


State 28

    4 program: program function .

    $default  reduce using rule 4 (program)


State 29

   16 function: func . fnbody '}' ';'
   17         | func . fnbody '}'
   18         | func . '{' '}'
   19         | func . '{' '}' ';'
   20         | func . ';'
   21 func: func . ')'
   22     | func . param

    TOK_PARAM  shift, and go to state 67
    ')'        shift, and go to state 68
    '{'        shift, and go to state 69
    ';'        shift, and go to state 70

    param   go to state 71
    fnbody  go to state 72


State 30

   14 globaldecl: identdec . '=' constant ';'
   15           | identdec . '=' expr ';'
   23 func: identdec .

    '='  shift, and go to state 73

    $default  reduce using rule 23 (func)


State 31

   27 identdec: basetype . TOK_ARRAY TOK_IDENT
   28         | basetype . TOK_IDENT

    TOK_ARRAY  shift, and go to state 74
    TOK_IDENT  shift, and go to state 75


State 32

   64 statement: ifelse .

    $default  reduce using rule 64 (statement)


State 33

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   66 statement: expr . ';'
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ';'        shift, and go to state 90


State 34

   54 expr: unop .

    $default  reduce using rule 54 (expr)


State 35

    5 program: program statement .

    $default  reduce using rule 5 (program)


State 36

   62 statement: block .

    $default  reduce using rule 62 (statement)


State 37

   68 block: blockHelp . '}'
   69      | blockHelp . '}' ';'
   70 blockHelp: blockHelp . statement

    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24
    '}'            shift, and go to state 91

    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 92
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 38

   63 statement: while .

    $default  reduce using rule 63 (statement)


State 39

   65 statement: return .

    $default  reduce using rule 65 (statement)


State 40

   55 expr: call .

    $default  reduce using rule 55 (expr)


State 41

   78 call: funCall . ')'
   79 funCall: funCall . ',' expr

    ')'  shift, and go to state 93
    ','  shift, and go to state 94


State 42

   57 expr: variable .

    $default  reduce using rule 57 (expr)


State 43

   58 expr: constant .

    $default  reduce using rule 58 (expr)


State 44

    6 program: program error '{' .

    $default  reduce using rule 6 (program)


State 45

    7 program: program error ';' .

    $default  reduce using rule 7 (program)


State 46

   38 ifelse: TOK_IF TOK_PARAM . expr ')' statement
   39       | TOK_IF TOK_PARAM . expr ')' statement TOK_ELSE statement

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 95
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 47

   40 ifelse: TOK_ELSE TOK_IF . TOK_PARAM expr ')' statement

    TOK_PARAM  shift, and go to state 96


State 48

   72 while: TOK_WHILE TOK_PARAM . expr ')' statement

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 97
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 49

   80 funCall: TOK_IDENT . TOK_PARAM expr
   81        | TOK_IDENT . TOK_PARAM
   82 variable: TOK_IDENT .

    TOK_PARAM  shift, and go to state 58

    $default  reduce using rule 82 (variable)


State 50

   73 return: TOK_RETURN ';' .

    $default  reduce using rule 73 (return)


State 51

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   74 return: TOK_RETURN expr . ';'
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ';'        shift, and go to state 98


State 52

   11 struc: TOK_STRUCT TOK_IDENT . '{'

    '{'  shift, and go to state 99


State 53

   35 basetype: TOK_STRING .
   76 allocation: TOK_STRING . TOK_PARAM expr ')'

    TOK_PARAM  shift, and go to state 100

    $default  reduce using rule 35 (basetype)


State 54

   36 basetype: TOK_IDENT .
   75 allocation: TOK_IDENT .

    '['       reduce using rule 36 (basetype)
    '['       [reduce using rule 75 (allocation)]
    $default  reduce using rule 75 (allocation)


State 55

   77 allocation: basetype . '[' expr ']'

    '['  shift, and go to state 101


State 56

   41 expr: TOK_NEW allocation .

    $default  reduce using rule 41 (expr)


State 57

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   61 unop: TOK_NOT expr .
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '['        shift, and go to state 89

    $default  reduce using rule 61 (unop)


State 58

   80 funCall: TOK_IDENT TOK_PARAM . expr
   81        | TOK_IDENT TOK_PARAM .

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    $default  reduce using rule 81 (funCall)

    expr      go to state 102
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 59

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   56     | TOK_PARAM expr . ')'
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ')'        shift, and go to state 103


State 60

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   59 unop: '+' expr .
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '['        shift, and go to state 89

    $default  reduce using rule 59 (unop)


State 61

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   60 unop: '-' expr .
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '['        shift, and go to state 89

    $default  reduce using rule 60 (unop)


State 62

   71 blockHelp: '{' statement .

    $default  reduce using rule 71 (blockHelp)


State 63

   36 basetype: TOK_IDENT .

    $default  reduce using rule 36 (basetype)


State 64

    9 structdef: struc '}' .

    $default  reduce using rule 9 (structdef)


State 65

   10 struc: struc fielddecl . ';'

    ';'  shift, and go to state 104


State 66

   12 fielddecl: basetype . TOK_IDENT
   13          | basetype . TOK_ARRAY TOK_IDENT

    TOK_ARRAY  shift, and go to state 105
    TOK_IDENT  shift, and go to state 106


State 67

   25 param: TOK_PARAM . identdec
   26      | TOK_PARAM .

    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_STRING  shift, and go to state 7
    TOK_IDENT   shift, and go to state 63

    $default  reduce using rule 26 (param)

    identdec  go to state 107
    basetype  go to state 31


State 68

   21 func: func ')' .

    $default  reduce using rule 21 (func)


State 69

   18 function: func '{' . '}'
   19         | func '{' . '}' ';'
   31 fnbody: '{' . statement
   32       | '{' . localdecl

    TOK_VOID       shift, and go to state 5
    TOK_INT        shift, and go to state 6
    TOK_STRING     shift, and go to state 7
    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 16
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24
    '}'            shift, and go to state 108

    identdec   go to state 109
    basetype   go to state 31
    localdecl  go to state 110
    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 111
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 70

   20 function: func ';' .

    $default  reduce using rule 20 (function)


State 71

   22 func: func param .
   24 param: param . ',' identdec

    ','  shift, and go to state 112

    $default  reduce using rule 22 (func)


State 72

   16 function: func fnbody . '}' ';'
   17         | func fnbody . '}'
   29 fnbody: fnbody . statement
   30       | fnbody . localdecl

    TOK_VOID       shift, and go to state 5
    TOK_INT        shift, and go to state 6
    TOK_STRING     shift, and go to state 7
    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 16
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24
    '}'            shift, and go to state 113

    identdec   go to state 109
    basetype   go to state 31
    localdecl  go to state 114
    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 115
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 73

   14 globaldecl: identdec '=' . constant ';'
   15           | identdec '=' . expr ';'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 116
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 117


State 74

   27 identdec: basetype TOK_ARRAY . TOK_IDENT

    TOK_IDENT  shift, and go to state 118


State 75

   28 identdec: basetype TOK_IDENT .

    $default  reduce using rule 28 (identdec)


State 76

   84 variable: expr TOK_ARROW . TOK_IDENT

    TOK_IDENT  shift, and go to state 119


State 77

   48 expr: expr TOK_EQ . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 120
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 78

   49 expr: expr TOK_NE . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 121
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 79

   50 expr: expr TOK_LT . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 122
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 80

   51 expr: expr TOK_LE . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 123
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 81

   52 expr: expr TOK_GT . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 124
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 82

   53 expr: expr TOK_GE . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 125
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 83

   42 expr: expr '=' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 126
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 84

   43 expr: expr '+' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 127
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 85

   44 expr: expr '-' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 128
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 86

   45 expr: expr '*' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 129
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 87

   46 expr: expr '/' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 130
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 88

   47 expr: expr '%' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 131
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 89

   83 variable: expr '[' . expr ']'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 132
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 90

   66 statement: expr ';' .

    $default  reduce using rule 66 (statement)


State 91

   68 block: blockHelp '}' .
   69      | blockHelp '}' . ';'

    ';'  shift, and go to state 133

    ';'       [reduce using rule 68 (block)]
    $default  reduce using rule 68 (block)


State 92

   70 blockHelp: blockHelp statement .

    $default  reduce using rule 70 (blockHelp)


State 93

   78 call: funCall ')' .

    $default  reduce using rule 78 (call)


State 94

   79 funCall: funCall ',' . expr

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 134
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 95

   38 ifelse: TOK_IF TOK_PARAM expr . ')' statement
   39       | TOK_IF TOK_PARAM expr . ')' statement TOK_ELSE statement
   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ')'        shift, and go to state 135


State 96

   40 ifelse: TOK_ELSE TOK_IF TOK_PARAM . expr ')' statement

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 136
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 97

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   72 while: TOK_WHILE TOK_PARAM expr . ')' statement
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ')'        shift, and go to state 137


State 98

   74 return: TOK_RETURN expr ';' .

    $default  reduce using rule 74 (return)


State 99

   11 struc: TOK_STRUCT TOK_IDENT '{' .

    $default  reduce using rule 11 (struc)


State 100

   76 allocation: TOK_STRING TOK_PARAM . expr ')'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 138
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 101

   77 allocation: basetype '[' . expr ']'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 139
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 102

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   80 funCall: TOK_IDENT TOK_PARAM expr .
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 80 (funCall)


State 103

   56 expr: TOK_PARAM expr ')' .

    $default  reduce using rule 56 (expr)


State 104

   10 struc: struc fielddecl ';' .

    $default  reduce using rule 10 (struc)


State 105

   13 fielddecl: basetype TOK_ARRAY . TOK_IDENT

    TOK_IDENT  shift, and go to state 140


State 106

   12 fielddecl: basetype TOK_IDENT .

    $default  reduce using rule 12 (fielddecl)


State 107

   25 param: TOK_PARAM identdec .

    $default  reduce using rule 25 (param)


State 108

   18 function: func '{' '}' .
   19         | func '{' '}' . ';'

    ';'  shift, and go to state 141

    ';'       [reduce using rule 18 (function)]
    $default  reduce using rule 18 (function)


State 109

   37 localdecl: identdec . '=' expr ';'

    '='  shift, and go to state 142


State 110

   32 fnbody: '{' localdecl .

    $default  reduce using rule 32 (fnbody)


State 111

   31 fnbody: '{' statement .

    $default  reduce using rule 31 (fnbody)


State 112

   24 param: param ',' . identdec

    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_STRING  shift, and go to state 7
    TOK_IDENT   shift, and go to state 63

    identdec  go to state 143
    basetype  go to state 31


State 113

   16 function: func fnbody '}' . ';'
   17         | func fnbody '}' .

    ';'  shift, and go to state 144

    ';'       [reduce using rule 17 (function)]
    $default  reduce using rule 17 (function)


State 114

   30 fnbody: fnbody localdecl .

    $default  reduce using rule 30 (fnbody)


State 115

   29 fnbody: fnbody statement .

    $default  reduce using rule 29 (fnbody)


State 116

   15 globaldecl: identdec '=' expr . ';'
   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ';'        shift, and go to state 145


State 117

   14 globaldecl: identdec '=' constant . ';'
   58 expr: constant .

    ';'  shift, and go to state 146

    ';'       [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


State 118

   27 identdec: basetype TOK_ARRAY TOK_IDENT .

    $default  reduce using rule 27 (identdec)


State 119

   84 variable: expr TOK_ARROW TOK_IDENT .

    $default  reduce using rule 84 (variable)


State 120

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   48     | expr TOK_EQ expr .
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 48 (expr)


State 121

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   49     | expr TOK_NE expr .
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 49 (expr)


State 122

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   50     | expr TOK_LT expr .
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 50 (expr)


State 123

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   51     | expr TOK_LE expr .
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 51 (expr)


State 124

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   52     | expr TOK_GT expr .
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 52 (expr)


State 125

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   53     | expr TOK_GE expr .
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 53 (expr)


State 126

   42 expr: expr . '=' expr
   42     | expr '=' expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 42 (expr)


State 127

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   43     | expr '+' expr .
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 43 (expr)


State 128

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   44     | expr '-' expr .
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 44 (expr)


State 129

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   45     | expr '*' expr .
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '['        shift, and go to state 89

    $default  reduce using rule 45 (expr)


State 130

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   46     | expr '/' expr .
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '['        shift, and go to state 89

    $default  reduce using rule 46 (expr)


State 131

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   47     | expr '%' expr .
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    '['        shift, and go to state 89

    $default  reduce using rule 47 (expr)


State 132

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   83         | expr '[' expr . ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ']'        shift, and go to state 147


State 133

   69 block: blockHelp '}' ';' .

    $default  reduce using rule 69 (block)


State 134

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   79 funCall: funCall ',' expr .
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 79 (funCall)


State 135

   38 ifelse: TOK_IF TOK_PARAM expr ')' . statement
   39       | TOK_IF TOK_PARAM expr ')' . statement TOK_ELSE statement

    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24

    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 148
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 136

   40 ifelse: TOK_ELSE TOK_IF TOK_PARAM expr . ')' statement
   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ')'        shift, and go to state 149


State 137

   72 while: TOK_WHILE TOK_PARAM expr ')' . statement

    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24

    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 150
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 138

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   76 allocation: TOK_STRING TOK_PARAM expr . ')'
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ')'        shift, and go to state 151


State 139

   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   77 allocation: basetype '[' expr . ']'
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ']'        shift, and go to state 152


State 140

   13 fielddecl: basetype TOK_ARRAY TOK_IDENT .

    $default  reduce using rule 13 (fielddecl)


State 141

   19 function: func '{' '}' ';' .

    $default  reduce using rule 19 (function)


State 142

   37 localdecl: identdec '=' . expr ';'

    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22

    expr      go to state 153
    unop      go to state 34
    call      go to state 40
    funCall   go to state 41
    variable  go to state 42
    constant  go to state 43


State 143

   24 param: param ',' identdec .

    $default  reduce using rule 24 (param)


State 144

   16 function: func fnbody '}' ';' .

    $default  reduce using rule 16 (function)


State 145

   15 globaldecl: identdec '=' expr ';' .

    $default  reduce using rule 15 (globaldecl)


State 146

   14 globaldecl: identdec '=' constant ';' .

    $default  reduce using rule 14 (globaldecl)


State 147

   83 variable: expr '[' expr ']' .

    $default  reduce using rule 83 (variable)


State 148

   38 ifelse: TOK_IF TOK_PARAM expr ')' statement .
   39       | TOK_IF TOK_PARAM expr ')' statement . TOK_ELSE statement

    TOK_ELSE  shift, and go to state 154

    $default  reduce using rule 38 (ifelse)


State 149

   40 ifelse: TOK_ELSE TOK_IF TOK_PARAM expr ')' . statement

    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24

    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 155
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 150

   72 while: TOK_WHILE TOK_PARAM expr ')' statement .

    $default  reduce using rule 72 (while)


State 151

   76 allocation: TOK_STRING TOK_PARAM expr ')' .

    $default  reduce using rule 76 (allocation)


State 152

   77 allocation: basetype '[' expr ']' .

    $default  reduce using rule 77 (allocation)


State 153

   37 localdecl: identdec '=' expr . ';'
   42 expr: expr . '=' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TOK_EQ expr
   49     | expr . TOK_NE expr
   50     | expr . TOK_LT expr
   51     | expr . TOK_LE expr
   52     | expr . TOK_GT expr
   53     | expr . TOK_GE expr
   83 variable: expr . '[' expr ']'
   84         | expr . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 76
    TOK_EQ     shift, and go to state 77
    TOK_NE     shift, and go to state 78
    TOK_LT     shift, and go to state 79
    TOK_LE     shift, and go to state 80
    TOK_GT     shift, and go to state 81
    TOK_GE     shift, and go to state 82
    '='        shift, and go to state 83
    '+'        shift, and go to state 84
    '-'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '%'        shift, and go to state 88
    '['        shift, and go to state 89
    ';'        shift, and go to state 156


State 154

   39 ifelse: TOK_IF TOK_PARAM expr ')' statement TOK_ELSE . statement

    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_NOT        shift, and go to state 15
    TOK_IDENT      shift, and go to state 49
    TOK_INTCON     shift, and go to state 17
    TOK_CHARCON    shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_PARAM      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 23
    ';'            shift, and go to state 24

    ifelse     go to state 32
    expr       go to state 33
    unop       go to state 34
    statement  go to state 157
    block      go to state 36
    blockHelp  go to state 37
    while      go to state 38
    return     go to state 39
    call       go to state 40
    funCall    go to state 41
    variable   go to state 42
    constant   go to state 43


State 155

   40 ifelse: TOK_ELSE TOK_IF TOK_PARAM expr ')' statement .

    $default  reduce using rule 40 (ifelse)


State 156

   37 localdecl: identdec '=' expr ';' .

    $default  reduce using rule 37 (localdecl)


State 157

   39 ifelse: TOK_IF TOK_PARAM expr ')' statement TOK_ELSE statement .

    $default  reduce using rule 39 (ifelse)
